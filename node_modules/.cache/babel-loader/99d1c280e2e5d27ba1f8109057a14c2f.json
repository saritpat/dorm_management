{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (\n    /******/\n    (() => {\n      // webpackBootstrap\n\n      /******/\n      \"use strict\";\n      /******/\n\n      var __webpack_modules__ = [\n        /* 0 */\n      ,\n      /* 1 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n        exports.arrayByteLength = arrayByteLength;\n        exports.arraysToBytes = arraysToBytes;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createPromiseCapability = createPromiseCapability;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.escapeString = escapeString;\n        exports.getModificationDate = getModificationDate;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isAscii = isAscii;\n        exports.isSameOrigin = isSameOrigin;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF16BEString = stringToUTF16BEString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n\n        __w_pdfjs_require__(2);\n\n        const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        const RenderingIntentFlag = {\n          ANY: 0x01,\n          DISPLAY: 0x02,\n          PRINT: 0x04,\n          ANNOTATIONS_FORMS: 0x10,\n          ANNOTATIONS_STORAGE: 0x20,\n          ANNOTATIONS_DISABLE: 0x40,\n          OPLIST: 0x100\n        };\n        exports.RenderingIntentFlag = RenderingIntentFlag;\n        const AnnotationMode = {\n          DISABLE: 0,\n          ENABLE: 1,\n          ENABLE_FORMS: 2,\n          ENABLE_STORAGE: 3\n        };\n        exports.AnnotationMode = AnnotationMode;\n        const PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        const TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        const ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        const AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        const AnnotationStateModelType = {\n          MARKED: \"Marked\",\n          REVIEW: \"Review\"\n        };\n        exports.AnnotationStateModelType = AnnotationStateModelType;\n        const AnnotationMarkedState = {\n          MARKED: \"Marked\",\n          UNMARKED: \"Unmarked\"\n        };\n        exports.AnnotationMarkedState = AnnotationMarkedState;\n        const AnnotationReviewState = {\n          ACCEPTED: \"Accepted\",\n          REJECTED: \"Rejected\",\n          CANCELLED: \"Cancelled\",\n          COMPLETED: \"Completed\",\n          NONE: \"None\"\n        };\n        exports.AnnotationReviewState = AnnotationReviewState;\n        const AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        const AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        const AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        const AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        const AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        const DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        const PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        const StreamType = {\n          UNKNOWN: \"UNKNOWN\",\n          FLATE: \"FLATE\",\n          LZW: \"LZW\",\n          DCT: \"DCT\",\n          JPX: \"JPX\",\n          JBIG: \"JBIG\",\n          A85: \"A85\",\n          AHX: \"AHX\",\n          CCF: \"CCF\",\n          RLX: \"RLX\"\n        };\n        exports.StreamType = StreamType;\n        const FontType = {\n          UNKNOWN: \"UNKNOWN\",\n          TYPE1: \"TYPE1\",\n          TYPE1STANDARD: \"TYPE1STANDARD\",\n          TYPE1C: \"TYPE1C\",\n          CIDFONTTYPE0: \"CIDFONTTYPE0\",\n          CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n          TRUETYPE: \"TRUETYPE\",\n          CIDFONTTYPE2: \"CIDFONTTYPE2\",\n          TYPE3: \"TYPE3\",\n          OPENTYPE: \"OPENTYPE\",\n          TYPE0: \"TYPE0\",\n          MMTYPE1: \"MMTYPE1\"\n        };\n        exports.FontType = FontType;\n        const VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        const CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1,\n          STREAM: 2\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        const OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotations: 78,\n          endAnnotations: 79,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintJpegXObject: 82,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        const UNSUPPORTED_FEATURES = {\n          unknown: \"unknown\",\n          forms: \"forms\",\n          javaScript: \"javaScript\",\n          signatures: \"signatures\",\n          smask: \"smask\",\n          shadingPattern: \"shadingPattern\",\n          font: \"font\",\n          errorTilingPattern: \"errorTilingPattern\",\n          errorExtGState: \"errorExtGState\",\n          errorXObject: \"errorXObject\",\n          errorFontLoadType3: \"errorFontLoadType3\",\n          errorFontState: \"errorFontState\",\n          errorFontMissing: \"errorFontMissing\",\n          errorFontTranslate: \"errorFontTranslate\",\n          errorColorSpace: \"errorColorSpace\",\n          errorOperatorList: \"errorOperatorList\",\n          errorFontToUnicode: \"errorFontToUnicode\",\n          errorFontLoadNative: \"errorFontLoadNative\",\n          errorFontBuildPath: \"errorFontBuildPath\",\n          errorFontGetPath: \"errorFontGetPath\",\n          errorMarkedContent: \"errorMarkedContent\",\n          errorContentSubStream: \"errorContentSubStream\"\n        };\n        exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n        const PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        let verbosity = VerbosityLevel.WARNINGS;\n\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(`Info: ${msg}`);\n          }\n        }\n\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(`Warning: ${msg}`);\n          }\n        }\n\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n\n        function isSameOrigin(baseUrl, otherUrl) {\n          let base;\n\n          try {\n            base = new URL(baseUrl);\n\n            if (!base.origin || base.origin === \"null\") {\n              return false;\n            }\n          } catch (e) {\n            return false;\n          }\n\n          const other = new URL(otherUrl, base);\n          return base.origin === other.origin;\n        }\n\n        function _isValidProtocol(url) {\n          if (!url) {\n            return false;\n          }\n\n          switch (url.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function createValidAbsoluteUrl(url) {\n          let baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (!url) {\n            return null;\n          }\n\n          try {\n            if (options && typeof url === \"string\") {\n              if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                const dots = url.match(/\\./g);\n\n                if (dots && dots.length >= 2) {\n                  url = `http://${url}`;\n                }\n              }\n\n              if (options.tryConvertEncoding) {\n                try {\n                  url = stringToUTF8String(url);\n                } catch (ex) {}\n              }\n            }\n\n            const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch (ex) {}\n\n          return null;\n        }\n\n        function shadow(obj, prop, value) {\n          Object.defineProperty(obj, prop, {\n            value,\n            enumerable: true,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n\n        const BaseException = function BaseExceptionClosure() {\n          function BaseException(message, name) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n\n            this.message = message;\n            this.name = name;\n          }\n\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n\n        exports.BaseException = BaseException;\n\n        class PasswordException extends BaseException {\n          constructor(msg, code) {\n            super(msg, \"PasswordException\");\n            this.code = code;\n          }\n\n        }\n\n        exports.PasswordException = PasswordException;\n\n        class UnknownErrorException extends BaseException {\n          constructor(msg, details) {\n            super(msg, \"UnknownErrorException\");\n            this.details = details;\n          }\n\n        }\n\n        exports.UnknownErrorException = UnknownErrorException;\n\n        class InvalidPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"InvalidPDFException\");\n          }\n\n        }\n\n        exports.InvalidPDFException = InvalidPDFException;\n\n        class MissingPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"MissingPDFException\");\n          }\n\n        }\n\n        exports.MissingPDFException = MissingPDFException;\n\n        class UnexpectedResponseException extends BaseException {\n          constructor(msg, status) {\n            super(msg, \"UnexpectedResponseException\");\n            this.status = status;\n          }\n\n        }\n\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n\n        class FormatError extends BaseException {\n          constructor(msg) {\n            super(msg, \"FormatError\");\n          }\n\n        }\n\n        exports.FormatError = FormatError;\n\n        class AbortException extends BaseException {\n          constructor(msg) {\n            super(msg, \"AbortException\");\n          }\n\n        }\n\n        exports.AbortException = AbortException;\n\n        function bytesToString(bytes) {\n          if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) {\n            unreachable(\"Invalid argument for bytesToString\");\n          }\n\n          const length = bytes.length;\n          const MAX_ARGUMENT_COUNT = 8192;\n\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n\n          const strBuf = [];\n\n          for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function stringToBytes(str) {\n          if (typeof str !== \"string\") {\n            unreachable(\"Invalid argument for stringToBytes\");\n          }\n\n          const length = str.length;\n          const bytes = new Uint8Array(length);\n\n          for (let i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n\n          return bytes;\n        }\n\n        function arrayByteLength(arr) {\n          if (arr.length !== undefined) {\n            return arr.length;\n          }\n\n          if (arr.byteLength !== undefined) {\n            return arr.byteLength;\n          }\n\n          unreachable(\"Invalid argument for arrayByteLength\");\n        }\n\n        function arraysToBytes(arr) {\n          const length = arr.length;\n\n          if (length === 1 && arr[0] instanceof Uint8Array) {\n            return arr[0];\n          }\n\n          let resultLength = 0;\n\n          for (let i = 0; i < length; i++) {\n            resultLength += arrayByteLength(arr[i]);\n          }\n\n          let pos = 0;\n          const data = new Uint8Array(resultLength);\n\n          for (let i = 0; i < length; i++) {\n            let item = arr[i];\n\n            if (!(item instanceof Uint8Array)) {\n              if (typeof item === \"string\") {\n                item = stringToBytes(item);\n              } else {\n                item = new Uint8Array(item);\n              }\n            }\n\n            const itemLength = item.byteLength;\n            data.set(item, pos);\n            pos += itemLength;\n          }\n\n          return data;\n        }\n\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n\n        function objectFromMap(map) {\n          const obj = Object.create(null);\n\n          for (const [key, value] of map) {\n            obj[key] = value;\n          }\n\n          return obj;\n        }\n\n        function isLittleEndian() {\n          const buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n\n        const IsLittleEndianCached = {\n          get value() {\n            return shadow(this, \"value\", isLittleEndian());\n          }\n\n        };\n        exports.IsLittleEndianCached = IsLittleEndianCached;\n\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n\n        const IsEvalSupportedCached = {\n          get value() {\n            return shadow(this, \"value\", isEvalSupported());\n          }\n\n        };\n        exports.IsEvalSupportedCached = IsEvalSupportedCached;\n        const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n        class Util {\n          static makeHexColor(r, g, b) {\n            return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n          }\n\n          static transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n\n          static applyTransform(p, m) {\n            const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n\n          static applyInverseTransform(p, m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n\n          static getAxialAlignedBoundingBox(r, m) {\n            const p1 = Util.applyTransform(r, m);\n            const p2 = Util.applyTransform(r.slice(2, 4), m);\n            const p3 = Util.applyTransform([r[0], r[3]], m);\n            const p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n\n          static inverseTransform(m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n\n          static apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n\n          static singularValueDecompose2dScale(m) {\n            const transpose = [m[0], m[2], m[1], m[3]];\n            const a = m[0] * transpose[0] + m[1] * transpose[2];\n            const b = m[0] * transpose[1] + m[1] * transpose[3];\n            const c = m[2] * transpose[0] + m[3] * transpose[2];\n            const d = m[2] * transpose[1] + m[3] * transpose[3];\n            const first = (a + d) / 2;\n            const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n            const sx = first + second || 1;\n            const sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n\n          static normalizeRect(rect) {\n            const r = rect.slice(0);\n\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n\n            return r;\n          }\n\n          static intersect(rect1, rect2) {\n            function compare(a, b) {\n              return a - b;\n            }\n\n            const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n            const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n            const result = [];\n            rect1 = Util.normalizeRect(rect1);\n            rect2 = Util.normalizeRect(rect2);\n\n            if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n              result[0] = orderedX[1];\n              result[2] = orderedX[2];\n            } else {\n              return null;\n            }\n\n            if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n              result[1] = orderedY[1];\n              result[3] = orderedY[2];\n            } else {\n              return null;\n            }\n\n            return result;\n          }\n\n          static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            const tvalues = [],\n                  bounds = [[], []];\n            let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n            for (let i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n\n                t = -c / b;\n\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n\n                continue;\n              }\n\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              t1 = (-b + sqrtb2ac) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n\n              t2 = (-b - sqrtb2ac) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n\n            let j = tvalues.length,\n                mt;\n            const jlen = j;\n\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n          }\n\n        }\n\n        exports.Util = Util;\n        const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n\n        function stringToPDFString(str) {\n          if (str[0] >= \"\\xEF\") {\n            let encoding;\n\n            if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n              encoding = \"utf-16be\";\n            } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n              encoding = \"utf-16le\";\n            } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n              encoding = \"utf-8\";\n            }\n\n            if (encoding) {\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = stringToBytes(str);\n                return decoder.decode(buffer);\n              } catch (ex) {\n                warn(`stringToPDFString: \"${ex}\".`);\n              }\n            }\n          }\n\n          const strBuf = [];\n\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function escapeString(str) {\n          return str.replace(/([()\\\\\\n\\r])/g, match => {\n            if (match === \"\\n\") {\n              return \"\\\\n\";\n            } else if (match === \"\\r\") {\n              return \"\\\\r\";\n            }\n\n            return `\\\\${match}`;\n          });\n        }\n\n        function isAscii(str) {\n          return /^[\\x00-\\x7F]*$/.test(str);\n        }\n\n        function stringToUTF16BEString(str) {\n          const buf = [\"\\xFE\\xFF\"];\n\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const char = str.charCodeAt(i);\n            buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n          }\n\n          return buf.join(\"\");\n        }\n\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n        }\n\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n\n          for (let i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function getModificationDate() {\n          let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n\n        function createPromiseCapability() {\n          const capability = Object.create(null);\n          let isSettled = false;\n          Object.defineProperty(capability, \"settled\", {\n            get() {\n              return isSettled;\n            }\n\n          });\n          capability.promise = new Promise(function (resolve, reject) {\n            capability.resolve = function (data) {\n              isSettled = true;\n              resolve(data);\n            };\n\n            capability.reject = function (reason) {\n              isSettled = true;\n              reject(reason);\n            };\n          });\n          return capability;\n        }\n        /***/\n\n      },\n      /* 2 */\n\n      /***/\n      (__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n        var _is_node = __w_pdfjs_require__(3);\n\n        ;\n        /***/\n      },\n      /* 3 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.isNodeJS = void 0;\n        const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        /***/\n      },\n      /* 4 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.build = exports.RenderTask = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n        exports.getDocument = getDocument;\n        exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n        exports.version = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _font_loader = __w_pdfjs_require__(7);\n\n        var _node_utils = __w_pdfjs_require__(8);\n\n        var _annotation_storage = __w_pdfjs_require__(9);\n\n        var _canvas = __w_pdfjs_require__(10);\n\n        var _worker_options = __w_pdfjs_require__(12);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _message_handler = __w_pdfjs_require__(13);\n\n        var _metadata = __w_pdfjs_require__(14);\n\n        var _optional_content_config = __w_pdfjs_require__(15);\n\n        var _transport_stream = __w_pdfjs_require__(16);\n\n        var _xfa_text = __w_pdfjs_require__(17);\n\n        const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        const RENDERING_CANCELLED_TIMEOUT = 100;\n        const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        const DefaultStandardFontDataFactory = _is_node.isNodeJS ? _node_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n        let createPDFNetworkStream;\n\n        function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n          createPDFNetworkStream = pdfNetworkStreamFactory;\n        }\n\n        function getDocument(src) {\n          const task = new PDFDocumentLoadingTask();\n          let source;\n\n          if (typeof src === \"string\" || src instanceof URL) {\n            source = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            source = {\n              data: src\n            };\n          } else if (src instanceof PDFDataRangeTransport) {\n            source = {\n              range: src\n            };\n          } else {\n            if (typeof src !== \"object\") {\n              throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\n            }\n\n            if (!src.url && !src.data && !src.range) {\n              throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n            }\n\n            source = src;\n          }\n\n          const params = Object.create(null);\n          let rangeTransport = null,\n              worker = null;\n\n          for (const key in source) {\n            const value = source[key];\n\n            switch (key) {\n              case \"url\":\n                if (typeof window !== \"undefined\") {\n                  try {\n                    params[key] = new URL(value, window.location).href;\n                    continue;\n                  } catch (ex) {\n                    (0, _util.warn)(`Cannot create valid URL: \"${ex}\".`);\n                  }\n                } else if (typeof value === \"string\" || value instanceof URL) {\n                  params[key] = value.toString();\n                  continue;\n                }\n\n                throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n\n              case \"range\":\n                rangeTransport = value;\n                continue;\n\n              case \"worker\":\n                worker = value;\n                continue;\n\n              case \"data\":\n                if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n                  params[key] = new Uint8Array(value);\n                } else if (value instanceof Uint8Array) {\n                  break;\n                } else if (typeof value === \"string\") {\n                  params[key] = (0, _util.stringToBytes)(value);\n                } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n                  params[key] = new Uint8Array(value);\n                } else if ((0, _util.isArrayBuffer)(value)) {\n                  params[key] = new Uint8Array(value);\n                } else {\n                  throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\n                }\n\n                continue;\n            }\n\n            params[key] = value;\n          }\n\n          params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n          params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n          params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n          params.ignoreErrors = params.stopAtErrors !== true;\n          params.fontExtraProperties = params.fontExtraProperties === true;\n          params.pdfBug = params.pdfBug === true;\n          params.enableXfa = params.enableXfa === true;\n\n          if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n            params.docBaseUrl = null;\n          }\n\n          if (!Number.isInteger(params.maxImageSize)) {\n            params.maxImageSize = -1;\n          }\n\n          if (typeof params.useWorkerFetch !== \"boolean\") {\n            params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory;\n          }\n\n          if (typeof params.isEvalSupported !== \"boolean\") {\n            params.isEvalSupported = true;\n          }\n\n          if (typeof params.disableFontFace !== \"boolean\") {\n            params.disableFontFace = _is_node.isNodeJS;\n          }\n\n          if (typeof params.useSystemFonts !== \"boolean\") {\n            params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace;\n          }\n\n          if (typeof params.ownerDocument === \"undefined\") {\n            params.ownerDocument = globalThis.document;\n          }\n\n          if (typeof params.disableRange !== \"boolean\") {\n            params.disableRange = false;\n          }\n\n          if (typeof params.disableStream !== \"boolean\") {\n            params.disableStream = false;\n          }\n\n          if (typeof params.disableAutoFetch !== \"boolean\") {\n            params.disableAutoFetch = false;\n          }\n\n          (0, _util.setVerbosityLevel)(params.verbosity);\n\n          if (!worker) {\n            const workerParams = {\n              verbosity: params.verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n\n          const docId = task.docId;\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n            const networkStreamPromise = new Promise(function (resolve) {\n              let networkStream;\n\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length: params.length,\n                  initialData: params.initialData,\n                  progressiveDone: params.progressiveDone,\n                  contentDispositionFilename: params.contentDispositionFilename,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                }, rangeTransport);\n              } else if (!params.data) {\n                networkStream = createPDFNetworkStream({\n                  url: params.url,\n                  length: params.length,\n                  httpHeaders: params.httpHeaders,\n                  withCredentials: params.withCredentials,\n                  rangeChunkSize: params.rangeChunkSize,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                });\n              }\n\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n              let [workerId, networkStream] = _ref;\n\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n\n              const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n\n        async function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          if (pdfDataRangeTransport) {\n            source.length = pdfDataRangeTransport.length;\n            source.initialData = pdfDataRangeTransport.initialData;\n            source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n            source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n          }\n\n          const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n            docId,\n            apiVersion: '2.13.216',\n            source: {\n              data: source.data,\n              url: source.url,\n              password: source.password,\n              disableAutoFetch: source.disableAutoFetch,\n              rangeChunkSize: source.rangeChunkSize,\n              length: source.length\n            },\n            maxImageSize: source.maxImageSize,\n            disableFontFace: source.disableFontFace,\n            docBaseUrl: source.docBaseUrl,\n            ignoreErrors: source.ignoreErrors,\n            isEvalSupported: source.isEvalSupported,\n            fontExtraProperties: source.fontExtraProperties,\n            enableXfa: source.enableXfa,\n            useSystemFonts: source.useSystemFonts,\n            cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n            standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\n          });\n\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        }\n\n        class PDFDocumentLoadingTask {\n          static get idCounters() {\n            return (0, _util.shadow)(this, \"idCounters\", {\n              doc: 0\n            });\n          }\n\n          constructor() {\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          async destroy() {\n            this.destroyed = true;\n            await this._transport?.destroy();\n            this._transport = null;\n\n            if (this._worker) {\n              this._worker.destroy();\n\n              this._worker = null;\n            }\n          }\n\n        }\n\n        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n\n        class PDFDataRangeTransport {\n          constructor(length, initialData) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = (0, _util.createPromiseCapability)();\n          }\n\n          addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n\n          addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n\n          addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n\n          addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n\n          onDataRange(begin, chunk) {\n            for (const listener of this._rangeListeners) {\n              listener(begin, chunk);\n            }\n          }\n\n          onDataProgress(loaded, total) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressListeners) {\n                listener(loaded, total);\n              }\n            });\n          }\n\n          onDataProgressiveRead(chunk) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveReadListeners) {\n                listener(chunk);\n              }\n            });\n          }\n\n          onDataProgressiveDone() {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveDoneListeners) {\n                listener();\n              }\n            });\n          }\n\n          transportReady() {\n            this._readyCapability.resolve();\n          }\n\n          requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n\n          abort() {}\n\n        }\n\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n        class PDFDocumentProxy {\n          constructor(pdfInfo, transport) {\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n            Object.defineProperty(this, \"fingerprint\", {\n              get() {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\n                return this.fingerprints[0];\n              }\n\n            });\n            Object.defineProperty(this, \"getStats\", {\n              value: async () => {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\");\n                return this.stats || {\n                  streamTypes: {},\n                  fontTypes: {}\n                };\n              }\n            });\n          }\n\n          get annotationStorage() {\n            return this._transport.annotationStorage;\n          }\n\n          get numPages() {\n            return this._pdfInfo.numPages;\n          }\n\n          get fingerprints() {\n            return this._pdfInfo.fingerprints;\n          }\n\n          get stats() {\n            return this._transport.stats;\n          }\n\n          get isPureXfa() {\n            return !!this._transport._htmlForXfa;\n          }\n\n          get allXfaHtml() {\n            return this._transport._htmlForXfa;\n          }\n\n          getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n\n          getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n\n          getDestinations() {\n            return this._transport.getDestinations();\n          }\n\n          getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n\n          getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n\n          getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n\n          getPageMode() {\n            return this._transport.getPageMode();\n          }\n\n          getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n\n          getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n\n          getAttachments() {\n            return this._transport.getAttachments();\n          }\n\n          getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n\n          getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n\n          getOutline() {\n            return this._transport.getOutline();\n          }\n\n          getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n\n          getPermissions() {\n            return this._transport.getPermissions();\n          }\n\n          getMetadata() {\n            return this._transport.getMetadata();\n          }\n\n          getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n\n          getData() {\n            return this._transport.getData();\n          }\n\n          getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n\n          cleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n\n          destroy() {\n            return this.loadingTask.destroy();\n          }\n\n          get loadingParams() {\n            return this._transport.loadingParams;\n          }\n\n          get loadingTask() {\n            return this._transport.loadingTask;\n          }\n\n          saveDocument() {\n            if (this._transport.annotationStorage.size <= 0) {\n              (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n\n            return this._transport.saveDocument();\n          }\n\n          getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n\n          hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n\n          getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n\n        }\n\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n\n        class PDFPageProxy {\n          constructor(pageIndex, pageInfo, transport, ownerDocument) {\n            let pdfBug = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._ownerDocument = ownerDocument;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this.cleanupAfterRender = false;\n            this.pendingCleanup = false;\n            this._intentStates = new Map();\n            this._annotationPromises = new Map();\n            this.destroyed = false;\n          }\n\n          get pageNumber() {\n            return this._pageIndex + 1;\n          }\n\n          get rotate() {\n            return this._pageInfo.rotate;\n          }\n\n          get ref() {\n            return this._pageInfo.ref;\n          }\n\n          get userUnit() {\n            return this._pageInfo.userUnit;\n          }\n\n          get view() {\n            return this._pageInfo.view;\n          }\n\n          getViewport() {\n            let {\n              scale,\n              rotation = this.rotate,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          getAnnotations() {\n            let {\n              intent = \"display\"\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            const intentArgs = this._transport.getRenderingIntent(intent);\n\n            let promise = this._annotationPromises.get(intentArgs.cacheKey);\n\n            if (!promise) {\n              promise = this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n\n              this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n              promise = promise.then(annotations => {\n                for (const annotation of annotations) {\n                  if (annotation.titleObj !== undefined) {\n                    Object.defineProperty(annotation, \"title\", {\n                      get() {\n                        (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\");\n                        return annotation.titleObj.str;\n                      }\n\n                    });\n                  }\n\n                  if (annotation.contentsObj !== undefined) {\n                    Object.defineProperty(annotation, \"contents\", {\n                      get() {\n                        (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\");\n                        return annotation.contentsObj.str;\n                      }\n\n                    });\n                  }\n                }\n\n                return annotations;\n              });\n            }\n\n            return promise;\n          }\n\n          getJSActions() {\n            return this._jsActionsPromise ||= this._transport.getPageJSActions(this._pageIndex);\n          }\n\n          async getXfa() {\n            return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n          }\n\n          render(_ref2) {\n            let {\n              canvasContext,\n              viewport,\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              transform = null,\n              imageLayer = null,\n              canvasFactory = null,\n              background = null,\n              optionalContentConfigPromise = null,\n              annotationCanvasMap = null\n            } = _ref2;\n\n            if (arguments[0]?.renderInteractiveForms !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n              if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_FORMS;\n              }\n            }\n\n            if (arguments[0]?.includeAnnotationStorage !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n              if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_STORAGE;\n              }\n            }\n\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode);\n\n            this.pendingCleanup = false;\n\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n\n            const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n              ownerDocument: this._ownerDocument\n            });\n            const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            const complete = error => {\n              intentState.renderTasks.delete(internalRenderTask);\n\n              if (this.cleanupAfterRender || intentPrint) {\n                this.pendingCleanup = true;\n              }\n\n              this._tryCleanup();\n\n              if (error) {\n                internalRenderTask.capability.reject(error);\n\n                this._abortOperatorList({\n                  intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n\n              if (this._stats) {\n                this._stats.timeEnd(\"Rendering\");\n\n                this._stats.timeEnd(\"Overall\");\n              }\n            };\n\n            const internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext,\n                viewport,\n                transform,\n                imageLayer,\n                background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug\n            });\n            (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n            const renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref3 => {\n              let [transparency, optionalContentConfig] = _ref3;\n\n              if (this.pendingCleanup) {\n                complete();\n                return;\n              }\n\n              if (this._stats) {\n                this._stats.time(\"Rendering\");\n              }\n\n              internalRenderTask.initializeGraphics({\n                transparency,\n                optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n\n          getOperatorList() {\n            let {\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, true);\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            let opListTask;\n\n            if (!intentState.opListReadCapability) {\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              (intentState.renderTasks ||= new Set()).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            return intentState.opListReadCapability.promise;\n          }\n\n          streamTextContent() {\n            let {\n              disableCombineTextItems = false,\n              includeMarkedContent = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              combineTextItems: disableCombineTextItems !== true,\n              includeMarkedContent: includeMarkedContent === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n              size(textContent) {\n                return textContent.items.length;\n              }\n\n            });\n          }\n\n          getTextContent() {\n            let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(xfa => {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n\n            const readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref4) {\n                  let {\n                    value,\n                    done\n                  } = _ref4;\n\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n\n                  Object.assign(textContent.styles, value.styles);\n                  textContent.items.push(...value.items);\n                  pump();\n                }, reject);\n              }\n\n              const reader = readableStream.getReader();\n              const textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n\n          getStructTree() {\n            return this._structTreePromise ||= this._transport.getStructTree(this._pageIndex);\n          }\n\n          _destroy() {\n            this.destroyed = true;\n            const waitOn = [];\n\n            for (const intentState of this._intentStates.values()) {\n              this._abortOperatorList({\n                intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n\n              if (intentState.opListReadCapability) {\n                continue;\n              }\n\n              for (const internalRenderTask of intentState.renderTasks) {\n                waitOn.push(internalRenderTask.completed);\n                internalRenderTask.cancel();\n              }\n            }\n\n            this.objs.clear();\n\n            this._annotationPromises.clear();\n\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n\n          cleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n\n          _tryCleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.pendingCleanup) {\n              return false;\n            }\n\n            for (const {\n              renderTasks,\n              operatorList\n            } of this._intentStates.values()) {\n              if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                return false;\n              }\n            }\n\n            this._intentStates.clear();\n\n            this.objs.clear();\n\n            this._annotationPromises.clear();\n\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n\n            this.pendingCleanup = false;\n            return true;\n          }\n\n          _startRenderPage(transparency, cacheKey) {\n            const intentState = this._intentStates.get(cacheKey);\n\n            if (!intentState) {\n              return;\n            }\n\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n\n          _renderPageChunk(operatorListChunk, intentState) {\n            for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n\n          _pumpOperatorList(_ref5) {\n            let {\n              renderingIntent,\n              cacheKey\n            } = _ref5;\n\n            const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey,\n              annotationStorage: renderingIntent & _util.RenderingIntentFlag.ANNOTATIONS_STORAGE ? this._transport.annotationStorage.serializable : null\n            });\n\n            const reader = readableStream.getReader();\n\n            const intentState = this._intentStates.get(cacheKey);\n\n            intentState.streamReader = reader;\n\n            const pump = () => {\n              reader.read().then(_ref6 => {\n                let {\n                  value,\n                  done\n                } = _ref6;\n\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                this._renderPageChunk(value, intentState);\n\n                pump();\n              }, reason => {\n                intentState.streamReader = null;\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n\n                  for (const internalRenderTask of intentState.renderTasks) {\n                    internalRenderTask.operatorListChanged();\n                  }\n\n                  this._tryCleanup();\n                }\n\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n\n            pump();\n          }\n\n          _abortOperatorList(_ref7) {\n            let {\n              intentState,\n              reason,\n              force = false\n            } = _ref7;\n\n            if (!intentState.streamReader) {\n              return;\n            }\n\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(() => {\n                  this._abortOperatorList({\n                    intentState,\n                    reason,\n                    force: true\n                  });\n\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n            intentState.streamReader = null;\n\n            if (this._transport.destroyed) {\n              return;\n            }\n\n            for (const [curCacheKey, curIntentState] of this._intentStates) {\n              if (curIntentState === intentState) {\n                this._intentStates.delete(curCacheKey);\n\n                break;\n              }\n            }\n\n            this.cleanup();\n          }\n\n          get stats() {\n            return this._stats;\n          }\n\n        }\n\n        exports.PDFPageProxy = PDFPageProxy;\n\n        class LoopbackPort {\n          constructor() {\n            this._listeners = [];\n            this._deferred = Promise.resolve();\n          }\n\n          postMessage(obj, transfers) {\n            const event = {\n              data: structuredClone(obj, transfers)\n            };\n\n            this._deferred.then(() => {\n              for (const listener of this._listeners) {\n                listener.call(this, event);\n              }\n            });\n          }\n\n          addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n\n          removeEventListener(name, listener) {\n            const i = this._listeners.indexOf(listener);\n\n            this._listeners.splice(i, 1);\n          }\n\n          terminate() {\n            this._listeners.length = 0;\n          }\n\n        }\n\n        exports.LoopbackPort = LoopbackPort;\n        const PDFWorkerUtil = {\n          isWorkerDisabled: false,\n          fallbackWorkerSrc: null,\n          fakeWorkerId: 0\n        };\n        {\n          if (_is_node.isNodeJS && typeof require === \"function\") {\n            PDFWorkerUtil.isWorkerDisabled = true;\n            PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\") {\n            const pdfjsFilePath = document?.currentScript?.src;\n\n            if (pdfjsFilePath) {\n              PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n\n          PDFWorkerUtil.createCDNWrapper = function (url) {\n            const wrapper = `importScripts(\"${url}\");`;\n            return URL.createObjectURL(new Blob([wrapper]));\n          };\n        }\n\n        class PDFWorker {\n          static get _workerPorts() {\n            return (0, _util.shadow)(this, \"_workerPorts\", new WeakMap());\n          }\n\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (port && PDFWorker._workerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port.\");\n            }\n\n            this.name = name;\n            this.destroyed = false;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              PDFWorker._workerPorts.set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          get promise() {\n            return this._readyCapability.promise;\n          }\n\n          get port() {\n            return this._port;\n          }\n\n          get messageHandler() {\n            return this._messageHandler;\n          }\n\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n            this._messageHandler.on(\"ready\", function () {});\n\n            this._readyCapability.resolve();\n          }\n\n          _initialize() {\n            if (typeof Worker !== \"undefined\" && !PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              let workerSrc = PDFWorker.workerSrc;\n\n              try {\n                if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n\n                    this._readyCapability.resolve();\n\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    this._setupFakeWorker();\n                  }\n                });\n\n                const sendTest = () => {\n                  const testObj = new Uint8Array([255]);\n\n                  try {\n                    messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                  } catch (ex) {\n                    (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                    testObj[0] = 0;\n                    messageHandler.send(\"test\", testObj);\n                  }\n                };\n\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n\n            this._setupFakeWorker();\n          }\n\n          _setupFakeWorker() {\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n\n            PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                return;\n              }\n\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n\n          destroy() {\n            this.destroyed = true;\n\n            if (this._webWorker) {\n              this._webWorker.terminate();\n\n              this._webWorker = null;\n            }\n\n            PDFWorker._workerPorts.delete(this._port);\n\n            this._port = null;\n\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n\n              this._messageHandler = null;\n            }\n          }\n\n          static fromPort(params) {\n            if (!params?.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n\n            if (this._workerPorts.has(params.port)) {\n              return this._workerPorts.get(params.port);\n            }\n\n            return new PDFWorker(params);\n          }\n\n          static get workerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_is_node.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n\n          static get _mainThreadWorkerMessageHandler() {\n            try {\n              return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n            } catch (ex) {\n              return null;\n            }\n          }\n\n          static get _setupFakeWorkerGlobal() {\n            const loader = async () => {\n              const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n              if (mainWorkerMessageHandler) {\n                return mainWorkerMessageHandler;\n              }\n\n              if (_is_node.isNodeJS && typeof require === \"function\") {\n                const worker = eval(\"require\")(this.workerSrc);\n                return worker.WorkerMessageHandler;\n              }\n\n              await (0, _display_utils.loadScript)(this.workerSrc);\n              return window.pdfjsWorker.WorkerMessageHandler;\n            };\n\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n\n        }\n\n        exports.PDFWorker = PDFWorker;\n        {\n          PDFWorker.getWorkerSrc = function () {\n            (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\");\n            return this.workerSrc;\n          };\n        }\n\n        class WorkerTransport {\n          #docStats = null;\n          #pageCache = new Map();\n          #pagePromises = new Map();\n          #metadataPromise = null;\n\n          constructor(messageHandler, loadingTask, networkStream, params) {\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              docId: loadingTask.docId,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              ownerDocument: params.ownerDocument,\n              styleElement: params.styleElement\n            });\n            this._params = params;\n\n            if (!params.useWorkerFetch) {\n              this.CMapReaderFactory = new params.CMapReaderFactory({\n                baseUrl: params.cMapUrl,\n                isCompressed: params.cMapPacked\n              });\n              this.StandardFontDataFactory = new params.StandardFontDataFactory({\n                baseUrl: params.standardFontDataUrl\n              });\n            }\n\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._passwordCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n            this.setupMessageHandler();\n          }\n\n          get annotationStorage() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n\n          get stats() {\n            return this.#docStats;\n          }\n\n          getRenderingIntent(intent) {\n            let annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            let isOpList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            let lastModified = \"\";\n\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n\n              case \"display\":\n                break;\n\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n            }\n\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n\n              case _util.AnnotationMode.ENABLE:\n                break;\n\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                lastModified = this.annotationStorage.lastModified;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n            }\n\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n\n            return {\n              renderingIntent,\n              cacheKey: `${renderingIntent}_${lastModified}`\n            };\n          }\n\n          destroy() {\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n\n            const waitOn = [];\n\n            for (const page of this.#pageCache.values()) {\n              waitOn.push(page._destroy());\n            }\n\n            this.#pageCache.clear();\n            this.#pagePromises.clear();\n\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n\n            const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(() => {\n              this.commonObjs.clear();\n              this.fontLoader.clear();\n              this.#metadataPromise = null;\n              this._getFieldObjectsPromise = null;\n              this._hasJSActionsPromise = null;\n\n              if (this._networkStream) {\n                this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n\n              if (this.messageHandler) {\n                this.messageHandler.destroy();\n                this.messageHandler = null;\n              }\n\n              this.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n\n          setupMessageHandler() {\n            const {\n              messageHandler,\n              loadingTask\n            } = this;\n            messageHandler.on(\"GetReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              this._fullReader = this._networkStream.getFullReader();\n\n              this._fullReader.onProgress = evt => {\n                this._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n\n              sink.onPull = () => {\n                this._fullReader.read().then(function (_ref8) {\n                  let {\n                    value,\n                    done\n                  } = _ref8;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                this._fullReader.cancel(reason);\n\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", data => {\n              const headersCapability = (0, _util.createPromiseCapability)();\n              const fullReader = this._fullReader;\n              fullReader.headersReady.then(() => {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (this._lastProgress) {\n                    loadingTask.onProgress?.(this._lastProgress);\n                  }\n\n                  fullReader.onProgress = evt => {\n                    loadingTask.onProgress?.({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n              const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n\n              sink.onPull = () => {\n                rangeReader.read().then(function (_ref9) {\n                  let {\n                    value,\n                    done\n                  } = _ref9;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                rangeReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", _ref10 => {\n              let {\n                pdfInfo\n              } = _ref10;\n              this._numPages = pdfInfo.numPages;\n              this._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              let reason;\n\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", exception => {\n              this._passwordCapability = (0, _util.createPromiseCapability)();\n\n              if (loadingTask.onPassword) {\n                const updatePassword = password => {\n                  if (password instanceof Error) {\n                    this._passwordCapability.reject(password);\n                  } else {\n                    this._passwordCapability.resolve({\n                      password\n                    });\n                  }\n                };\n\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  this._passwordCapability.reject(ex);\n                }\n              } else {\n                this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n\n              return this._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", data => {\n              loadingTask.onProgress?.({\n                loaded: data.length,\n                total: data.length\n              });\n              this.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              const page = this.#pageCache.get(data.pageIndex);\n\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", _ref11 => {\n              let [id, type, exportedData] = _ref11;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              if (this.commonObjs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Font\":\n                  const params = this._params;\n\n                  if (\"error\" in exportedData) {\n                    const exportedError = exportedData.error;\n                    (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                    this.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n\n                  let fontRegistry = null;\n\n                  if (params.pdfBug && globalThis.FontInspector?.enabled) {\n                    fontRegistry = {\n                      registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n\n                    };\n                  }\n\n                  const font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                    fontRegistry\n                  });\n                  this.fontLoader.bind(font).catch(reason => {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id\n                    });\n                  }).finally(() => {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n\n                    this.commonObjs.resolve(id, font);\n                  });\n                  break;\n\n                case \"FontPath\":\n                case \"Image\":\n                  this.commonObjs.resolve(id, exportedData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown common object type ${type}`);\n              }\n            });\n            messageHandler.on(\"obj\", _ref12 => {\n              let [id, pageIndex, type, imageData] = _ref12;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              const pageProxy = this.#pageCache.get(pageIndex);\n\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                  if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n                    pageProxy.cleanupAfterRender = true;\n                  }\n\n                  break;\n\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown object type ${type}`);\n              }\n            });\n            messageHandler.on(\"DocProgress\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              loadingTask.onProgress?.({\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"DocStats\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              this.#docStats = Object.freeze({\n                streamTypes: Object.freeze(data.streamTypes),\n                fontTypes: Object.freeze(data.fontTypes)\n              });\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"FetchBuiltInCMap\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.CMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.CMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.StandardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.StandardFontDataFactory.fetch(data);\n            });\n          }\n\n          _onUnsupportedFeature(_ref13) {\n            let {\n              featureId\n            } = _ref13;\n\n            if (this.destroyed) {\n              return;\n            }\n\n            this.loadingTask.onUnsupportedFeature?.(featureId);\n          }\n\n          getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n\n          getPage(pageNumber) {\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n\n            const pageIndex = pageNumber - 1,\n                  cachedPromise = this.#pagePromises.get(pageIndex);\n\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n\n            const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex\n            }).then(pageInfo => {\n              if (this.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n\n              const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n              this.#pageCache.set(pageIndex, page);\n              return page;\n            });\n            this.#pagePromises.set(pageIndex, promise);\n            return promise;\n          }\n\n          getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n\n          getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex,\n              intent\n            });\n          }\n\n          saveDocument() {\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: this.annotationStorage.serializable,\n              filename: this._fullReader?.filename ?? null\n            }).finally(() => {\n              this.annotationStorage.resetModified();\n            });\n          }\n\n          getFieldObjects() {\n            return this._getFieldObjectsPromise ||= this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n          }\n\n          hasJSActions() {\n            return this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\"HasJSActions\", null);\n          }\n\n          getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n\n          getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n\n          getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id\n            });\n          }\n\n          getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n\n          getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n\n          getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n\n          getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n\n          getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n\n          getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n\n          getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n\n          getDocJSActions() {\n            return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n          }\n\n          getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex\n            });\n          }\n\n          getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex\n            });\n          }\n\n          getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n\n          getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n\n          getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n\n          getMetadata() {\n            return this.#metadataPromise ||= this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: this._fullReader?.filename ?? null,\n                contentLength: this._fullReader?.contentLength ?? null\n              };\n            });\n          }\n\n          getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n\n          async startCleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n            if (this.destroyed) {\n              return;\n            }\n\n            for (const page of this.#pageCache.values()) {\n              const cleanupSuccessful = page.cleanup();\n\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n              }\n            }\n\n            this.commonObjs.clear();\n\n            if (!keepLoadedFonts) {\n              this.fontLoader.clear();\n            }\n\n            this.#metadataPromise = null;\n            this._getFieldObjectsPromise = null;\n            this._hasJSActionsPromise = null;\n          }\n\n          get loadingParams() {\n            const params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              enableXfa: params.enableXfa\n            });\n          }\n\n        }\n\n        class PDFObjects {\n          #objs = Object.create(null);\n\n          #ensureObj(objId) {\n            const obj = this.#objs[objId];\n\n            if (obj) {\n              return obj;\n            }\n\n            return this.#objs[objId] = {\n              capability: (0, _util.createPromiseCapability)(),\n              data: null\n            };\n          }\n\n          get(objId) {\n            let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (callback) {\n              const obj = this.#ensureObj(objId);\n              obj.capability.promise.then(() => callback(obj.data));\n              return null;\n            }\n\n            const obj = this.#objs[objId];\n\n            if (!obj?.capability.settled) {\n              throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n            }\n\n            return obj.data;\n          }\n\n          has(objId) {\n            const obj = this.#objs[objId];\n            return obj?.capability.settled || false;\n          }\n\n          resolve(objId) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const obj = this.#ensureObj(objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n\n          clear() {\n            this.#objs = Object.create(null);\n          }\n\n        }\n\n        class RenderTask {\n          constructor(internalRenderTask) {\n            this._internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n\n          get promise() {\n            return this._internalRenderTask.capability.promise;\n          }\n\n          cancel() {\n            this._internalRenderTask.cancel();\n          }\n\n        }\n\n        exports.RenderTask = RenderTask;\n\n        class InternalRenderTask {\n          static get canvasInUse() {\n            return (0, _util.shadow)(this, \"canvasInUse\", new WeakSet());\n          }\n\n          constructor(_ref14) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              annotationCanvasMap,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              useRequestAnimationFrame = false,\n              pdfBug = false\n            } = _ref14;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._cancelBound = this.cancel.bind(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n\n          initializeGraphics(_ref15) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref15;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this._canvas) {\n              if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n\n              InternalRenderTask.canvasInUse.add(this._canvas);\n            }\n\n            if (this._pdfBug && globalThis.StepperManager?.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n\n            if (this._canvas) {\n              InternalRenderTask.canvasInUse.delete(this._canvas);\n            }\n\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n          }\n\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n\n              return;\n            }\n\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n\n            if (this.running) {\n              return;\n            }\n\n            this._continue();\n          }\n\n          _continue() {\n            this.running = true;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n\n                if (this._canvas) {\n                  InternalRenderTask.canvasInUse.delete(this._canvas);\n                }\n\n                this.callback();\n              }\n            }\n          }\n\n        }\n\n        const version = '2.13.216';\n        exports.version = version;\n        const build = '399a0ec60';\n        exports.build = build;\n        /***/\n      },\n      /* 5 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n        exports.deprecated = deprecated;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.getXfaPageViewport = getXfaPageViewport;\n        exports.isDataScheme = isDataScheme;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n\n        var _base_factory = __w_pdfjs_require__(6);\n\n        var _util = __w_pdfjs_require__(1);\n\n        const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n        class PixelsPerInch {\n          static CSS = 96.0;\n          static PDF = 72.0;\n          static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n        }\n\n        exports.PixelsPerInch = PixelsPerInch;\n\n        class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n          constructor() {\n            let {\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this._document = ownerDocument;\n          }\n\n          _createCanvas(width, height) {\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n\n        }\n\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n\n        async function fetchData(url) {\n          let asTypedArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (isValidFetchUrl(url, document.baseURI)) {\n            const response = await fetch(url);\n\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n\n            return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n          }\n\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n\n            if (asTypedArray) {\n              request.responseType = \"arraybuffer\";\n            }\n\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n\n              if (request.status === 200 || request.status === 0) {\n                let data;\n\n                if (asTypedArray && request.response) {\n                  data = new Uint8Array(request.response);\n                } else if (!asTypedArray && request.responseText) {\n                  data = (0, _util.stringToBytes)(request.responseText);\n                }\n\n                if (data) {\n                  resolve(data);\n                  return;\n                }\n              }\n\n              reject(new Error(request.statusText));\n            };\n\n            request.send(null);\n          });\n        }\n\n        class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n\n        }\n\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n        class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url, true);\n          }\n\n        }\n\n        exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n\n        class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n          _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n\n        }\n\n        exports.DOMSVGFactory = DOMSVGFactory;\n\n        class PageViewport {\n          constructor(_ref16) {\n            let {\n              viewBox,\n              scale,\n              rotation,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = _ref16;\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            const centerX = (viewBox[2] + viewBox[0]) / 2;\n            const centerY = (viewBox[3] + viewBox[1]) / 2;\n            let rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n\n            if (rotation < 0) {\n              rotation += 360;\n            }\n\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n\n            let offsetCanvasX, offsetCanvasY;\n            let width, height;\n\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n              height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n              height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            }\n\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n\n          clone() {\n            let {\n              scale = this.scale,\n              rotation = this.rotation,\n              offsetX = this.offsetX,\n              offsetY = this.offsetY,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n\n          convertToViewportRectangle(rect) {\n            const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n            const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n\n          convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n\n        }\n\n        exports.PageViewport = PageViewport;\n\n        class RenderingCancelledException extends _util.BaseException {\n          constructor(msg, type) {\n            super(msg, \"RenderingCancelledException\");\n            this.type = type;\n          }\n\n        }\n\n        exports.RenderingCancelledException = RenderingCancelledException;\n\n        function isDataScheme(url) {\n          const ii = url.length;\n          let i = 0;\n\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n\n        function getFilenameFromUrl(url) {\n          const anchor = url.indexOf(\"#\");\n          const query = url.indexOf(\"?\");\n          const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n          return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n        }\n\n        function getPdfFilenameFromUrl(url) {\n          let defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n\n          const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          const splitURI = reURI.exec(url);\n          let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch (ex) {}\n            }\n          }\n\n          return suggestedFilename || defaultFilename;\n        }\n\n        class StatTimer {\n          constructor() {\n            this.started = Object.create(null);\n            this.times = [];\n          }\n\n          time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(`Timer is already running for ${name}`);\n            }\n\n            this.started[name] = Date.now();\n          }\n\n          timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(`Timer has not been started for ${name}`);\n            }\n\n            this.times.push({\n              name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n\n          toString() {\n            const outBuf = [];\n            let longest = 0;\n\n            for (const time of this.times) {\n              const name = time.name;\n\n              if (name.length > longest) {\n                longest = name.length;\n              }\n            }\n\n            for (const time of this.times) {\n              const duration = time.end - time.start;\n              outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n            }\n\n            return outBuf.join(\"\");\n          }\n\n        }\n\n        exports.StatTimer = StatTimer;\n\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            const {\n              protocol\n            } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch (ex) {\n            return false;\n          }\n        }\n\n        function loadScript(src) {\n          let removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise((resolve, reject) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n\n              resolve(evt);\n            };\n\n            script.onerror = function () {\n              reject(new Error(`Cannot load script at: ${script.src}`));\n            };\n\n            (document.head || document.documentElement).appendChild(script);\n          });\n        }\n\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n\n        let pdfDateStringRegex;\n\n        class PDFDateString {\n          static toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n\n            const matches = pdfDateStringRegex.exec(input);\n\n            if (!matches) {\n              return null;\n            }\n\n            const year = parseInt(matches[1], 10);\n            let month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            let day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            let hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            let minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            let second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            const universalTimeRelation = matches[7] || \"Z\";\n            let offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            let offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n\n        }\n\n        exports.PDFDateString = PDFDateString;\n\n        function getXfaPageViewport(xfaPage, _ref17) {\n          let {\n            scale = 1,\n            rotation = 0\n          } = _ref17;\n          const {\n            width,\n            height\n          } = xfaPage.attributes.style;\n          const viewBox = [0, 0, parseInt(width), parseInt(height)];\n          return new PageViewport({\n            viewBox,\n            scale,\n            rotation\n          });\n        }\n        /***/\n\n      },\n      /* 6 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class BaseCanvasFactory {\n          constructor() {\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            const canvas = this._createCanvas(width, height);\n\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n\n          reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n\n          destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n\n          _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n\n        }\n\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n\n        class BaseCMapReaderFactory {\n          constructor(_ref18) {\n            let {\n              baseUrl = null,\n              isCompressed = false\n            } = _ref18;\n\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n\n          async fetch(_ref19) {\n            let {\n              name\n            } = _ref19;\n\n            if (!this.baseUrl) {\n              throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n            }\n\n            if (!name) {\n              throw new Error(\"CMap name must be specified.\");\n            }\n\n            const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n            const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n            return this._fetchData(url, compressionType).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n            });\n          }\n\n          _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n        class BaseStandardFontDataFactory {\n          constructor(_ref20) {\n            let {\n              baseUrl = null\n            } = _ref20;\n\n            if (this.constructor === BaseStandardFontDataFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n          }\n\n          async fetch(_ref21) {\n            let {\n              filename\n            } = _ref21;\n\n            if (!this.baseUrl) {\n              throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n            }\n\n            if (!filename) {\n              throw new Error(\"Font filename must be specified.\");\n            }\n\n            const url = `${this.baseUrl}${filename}`;\n            return this._fetchData(url).catch(reason => {\n              throw new Error(`Unable to load font data at: ${url}`);\n            });\n          }\n\n          _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n\n        class BaseSVGFactory {\n          constructor() {\n            if (this.constructor === BaseSVGFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n            }\n          }\n\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n\n            const svg = this._createSVG(\"svg:svg\");\n\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"width\", `${width}px`);\n            svg.setAttribute(\"height\", `${height}px`);\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n            return svg;\n          }\n\n          createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n\n            return this._createSVG(type);\n          }\n\n          _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n\n        }\n\n        exports.BaseSVGFactory = BaseSVGFactory;\n        /***/\n      },\n      /* 7 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class BaseFontLoader {\n          constructor(_ref22) {\n            let {\n              docId,\n              onUnsupportedFeature,\n              ownerDocument = globalThis.document,\n              styleElement = null\n            } = _ref22;\n\n            if (this.constructor === BaseFontLoader) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n            }\n\n            this.docId = docId;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this._document = ownerDocument;\n            this.nativeFontFaces = [];\n            this.styleElement = null;\n          }\n\n          addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n\n            this._document.fonts.add(nativeFontFace);\n          }\n\n          insertRule(rule) {\n            let styleElement = this.styleElement;\n\n            if (!styleElement) {\n              styleElement = this.styleElement = this._document.createElement(\"style\");\n              styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n              this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n            }\n\n            const styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n\n          clear() {\n            for (const nativeFontFace of this.nativeFontFaces) {\n              this._document.fonts.delete(nativeFontFace);\n            }\n\n            this.nativeFontFaces.length = 0;\n\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n\n          async bind(font) {\n            if (font.attached || font.missingFile) {\n              return;\n            }\n\n            font.attached = true;\n\n            if (this.isFontLoadingAPISupported) {\n              const nativeFontFace = font.createNativeFontFace();\n\n              if (nativeFontFace) {\n                this.addNativeFontFace(nativeFontFace);\n\n                try {\n                  await nativeFontFace.loaded;\n                } catch (ex) {\n                  this._onUnsupportedFeature({\n                    featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                  });\n\n                  (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                  font.disableFontFace = true;\n                  throw ex;\n                }\n              }\n\n              return;\n            }\n\n            const rule = font.createFontFaceRule();\n\n            if (rule) {\n              this.insertRule(rule);\n\n              if (this.isSyncFontLoadingSupported) {\n                return;\n              }\n\n              await new Promise(resolve => {\n                const request = this._queueLoadingCallback(resolve);\n\n                this._prepareFontLoadEvent([rule], [font], request);\n              });\n            }\n          }\n\n          _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n\n          get isFontLoadingAPISupported() {\n            const hasFonts = !!this._document?.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n\n          get isSyncFontLoadingSupported() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n\n          get _loadTestFont() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n\n          _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n\n        }\n\n        let FontLoader;\n        exports.FontLoader = FontLoader;\n        {\n          exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n            constructor(params) {\n              super(params);\n              this.loadingContext = {\n                requests: [],\n                nextRequestId: 0\n              };\n              this.loadTestFontId = 0;\n            }\n\n            get isSyncFontLoadingSupported() {\n              let supported = false;\n\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n                if (m?.[1] >= 14) {\n                  supported = true;\n                }\n              }\n\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n\n            _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  const otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n\n              const context = this.loadingContext;\n              const request = {\n                id: `pdfjs-font-loading-${context.nextRequestId++}`,\n                done: false,\n                complete: completeRequest,\n                callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n\n            get _loadTestFont() {\n              const getLoadTestFont = function () {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n\n            _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n\n              function spliceString(s, offset, remove, insert) {\n                const chunk1 = s.substring(0, offset);\n                const chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n\n              let i, ii;\n\n              const canvas = this._document.createElement(\"canvas\");\n\n              canvas.width = 1;\n              canvas.height = 1;\n              const ctx = canvas.getContext(\"2d\");\n              let called = 0;\n\n              function isFontReady(name, callback) {\n                called++;\n\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                const imageData = ctx.getImageData(0, 0, 1, 1);\n\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n\n              const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n              let data = this._loadTestFont;\n              const COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              const CFF_CHECKSUM_OFFSET = 16;\n              const XXXX_VALUE = 0x58585858;\n              let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              const url = `url(data:font/opentype;base64,${btoa(data)});`;\n              const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n              this.insertRule(rule);\n              const names = [];\n\n              for (const font of fonts) {\n                names.push(font.loadedName);\n              }\n\n              names.push(loadTestFontId);\n\n              const div = this._document.createElement(\"div\");\n\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n\n              for (const name of names) {\n                const span = this._document.createElement(\"span\");\n\n                span.textContent = \"Hi\";\n                span.style.fontFamily = name;\n                div.appendChild(span);\n              }\n\n              this._document.body.appendChild(div);\n\n              isFontReady(loadTestFontId, () => {\n                div.remove();\n                request.complete();\n              });\n            }\n\n          };\n        }\n\n        class FontFaceObject {\n          constructor(translatedData, _ref23) {\n            let {\n              isEvalSupported = true,\n              disableFontFace = false,\n              ignoreErrors = false,\n              onUnsupportedFeature,\n              fontRegistry = null\n            } = _ref23;\n            this.compiledGlyphs = Object.create(null);\n\n            for (const i in translatedData) {\n              this[i] = translatedData[i];\n            }\n\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this.fontRegistry = fontRegistry;\n          }\n\n          createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            let nativeFontFace;\n\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              const css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n\n              if (this.cssFontInfo.italicAngle) {\n                css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n              }\n\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n\n            return nativeFontFace;\n          }\n\n          createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            const data = (0, _util.bytesToString)(this.data);\n            const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n            let rule;\n\n            if (!this.cssFontInfo) {\n              rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n            } else {\n              let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n\n              if (this.cssFontInfo.italicAngle) {\n                css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n              }\n\n              rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n            }\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n\n            return rule;\n          }\n\n          getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n\n            let cmds;\n\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n              });\n\n              (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n\n            if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n              const jsBuf = [];\n\n              for (const current of cmds) {\n                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n              }\n\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (const current of cmds) {\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n\n        }\n\n        exports.FontFaceObject = FontFaceObject;\n        /***/\n      },\n      /* 8 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n\n        var _base_factory = __w_pdfjs_require__(6);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _util = __w_pdfjs_require__(1);\n\n        let NodeCanvasFactory = class {\n          constructor() {\n            (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n          }\n\n        };\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n        let NodeCMapReaderFactory = class {\n          constructor() {\n            (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n          }\n\n        };\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n        let NodeStandardFontDataFactory = class {\n          constructor() {\n            (0, _util.unreachable)(\"Not implemented: NodeStandardFontDataFactory\");\n          }\n\n        };\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n        if (_is_node.isNodeJS) {\n          const fetchData = function (url) {\n            return new Promise((resolve, reject) => {\n              const fs = require(\"fs\");\n\n              fs.readFile(url, (error, data) => {\n                if (error || !data) {\n                  reject(new Error(error));\n                  return;\n                }\n\n                resolve(new Uint8Array(data));\n              });\n            });\n          };\n\n          exports.NodeCanvasFactory = NodeCanvasFactory = class extends _base_factory.BaseCanvasFactory {\n            _createCanvas(width, height) {\n              const Canvas = require(\"canvas\");\n\n              return Canvas.createCanvas(width, height);\n            }\n\n          };\n          exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _base_factory.BaseCMapReaderFactory {\n            _fetchData(url, compressionType) {\n              return fetchData(url).then(data => {\n                return {\n                  cMapData: data,\n                  compressionType\n                };\n              });\n            }\n\n          };\n          exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory = class extends _base_factory.BaseStandardFontDataFactory {\n            _fetchData(url) {\n              return fetchData(url);\n            }\n\n          };\n        }\n        /***/\n\n      },\n      /* 9 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationStorage = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class AnnotationStorage {\n          constructor() {\n            this._storage = new Map();\n            this._timeStamp = Date.now();\n            this._modified = false;\n            this.onSetModified = null;\n            this.onResetModified = null;\n          }\n\n          getValue(key, defaultValue) {\n            const value = this._storage.get(key);\n\n            if (value === undefined) {\n              return defaultValue;\n            }\n\n            return Object.assign(defaultValue, value);\n          }\n\n          setValue(key, value) {\n            const obj = this._storage.get(key);\n\n            let modified = false;\n\n            if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n\n              this._storage.set(key, value);\n            }\n\n            if (modified) {\n              this._timeStamp = Date.now();\n\n              this._setModified();\n            }\n          }\n\n          getAll() {\n            return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n          }\n\n          get size() {\n            return this._storage.size;\n          }\n\n          _setModified() {\n            if (!this._modified) {\n              this._modified = true;\n\n              if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n              }\n            }\n          }\n\n          resetModified() {\n            if (this._modified) {\n              this._modified = false;\n\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n\n          get serializable() {\n            return this._storage.size > 0 ? this._storage : null;\n          }\n\n          get lastModified() {\n            return this._timeStamp.toString();\n          }\n\n        }\n\n        exports.AnnotationStorage = AnnotationStorage;\n        /***/\n      },\n      /* 10 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _pattern_helper = __w_pdfjs_require__(11);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        const MIN_FONT_SIZE = 16;\n        const MAX_FONT_SIZE = 100;\n        const MAX_GROUP_SIZE = 4096;\n        const EXECUTION_TIME = 15;\n        const EXECUTION_STEPS = 10;\n        const COMPILE_TYPE3_GLYPHS = true;\n        const MAX_SIZE_TO_COMPILE = 1000;\n        const FULL_CHUNK_HEIGHT = 16;\n        const LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n        function mirrorContextOperations(ctx, destCtx) {\n          if (ctx._removeMirroring) {\n            throw new Error(\"Context is already forwarding operations.\");\n          }\n\n          ctx.__originalSave = ctx.save;\n          ctx.__originalRestore = ctx.restore;\n          ctx.__originalRotate = ctx.rotate;\n          ctx.__originalScale = ctx.scale;\n          ctx.__originalTranslate = ctx.translate;\n          ctx.__originalTransform = ctx.transform;\n          ctx.__originalSetTransform = ctx.setTransform;\n          ctx.__originalResetTransform = ctx.resetTransform;\n          ctx.__originalClip = ctx.clip;\n          ctx.__originalMoveTo = ctx.moveTo;\n          ctx.__originalLineTo = ctx.lineTo;\n          ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n          ctx.__originalRect = ctx.rect;\n          ctx.__originalClosePath = ctx.closePath;\n          ctx.__originalBeginPath = ctx.beginPath;\n\n          ctx._removeMirroring = () => {\n            ctx.save = ctx.__originalSave;\n            ctx.restore = ctx.__originalRestore;\n            ctx.rotate = ctx.__originalRotate;\n            ctx.scale = ctx.__originalScale;\n            ctx.translate = ctx.__originalTranslate;\n            ctx.transform = ctx.__originalTransform;\n            ctx.setTransform = ctx.__originalSetTransform;\n            ctx.resetTransform = ctx.__originalResetTransform;\n            ctx.clip = ctx.__originalClip;\n            ctx.moveTo = ctx.__originalMoveTo;\n            ctx.lineTo = ctx.__originalLineTo;\n            ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n            ctx.rect = ctx.__originalRect;\n            ctx.closePath = ctx.__originalClosePath;\n            ctx.beginPath = ctx.__originalBeginPath;\n            delete ctx._removeMirroring;\n          };\n\n          ctx.save = function ctxSave() {\n            destCtx.save();\n\n            this.__originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            destCtx.restore();\n\n            this.__originalRestore();\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            destCtx.translate(x, y);\n\n            this.__originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            destCtx.scale(x, y);\n\n            this.__originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            destCtx.transform(a, b, c, d, e, f);\n\n            this.__originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            destCtx.setTransform(a, b, c, d, e, f);\n\n            this.__originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            destCtx.resetTransform();\n\n            this.__originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            destCtx.rotate(angle);\n\n            this.__originalRotate(angle);\n          };\n\n          ctx.clip = function ctxRotate(rule) {\n            destCtx.clip(rule);\n\n            this.__originalClip(rule);\n          };\n\n          ctx.moveTo = function (x, y) {\n            destCtx.moveTo(x, y);\n\n            this.__originalMoveTo(x, y);\n          };\n\n          ctx.lineTo = function (x, y) {\n            destCtx.lineTo(x, y);\n\n            this.__originalLineTo(x, y);\n          };\n\n          ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n\n            this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          };\n\n          ctx.rect = function (x, y, width, height) {\n            destCtx.rect(x, y, width, height);\n\n            this.__originalRect(x, y, width, height);\n          };\n\n          ctx.closePath = function () {\n            destCtx.closePath();\n\n            this.__originalClosePath();\n          };\n\n          ctx.beginPath = function () {\n            destCtx.beginPath();\n\n            this.__originalBeginPath();\n          };\n        }\n\n        function addContextCurrentTransform(ctx) {\n          if (ctx._transformStack) {\n            ctx._transformStack = [];\n          }\n\n          if (ctx.mozCurrentTransform) {\n            return;\n          }\n\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._originalResetTransform = ctx.resetTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n\n          try {\n            const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\n            ctx._setLineWidth = desc.set;\n            ctx._getLineWidth = desc.get;\n            Object.defineProperty(ctx, \"lineWidth\", {\n              set: function setLineWidth(width) {\n                this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n              },\n              get: function getLineWidth() {\n                return this._getLineWidth();\n              }\n            });\n          } catch (_) {}\n\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              const [a, b, c, d, e, f] = this._transformMatrix;\n              const ad_bc = a * d - b * c;\n              const bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            const old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            if (this._transformStack.length === 0) {\n              (0, _util.warn)(\"Tried to restore a ctx when the stack was already empty.\");\n            }\n\n            const prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            const m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            const m = this._transformMatrix;\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= y;\n            m[3] *= y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            const m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n            ctx._originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            const cosValue = Math.cos(angle);\n            const sinValue = Math.sin(angle);\n            const m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n\n        class CachedCanvases {\n          constructor(canvasFactory) {\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n\n          getCanvas(id, width, height, trackTransform) {\n            let canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n\n            return canvasEntry;\n          }\n\n          clear() {\n            for (const id in this.cache) {\n              const canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n\n        }\n\n        function compileType3Glyph(imgData) {\n          const POINT_TO_PROCESS_LIMIT = 1000;\n          const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          const width = imgData.width,\n                height = imgData.height,\n                width1 = width + 1;\n          let i, ii, j, j0;\n          const points = new Uint8Array(width1 * (height + 1));\n          const lineSize = width + 7 & ~7,\n                data0 = imgData.data;\n          const data = new Uint8Array(lineSize * height);\n          let pos = 0;\n\n          for (i = 0, ii = data0.length; i < ii; i++) {\n            const elem = data0[i];\n            let mask = 128;\n\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n\n          let count = 0;\n          pos = 0;\n\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n\n            let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n\n              pos++;\n            }\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n\n          const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          const outlines = [];\n\n          for (i = 0; count && i <= height; i++) {\n            let p = i * width1;\n            const end = p + width;\n\n            while (p < end && !points[p]) {\n              p++;\n            }\n\n            if (p === end) {\n              continue;\n            }\n\n            const coords = [p % width1, i];\n            const p0 = p;\n            let type = points[p];\n\n            do {\n              const step = steps[type];\n\n              do {\n                p += step;\n              } while (!points[p]);\n\n              const pp = points[p];\n\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n\n              coords.push(p % width1, p / width1 | 0);\n\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n\n            outlines.push(coords);\n            --i;\n          }\n\n          const drawOutline = function (c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n            c.beginPath();\n\n            for (let k = 0, kk = outlines.length; k < kk; k++) {\n              const o = outlines[k];\n              c.moveTo(o[0], o[1]);\n\n              for (let l = 2, ll = o.length; l < ll; l += 2) {\n                c.lineTo(o[l], o[l + 1]);\n              }\n            }\n\n            c.fill();\n            c.beginPath();\n            c.restore();\n          };\n\n          return drawOutline;\n        }\n\n        class CanvasExtraState {\n          constructor(width, height) {\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.transferMaps = null;\n            this.startNewPathAndClipBox([0, 0, width, height]);\n          }\n\n          clone() {\n            const clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n          updatePathMinMax(transform, x, y) {\n            [x, y] = _util.Util.applyTransform([x, y], transform);\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n\n          updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n            const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n\n            this.updatePathMinMax(transform, box[0], box[1]);\n            this.updatePathMinMax(transform, box[2], box[3]);\n          }\n\n          getPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const box = [this.minX, this.minY, this.maxX, this.maxY];\n\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n\n              const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n              const xStrokePad = scale[0] * this.lineWidth / 2;\n              const yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n\n            return box;\n          }\n\n          updateClipFromPath() {\n            const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n\n          startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n\n          getClippedPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          let transferMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0,\n              destPos;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          let i, j, thisChunkHeight, elemsInThisChunk;\n          let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n          if (transferMaps) {\n            switch (transferMaps.length) {\n              case 1:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[0];\n                transferMapBlue = transferMaps[0];\n                transferMapGray = transferMaps[0];\n                break;\n\n              case 4:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[1];\n                transferMapBlue = transferMaps[2];\n                transferMapGray = transferMaps[3];\n                break;\n            }\n          }\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            const srcLength = src.byteLength;\n            const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            const dest32DataLength = dest32.length;\n            const fullSrcDiff = width + 7 >> 3;\n            let white = 0xffffffff;\n            let black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n            if (transferMapGray) {\n              if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n                [white, black] = [black, white];\n              }\n            }\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                const srcDiff = srcLength - srcPos;\n                let k = 0;\n                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                const kEndUnrolled = kEnd & ~7;\n                let mask = 0;\n                let srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < destPos; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n\n          for (let i = 0; i < totalChunks; i++) {\n            const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            let destPos = 3;\n\n            for (let j = 0; j < thisChunkHeight; j++) {\n              let elem,\n                  mask = 0;\n\n              for (let k = 0; k < width; k++) {\n                if (!mask) {\n                  elem = src[srcPos++];\n                  mask = 128;\n                }\n\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n          for (let i = 0, ii = properties.length; i < ii; i++) {\n            const property = properties[i];\n\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          const length = bytes.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              const alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          const scale = 1 / 255;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          const length = maskData.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n          const hasBackdrop = !!backdrop;\n          const r0 = hasBackdrop ? backdrop[0] : 0;\n          const g0 = hasBackdrop ? backdrop[1] : 0;\n          const b0 = hasBackdrop ? backdrop[2] : 0;\n          let composeFn;\n\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n\n          const PIXELS_TO_PROCESS = 1048576;\n          const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (let row = 0; row < height; row += chunkSize) {\n            const chunkHeight = Math.min(chunkSize, height - row);\n            const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n            const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, layerBox) {\n          const layerOffsetX = layerBox[0];\n          const layerOffsetY = layerBox[1];\n          const layerWidth = layerBox[2] - layerOffsetX;\n          const layerHeight = layerBox[3] - layerOffsetY;\n\n          if (layerWidth === 0 || layerHeight === 0) {\n            return;\n          }\n\n          genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n          ctx.save();\n          ctx.globalAlpha = 1;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(layerCtx.canvas, 0, 0);\n          ctx.restore();\n        }\n\n        function getImageSmoothingEnabled(transform, interpolate) {\n          const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n          scale[0] = Math.fround(scale[0]);\n          scale[1] = Math.fround(scale[1]);\n          const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n\n          if (interpolate !== undefined) {\n            return interpolate;\n          } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n            return true;\n          }\n\n          return false;\n        }\n\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const NORMAL_CLIP = {};\n        const EO_CLIP = {};\n\n        class CanvasGraphics {\n          constructor(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig, annotationCanvasMap) {\n            this.ctx = canvasCtx;\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.stateStack = [];\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.res = null;\n            this.xobjs = null;\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.canvasFactory = canvasFactory;\n            this.imageLayer = imageLayer;\n            this.groupStack = [];\n            this.processingType3 = null;\n            this.baseTransform = null;\n            this.baseTransformStack = [];\n            this.groupLevel = 0;\n            this.smaskStack = [];\n            this.smaskCounter = 0;\n            this.tempSMask = null;\n            this.suspendedCtx = null;\n            this.contentVisible = true;\n            this.markedContentStack = [];\n            this.optionalContentConfig = optionalContentConfig;\n            this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n            this.cachedPatterns = new Map();\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.viewportScale = 1;\n            this.outputScaleX = 1;\n            this.outputScaleY = 1;\n\n            if (canvasCtx) {\n              addContextCurrentTransform(canvasCtx);\n            }\n\n            this._cachedGetSinglePixelWidth = null;\n          }\n\n          beginDrawing(_ref24) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref24;\n            const width = this.ctx.canvas.width;\n            const height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n\n            if (transparency) {\n              const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.viewportScale = viewport.scale;\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n            this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          }\n\n          executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            let i = executionStartIdx || 0;\n            const argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            let steps = 0;\n            const commonObjs = this.commonObjs;\n            const objs = this.objs;\n            let fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          }\n\n          endDrawing() {\n            while (this.stateStack.length || this.inSMaskMode) {\n              this.restore();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          }\n\n          _scaleImage(img, inverseTransform) {\n            const width = img.width;\n            const height = img.height;\n            let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            let paintWidth = width,\n                paintHeight = height;\n            let tmpCanvasId = \"prescale1\";\n            let tmpCanvas, tmpCtx;\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              let newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            return {\n              img,\n              paintWidth,\n              paintHeight\n            };\n          }\n\n          _createMaskCanvas(img) {\n            const ctx = this.ctx;\n            const width = img.width,\n                  height = img.height;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            const maskCtx = maskCanvas.context;\n            putBinaryImageMask(maskCtx, img);\n            const objToCanvas = ctx.mozCurrentTransform;\n\n            let maskToCanvas = _util.Util.transform(objToCanvas, [1 / width, 0, 0, -1 / height, 0, 0]);\n\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n\n            const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n\n            const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n\n            const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n\n            const drawnWidth = Math.ceil(rect[2] - rect[0]);\n            const drawnHeight = Math.ceil(rect[3] - rect[1]);\n            const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true);\n            const fillCtx = fillCanvas.context;\n            const offsetX = Math.min(cord1[0], cord2[0]);\n            const offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform.apply(fillCtx, maskToCanvas);\n\n            const scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse);\n\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(fillCtx.mozCurrentTransform, img.interpolate);\n            fillCtx.drawImage(scaled.img, 0, 0, scaled.img.width, scaled.img.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n\n            const inverse = _util.Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]);\n\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n\n          setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n\n          setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n\n          setDash(dashArray, dashPhase) {\n            const ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (let i = 0, ii = states.length; i < ii; i++) {\n              const state = states[i];\n              const key = state[0];\n              const value = state[1];\n\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n\n                case \"TR\":\n                  this.current.transferMaps = value;\n              }\n            }\n          }\n\n          get inSMaskMode() {\n            return !!this.suspendedCtx;\n          }\n\n          checkSMaskState() {\n            const inSMaskMode = this.inSMaskMode;\n\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n\n          beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n\n            const drawnWidth = this.ctx.canvas.width;\n            const drawnHeight = this.ctx.canvas.height;\n            const cacheId = \"smaskGroupAt\" + this.groupLevel;\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            const ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n\n          endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n\n            this.ctx._removeMirroring();\n\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n\n          compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n\n            const smask = this.current.activeSMask;\n            const suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n\n          save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n\n            const old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n\n          transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          }\n\n          constructPath(ops, args) {\n            const ctx = this.ctx;\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let startX, startY;\n\n            for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  ctx.moveTo(x, y);\n\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n\n                  current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                  current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n                  ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n                  break;\n\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(ctx.mozCurrentTransform, startX, startY, args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            current.setCurrentPoint(x, y);\n          }\n\n          closePath() {\n            this.ctx.closePath();\n          }\n\n          stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            const ctx = this.ctx;\n            const strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                const lineWidth = this.getSinglePixelWidth();\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.STROKE);\n                ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n                ctx.stroke();\n                ctx.restore();\n              } else {\n                const lineWidth = this.getSinglePixelWidth();\n\n                if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n                  ctx.save();\n                  ctx.resetTransform();\n                  ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n                  ctx.stroke();\n                  ctx.restore();\n                } else {\n                  ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n                  ctx.stroke();\n                }\n              }\n            }\n\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            let needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n\n            const intersect = this.current.getClippedPathBoundingBox();\n\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n\n          eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n\n          fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n\n          eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n\n          endPath() {\n            this.consumePath();\n          }\n\n          clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n\n          eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n\n          beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          endText() {\n            const paths = this.pendingTextPaths;\n            const ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (let i = 0; i < paths.length; i++) {\n              const path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n\n          setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n\n          setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setFont(fontRefName, size) {\n            const fontObj = this.commonObjs.get(fontRefName);\n            const current = this.current;\n\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            const name = fontObj.loadedName || \"sans-serif\";\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n            let browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          }\n\n          setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n\n          setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n\n          moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const textRenderingMode = current.textRenderingMode;\n            const fontSize = current.fontSize / current.fontSizeScale;\n            const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            let addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (resetLineWidthToOne) {\n                  ctx.resetTransform();\n                  ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n                }\n\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (resetLineWidthToOne) {\n                  ctx.save();\n                  ctx.moveTo(x, y);\n                  ctx.resetTransform();\n                  ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n                  ctx.strokeText(character, 0, 0);\n                  ctx.restore();\n                } else {\n                  ctx.strokeText(character, x, y);\n                }\n              }\n            }\n\n            if (isAddToPathSet) {\n              const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          }\n\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            const data = ctx.getImageData(0, 0, 10, 10).data;\n            let enabled = false;\n\n            for (let i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            const ctx = this.ctx;\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const glyphsLength = glyphs.length;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            let patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            let lineWidth = current.lineWidth;\n            let resetLineWidthToOne = false;\n            const scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth();\n                resetLineWidthToOne = lineWidth < 0;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n            let x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              const glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              let restoreNeeded = false;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              const accent = glyph.accent;\n              let scaledX, scaledY;\n              let width = glyph.width;\n\n              if (vertical) {\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  const characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n\n                  if (accent) {\n                    const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n                  }\n                }\n              }\n\n              let charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n\n          showType3Text(glyphs) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            const fontDirection = current.fontDirection;\n            const spacingDir = font.vertical ? 1 : -1;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const textHScale = current.textHScale * fontDirection;\n            const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            const glyphsLength = glyphs.length;\n            const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            let i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform.apply(ctx, fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n\n              const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          }\n\n          setCharWidth(xWidth, yWidth) {}\n\n          setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          }\n\n          getColorN_Pattern(IR) {\n            let pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              const color = IR[1];\n              const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              const canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n\n            return pattern;\n          }\n\n          setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n\n          setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n\n          setFillRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n\n          _getPattern(objId) {\n            let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let pattern;\n\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n\n            return pattern;\n          }\n\n          shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            this.save();\n\n            const pattern = this._getPattern(objId);\n\n            ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.SHADING);\n            const inv = ctx.mozCurrentTransformInverse;\n\n            if (inv) {\n              const canvas = ctx.canvas;\n              const width = canvas.width;\n              const height = canvas.height;\n\n              const bl = _util.Util.applyTransform([0, 0], inv);\n\n              const br = _util.Util.applyTransform([0, height], inv);\n\n              const ul = _util.Util.applyTransform([width, 0], inv);\n\n              const ur = _util.Util.applyTransform([width, height], inv);\n\n              const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n\n          beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n\n          beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n\n            this.baseTransform = this.ctx.mozCurrentTransform;\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updatePathMinMax(this.ctx.mozCurrentTransform, bbox[0], bbox[1]);\n              this.current.updatePathMinMax(this.ctx.mozCurrentTransform, bbox[2], bbox[3]);\n              this.clip();\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n\n          beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n\n            const currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            const currentTransform = currentCtx.mozCurrentTransform;\n\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n            const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            const offsetX = Math.floor(bounds[0]);\n            const offsetY = Math.floor(bounds[1]);\n            let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            let scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            let cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            const groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n\n          endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.groupLevel--;\n            const groupCtx = this.ctx;\n            const ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              this.ctx.restore();\n              const currentMtx = this.ctx.mozCurrentTransform;\n              this.restore();\n              this.ctx.save();\n              this.ctx.setTransform.apply(this.ctx, currentMtx);\n\n              const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n\n          beginAnnotations() {\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          }\n\n          endAnnotations() {\n            this.restore();\n          }\n\n          beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            this.save();\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              const width = rect[2] - rect[0];\n              const height = rect[3] - rect[1];\n\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n\n                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(this.ctx.mozCurrentTransform);\n\n                const {\n                  viewportScale\n                } = this;\n                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                const {\n                  canvas,\n                  context\n                } = this.annotationCanvas;\n                canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n                canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                addContextCurrentTransform(this.ctx);\n                resetCtxToDefault(this.ctx);\n              } else {\n                resetCtxToDefault(this.ctx);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.clip();\n                this.endPath();\n              }\n            }\n\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          }\n\n          endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n\n            this.restore();\n          }\n\n          paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const width = img.width,\n                  height = img.height;\n            const glyph = this.processingType3;\n\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width,\n                  height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n\n            if (glyph?.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n\n            const mask = this._createMaskCanvas(img);\n\n            const maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectRepeat(imgData, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            ctx.save();\n            const currentTransform = ctx.mozCurrentTransform;\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n\n            const mask = this._createMaskCanvas(imgData);\n\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n\n              const [x, y] = _util.Util.applyTransform([0, 0], trans);\n\n              ctx.drawImage(mask.canvas, x, y);\n            }\n\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n\n            for (let i = 0, ii = images.length; i < ii; i++) {\n              const image = images[i];\n              const width = image.width,\n                    height = image.height;\n              const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              const maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const map = [];\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n\n          paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            let imgToPaint;\n\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n              imgToPaint = tmpCanvas.canvas;\n            }\n\n            const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled(ctx.mozCurrentTransform, imgData.interpolate);\n            ctx.drawImage(scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n\n            if (this.imageLayer) {\n              const position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: width / ctx.mozCurrentTransformInverse[0],\n                height: height / ctx.mozCurrentTransformInverse[3]\n              });\n            }\n\n            this.compose();\n            this.restore();\n          }\n\n          paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const w = imgData.width;\n            const h = imgData.height;\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            const tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n            for (let i = 0, ii = map.length; i < ii; i++) {\n              const entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n              if (this.imageLayer) {\n                const position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n\n          markPoint(tag) {}\n\n          markPointProps(tag, properties) {}\n\n          beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n\n          beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n\n            this.contentVisible = this.isContentVisible();\n          }\n\n          endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n\n          beginCompat() {}\n\n          endCompat() {}\n\n          consumePath(clipBox) {\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n\n            const ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n\n              this.pendingClip = null;\n            }\n\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n\n          getSinglePixelWidth() {\n            if (this._cachedGetSinglePixelWidth === null) {\n              const m = this.ctx.mozCurrentTransform;\n              const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n              const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n              const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n              const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n\n              if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n                this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n              } else if (absDet > Number.EPSILON) {\n                this._cachedGetSinglePixelWidth = pixelHeight;\n              } else {\n                this._cachedGetSinglePixelWidth = 1;\n              }\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          }\n\n          getCanvasPosition(x, y) {\n            const transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n\n          isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n\n        }\n\n        exports.CanvasGraphics = CanvasGraphics;\n\n        for (const op in _util.OPS) {\n          if (CanvasGraphics.prototype[op] !== undefined) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n        }\n        /***/\n\n      },\n      /* 11 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TilingPattern = exports.PathType = void 0;\n        exports.getShadingPattern = getShadingPattern;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const PathType = {\n          FILL: \"Fill\",\n          STROKE: \"Stroke\",\n          SHADING: \"Shading\"\n        };\n        exports.PathType = PathType;\n\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox || typeof Path2D === \"undefined\") {\n            return;\n          }\n\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n\n        class BaseShadingPattern {\n          constructor() {\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n\n          getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n\n        }\n\n        class RadialAxialShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._type = IR[1];\n            this._bbox = IR[2];\n            this._colorStops = IR[3];\n            this._p0 = IR[4];\n            this._p1 = IR[5];\n            this._r0 = IR[6];\n            this._r1 = IR[7];\n            this.matrix = null;\n          }\n\n          _createGradient(ctx) {\n            let grad;\n\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n\n            for (const colorStop of this._colorStops) {\n              grad.addColorStop(colorStop[0], colorStop[1]);\n            }\n\n            return grad;\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let pattern;\n\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, ctx.mozCurrentTransform) || [0, 0, 0, 0];\n              const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              const tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n\n              if (this.matrix) {\n                tmpCtx.transform.apply(tmpCtx, this.matrix);\n              }\n\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              const domMatrix = new DOMMatrix(inverse);\n\n              try {\n                pattern.setTransform(domMatrix);\n              } catch (ex) {\n                (0, _util.warn)(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n              }\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n\n            return pattern;\n          }\n\n        }\n\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          const coords = context.coords,\n                colors = context.colors;\n          const bytes = data.data,\n                rowSize = data.width * 4;\n          let tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          const c1r = colors[c1],\n                c1g = colors[c1 + 1],\n                c1b = colors[c1 + 2];\n          const c2r = colors[c2],\n                c2g = colors[c2 + 1],\n                c2b = colors[c2 + 2];\n          const c3r = colors[c3],\n                c3g = colors[c3 + 1],\n                c3b = colors[c3 + 2];\n          const minY = Math.round(y1),\n                maxY = Math.round(y3);\n          let xa, car, cag, cab;\n          let xb, cbr, cbg, cbb;\n\n          for (let y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              let k;\n\n              if (y < y1) {\n                k = 0;\n              } else {\n                k = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n\n            let k;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            const x1_ = Math.round(Math.min(xa, xb));\n            const x2_ = Math.round(Math.max(xa, xb));\n            let j = rowSize * y + x1_ * 4;\n\n            for (let x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          const ps = figure.coords;\n          const cs = figure.colors;\n          let i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              const verticesPerRow = figure.verticesPerRow;\n              const rows = Math.floor(ps.length / verticesPerRow) - 1;\n              const cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                let q = i * verticesPerRow;\n\n                for (let j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        class MeshShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._coords = IR[2];\n            this._colors = IR[3];\n            this._figures = IR[4];\n            this._bounds = IR[5];\n            this._bbox = IR[7];\n            this._background = IR[8];\n            this.matrix = null;\n          }\n\n          _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            const EXPECTED_SCALE = 1.1;\n            const MAX_PATTERN_SIZE = 3000;\n            const BORDER_SIZE = 2;\n            const offsetX = Math.floor(this._bounds[0]);\n            const offsetY = Math.floor(this._bounds[1]);\n            const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const scaleX = boundsWidth / width;\n            const scaleY = boundsHeight / height;\n            const context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            const paddedWidth = width + BORDER_SIZE * 2;\n            const paddedHeight = height + BORDER_SIZE * 2;\n            const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            const tmpCtx = tmpCanvas.context;\n            const data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              const bytes = data.data;\n\n              for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (const figure of this._figures) {\n              drawFigure(data, figure, context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            const canvas = tmpCanvas.canvas;\n            return {\n              canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX,\n              scaleY\n            };\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            let scale;\n\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n              if (this.matrix) {\n                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n\n            const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform.apply(ctx, owner.baseTransform);\n\n              if (this.matrix) {\n                ctx.transform.apply(ctx, this.matrix);\n              }\n            }\n\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n\n        }\n\n        class DummyShadingPattern extends BaseShadingPattern {\n          getPattern() {\n            return \"hotpink\";\n          }\n\n        }\n\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n\n          throw new Error(`Unknown IR type: ${IR[0]}`);\n        }\n\n        const PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n\n        class TilingPattern {\n          static get MAX_PATTERN_SIZE() {\n            return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n          }\n\n          constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n\n          createPatternCanvas(owner) {\n            const operatorList = this.operatorList;\n            const bbox = this.bbox;\n            const xstep = this.xstep;\n            const ystep = this.ystep;\n            const paintType = this.paintType;\n            const tilingType = this.tilingType;\n            const color = this.color;\n            const canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            const x0 = bbox[0],\n                  y0 = bbox[1],\n                  x1 = bbox[2],\n                  y1 = bbox[3];\n\n            const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            const tmpCtx = tmpCanvas.context;\n            const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            let adjustedX0 = x0;\n            let adjustedY0 = y0;\n            let adjustedX1 = x1;\n            let adjustedY1 = y1;\n\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n\n          getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            let size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale,\n              size\n            };\n          }\n\n          clipBbox(graphics, x0, y0, x1, y1) {\n            const bboxWidth = x1 - x0;\n            const bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.clip();\n            graphics.endPath();\n          }\n\n          setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n                  current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                const ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let matrix = inverse;\n\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n\n            const temporaryPatternCanvas = this.createPatternCanvas(owner);\n            let domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n\n            try {\n              pattern.setTransform(domMatrix);\n            } catch (ex) {\n              (0, _util.warn)(`TilingPattern.getPattern: \"${ex?.message}\".`);\n            }\n\n            return pattern;\n          }\n\n        }\n\n        exports.TilingPattern = TilingPattern;\n        /***/\n      },\n      /* 12 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        const GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n        GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n        /***/\n      },\n      /* 13 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        const StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n\n        function wrapReason(reason) {\n          if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n            (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n          }\n\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n\n            case \"PasswordException\":\n              return new _util.PasswordException(reason.message, reason.code);\n\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n\n        class MessageHandler {\n          constructor(sourceName, targetName, comObj) {\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n\n            this._onComObjOnMessage = event => {\n              const data = event.data;\n\n              if (data.targetName !== this.sourceName) {\n                return;\n              }\n\n              if (data.stream) {\n                this._processStreamMessage(data);\n\n                return;\n              }\n\n              if (data.callback) {\n                const callbackId = data.callbackId;\n                const capability = this.callbackCapabilities[callbackId];\n\n                if (!capability) {\n                  throw new Error(`Cannot resolve callback ${callbackId}`);\n                }\n\n                delete this.callbackCapabilities[callbackId];\n\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n\n                return;\n              }\n\n              const action = this.actionHandler[data.action];\n\n              if (!action) {\n                throw new Error(`Unknown action from worker: ${data.action}`);\n              }\n\n              if (data.callbackId) {\n                const cbSourceName = this.sourceName;\n                const cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n\n              if (data.streamId) {\n                this._createStreamSink(data);\n\n                return;\n              }\n\n              action(data.data);\n            };\n\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n          on(actionName, handler) {\n            const ah = this.actionHandler;\n\n            if (ah[actionName]) {\n              throw new Error(`There is already an actionName called \"${actionName}\"`);\n            }\n\n            ah[actionName] = handler;\n          }\n\n          send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data\n            }, transfers);\n          }\n\n          sendWithPromise(actionName, data, transfers) {\n            const callbackId = this.callbackId++;\n            const capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId,\n                data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n\n            return capability.promise;\n          }\n\n          sendWithStream(actionName, data, queueingStrategy, transfers) {\n            const streamId = this.streamId++,\n                  sourceName = this.sourceName,\n                  targetName = this.targetName,\n                  comObj = this.comObj;\n            return new ReadableStream({\n              start: controller => {\n                const startCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId] = {\n                  controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  action: actionName,\n                  streamId,\n                  data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: controller => {\n                const pullCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL,\n                  streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: reason => {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                const cancelCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId].cancelCall = cancelCapability;\n                this.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n\n          _createStreamSink(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const self = this,\n                  action = this.actionHandler[data.action];\n            const streamSink = {\n              enqueue(chunk) {\n                let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                let transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                const lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId,\n                  chunk\n                }, transfers);\n              },\n\n              close() {\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n\n              error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ERROR,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n\n          _processStreamMessage(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const streamController = this.streamControllers[streamId],\n                  streamSink = this.streamSinks[streamId];\n\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                  break;\n                }\n\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull && streamSink.onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.controller.enqueue(data.chunk);\n                break;\n\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.isClosed = true;\n                streamController.controller.close();\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n\n          async _deleteStreamController(streamController, streamId) {\n            await Promise.allSettled([streamController.startCall && streamController.startCall.promise, streamController.pullCall && streamController.pullCall.promise, streamController.cancelCall && streamController.cancelCall.promise]);\n            delete this.streamControllers[streamId];\n          }\n\n          destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n        }\n\n        exports.MessageHandler = MessageHandler;\n        /***/\n      },\n      /* 14 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class Metadata {\n          #metadataMap;\n          #data;\n\n          constructor(_ref25) {\n            let {\n              parsedData,\n              rawData\n            } = _ref25;\n            this.#metadataMap = parsedData;\n            this.#data = rawData;\n          }\n\n          getRaw() {\n            return this.#data;\n          }\n\n          get(name) {\n            return this.#metadataMap.get(name) ?? null;\n          }\n\n          getAll() {\n            return (0, _util.objectFromMap)(this.#metadataMap);\n          }\n\n          has(name) {\n            return this.#metadataMap.has(name);\n          }\n\n        }\n\n        exports.Metadata = Metadata;\n        /***/\n      },\n      /* 15 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class OptionalContentGroup {\n          constructor(name, intent) {\n            this.visible = true;\n            this.name = name;\n            this.intent = intent;\n          }\n\n        }\n\n        class OptionalContentConfig {\n          constructor(data) {\n            this.name = null;\n            this.creator = null;\n            this._order = null;\n            this._groups = new Map();\n\n            if (data === null) {\n              return;\n            }\n\n            this.name = data.name;\n            this.creator = data.creator;\n            this._order = data.order;\n\n            for (const group of data.groups) {\n              this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n            }\n\n            if (data.baseState === \"OFF\") {\n              for (const group of this._groups) {\n                group.visible = false;\n              }\n            }\n\n            for (const on of data.on) {\n              this._groups.get(on).visible = true;\n            }\n\n            for (const off of data.off) {\n              this._groups.get(off).visible = false;\n            }\n          }\n\n          _evaluateVisibilityExpression(array) {\n            const length = array.length;\n\n            if (length < 2) {\n              return true;\n            }\n\n            const operator = array[0];\n\n            for (let i = 1; i < length; i++) {\n              const element = array[i];\n              let state;\n\n              if (Array.isArray(element)) {\n                state = this._evaluateVisibilityExpression(element);\n              } else if (this._groups.has(element)) {\n                state = this._groups.get(element).visible;\n              } else {\n                (0, _util.warn)(`Optional content group not found: ${element}`);\n                return true;\n              }\n\n              switch (operator) {\n                case \"And\":\n                  if (!state) {\n                    return false;\n                  }\n\n                  break;\n\n                case \"Or\":\n                  if (state) {\n                    return true;\n                  }\n\n                  break;\n\n                case \"Not\":\n                  return !state;\n\n                default:\n                  return true;\n              }\n            }\n\n            return operator === \"And\";\n          }\n\n          isVisible(group) {\n            if (this._groups.size === 0) {\n              return true;\n            }\n\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n\n            if (group.type === \"OCG\") {\n              if (!this._groups.has(group.id)) {\n                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                return true;\n              }\n\n              return this._groups.get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return this._evaluateVisibilityExpression(group.expression);\n              }\n\n              if (!group.policy || group.policy === \"AnyOn\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this._groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this._groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this._groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this._groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              }\n\n              (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n              return true;\n            }\n\n            (0, _util.warn)(`Unknown group type ${group.type}.`);\n            return true;\n          }\n\n          setVisibility(id) {\n            let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return;\n            }\n\n            this._groups.get(id).visible = !!visible;\n          }\n\n          getOrder() {\n            if (!this._groups.size) {\n              return null;\n            }\n\n            if (this._order) {\n              return this._order.slice();\n            }\n\n            return Array.from(this._groups.keys());\n          }\n\n          getGroups() {\n            return this._groups.size > 0 ? (0, _util.objectFromMap)(this._groups) : null;\n          }\n\n          getGroup(id) {\n            return this._groups.get(id) || null;\n          }\n\n        }\n\n        exports.OptionalContentConfig = OptionalContentConfig;\n        /***/\n      },\n      /* 16 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        class PDFDataTransportStream {\n          constructor(params, pdfDataRangeTransport) {\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = params.progressiveDone || false;\n            this._contentDispositionFilename = params.contentDispositionFilename || null;\n            const initialData = params.initialData;\n\n            if (initialData?.length > 0) {\n              const buffer = new Uint8Array(initialData).buffer;\n\n              this._queuedChunks.push(buffer);\n            }\n\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !params.disableStream;\n            this._isRangeSupported = !params.disableRange;\n            this._contentLength = params.length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n\n            this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n              this._onReceiveData({\n                begin,\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n              this._onProgress({\n                loaded,\n                total\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n              this._onReceiveData({\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n              this._onProgressiveDone();\n            });\n\n            this._pdfDataRangeTransport.transportReady();\n          }\n\n          _onReceiveData(args) {\n            const buffer = new Uint8Array(args.chunk).buffer;\n\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              const found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n\n                rangeReader._enqueue(buffer);\n\n                return true;\n              });\n\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          _onProgress(evt) {\n            if (evt.total === undefined) {\n              const firstReader = this._rangeReaders[0];\n\n              if (firstReader?.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              const fullReader = this._fullRequestReader;\n\n              if (fullReader?.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n\n          _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n\n            this._progressiveDone = true;\n          }\n\n          _removeRangeReader(reader) {\n            const i = this._rangeReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            const queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n            this._rangeReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n\n            this._pdfDataRangeTransport.abort();\n          }\n\n        }\n\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n\n        class PDFDataTransportStreamReader {\n          constructor(stream, queuedChunks) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n\n            for (const chunk of this._queuedChunks) {\n              this._loaded += chunk.byteLength;\n            }\n\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n\n            this._loaded += chunk.byteLength;\n          }\n\n          get headersReady() {\n            return this._headersReady;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._stream._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._stream._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._stream._contentLength;\n          }\n\n          async read() {\n            if (this._queuedChunks.length > 0) {\n              const chunk = this._queuedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          progressiveDone() {\n            if (this._done) {\n              return;\n            }\n\n            this._done = true;\n          }\n\n        }\n\n        class PDFDataTransportStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              const requestsCapability = this._requests.shift();\n\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n\n              for (const requestCapability of this._requests) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n\n              this._requests.length = 0;\n            }\n\n            this._done = true;\n\n            this._stream._removeRangeReader(this);\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._queuedChunk) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._stream._removeRangeReader(this);\n          }\n\n        }\n        /***/\n\n      },\n      /* 17 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaText = void 0;\n\n        class XfaText {\n          static textContent(xfa) {\n            const items = [];\n            const output = {\n              items,\n              styles: Object.create(null)\n            };\n\n            function walk(node) {\n              if (!node) {\n                return;\n              }\n\n              let str = null;\n              const name = node.name;\n\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node?.attributes?.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n\n              if (str !== null) {\n                items.push({\n                  str\n                });\n              }\n\n              if (!node.children) {\n                return;\n              }\n\n              for (const child of node.children) {\n                walk(child);\n              }\n            }\n\n            walk(xfa);\n            return output;\n          }\n\n          static shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n\n        }\n\n        exports.XfaText = XfaText;\n        /***/\n      },\n      /* 18 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationLayer = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _annotation_storage = __w_pdfjs_require__(9);\n\n        var _scripting_utils = __w_pdfjs_require__(19);\n\n        var _xfa_layer = __w_pdfjs_require__(20);\n\n        const DEFAULT_TAB_INDEX = 1000;\n        const GetElementsByNameSet = new WeakSet();\n\n        function getRectDims(rect) {\n          return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1]\n          };\n        }\n\n        class AnnotationElementFactory {\n          static create(parameters) {\n            const subtype = parameters.data.annotationType;\n\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n\n              case _util.AnnotationType.WIDGET:\n                const fieldType = parameters.data.fieldType;\n\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n\n                    return new PushButtonWidgetAnnotationElement(parameters);\n\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n\n                return new WidgetAnnotationElement(parameters);\n\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n\n        }\n\n        class AnnotationElement {\n          constructor(parameters) {\n            let {\n              isRenderable = false,\n              ignoreBorder = false,\n              createQuadrilaterals = false\n            } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.page = parameters.page;\n            this.viewport = parameters.viewport;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this._mouseState = parameters.mouseState;\n\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n\n            if (createQuadrilaterals) {\n              this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n            }\n          }\n\n          _createContainer() {\n            let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            const data = this.data,\n                  page = this.page,\n                  viewport = this.viewport;\n            const container = document.createElement(\"section\");\n            let {\n              width,\n              height\n            } = getRectDims(data.rect);\n            container.setAttribute(\"data-annotation-id\", data.id);\n\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n            if (data.hasOwnCanvas) {\n              const transform = viewport.transform.slice();\n\n              const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(transform);\n\n              width = Math.ceil(width * scaleX);\n              height = Math.ceil(height * scaleY);\n              rect[0] *= scaleX;\n              rect[1] *= scaleY;\n\n              for (let i = 0; i < 4; i++) {\n                transform[i] = Math.sign(transform[i]);\n              }\n\n              container.style.transform = `matrix(${transform.join(\",\")})`;\n            } else {\n              container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n            }\n\n            container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = `${data.borderStyle.width}px`;\n\n              if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                width -= 2 * data.borderStyle.width;\n                height -= 2 * data.borderStyle.width;\n              }\n\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n                container.style.borderRadius = radius;\n              }\n\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              const borderColor = data.borderColor || data.color || null;\n\n              if (borderColor) {\n                container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n\n            container.style.left = `${rect[0]}px`;\n            container.style.top = `${rect[1]}px`;\n\n            if (data.hasOwnCanvas) {\n              container.style.width = container.style.height = \"auto\";\n            } else {\n              container.style.width = `${width}px`;\n              container.style.height = `${height}px`;\n            }\n\n            return container;\n          }\n\n          _createQuadrilaterals() {\n            let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.data.quadPoints) {\n              return null;\n            }\n\n            const quadrilaterals = [];\n            const savedRect = this.data.rect;\n\n            for (const quadPoint of this.data.quadPoints) {\n              this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n              quadrilaterals.push(this._createContainer(ignoreBorder));\n            }\n\n            this.data.rect = savedRect;\n            return quadrilaterals;\n          }\n\n          _createPopup(trigger, data) {\n            let container = this.container;\n\n            if (this.quadrilaterals) {\n              trigger = trigger || this.quadrilaterals;\n              container = this.quadrilaterals[0];\n            }\n\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.style.height = container.style.height;\n              trigger.style.width = container.style.width;\n              container.appendChild(trigger);\n            }\n\n            const popupElement = new PopupElement({\n              container,\n              trigger,\n              color: data.color,\n              titleObj: data.titleObj,\n              modificationDate: data.modificationDate,\n              contentsObj: data.contentsObj,\n              richText: data.richText,\n              hideWrapper: true\n            });\n            const popup = popupElement.render();\n            popup.style.left = container.style.width;\n            container.appendChild(popup);\n          }\n\n          _renderQuadrilaterals(className) {\n            for (const quadrilateral of this.quadrilaterals) {\n              quadrilateral.className = className;\n            }\n\n            return this.quadrilaterals;\n          }\n\n          render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n\n          _getElementsByName(name) {\n            let skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const fields = [];\n\n            if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n\n              if (fieldObj) {\n                for (const {\n                  page,\n                  id,\n                  exportValues\n                } of fieldObj) {\n                  if (page === -1) {\n                    continue;\n                  }\n\n                  if (id === skipId) {\n                    continue;\n                  }\n\n                  const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                  const domElement = document.getElementById(id);\n\n                  if (domElement && !GetElementsByNameSet.has(domElement)) {\n                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                    continue;\n                  }\n\n                  fields.push({\n                    id,\n                    exportValue,\n                    domElement\n                  });\n                }\n              }\n\n              return fields;\n            }\n\n            for (const domElement of document.getElementsByName(name)) {\n              const {\n                id,\n                exportValue\n              } = domElement;\n\n              if (id === skipId) {\n                continue;\n              }\n\n              if (!GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n\n              fields.push({\n                id,\n                exportValue,\n                domElement\n              });\n            }\n\n            return fields;\n          }\n\n          static get platform() {\n            const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n            return (0, _util.shadow)(this, \"platform\", {\n              isWin: platform.includes(\"Win\"),\n              isMac: platform.includes(\"Mac\")\n            });\n          }\n\n        }\n\n        class LinkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.resetForm || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: !!options?.ignoreBorder,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            const {\n              data,\n              linkService\n            } = this;\n            const link = document.createElement(\"a\");\n\n            if (data.url) {\n              if (!linkService.addLinkAttributes) {\n                (0, _util.warn)(\"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\");\n              }\n\n              linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n            } else {\n              let hasClickAction = false;\n\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                hasClickAction = true;\n\n                this._bindJSAction(link, data);\n              }\n\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n              } else if (!hasClickAction) {\n                this._bindLink(link, \"\");\n              }\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n                const linkElement = index === 0 ? link : link.cloneNode();\n                quadrilateral.appendChild(linkElement);\n                return quadrilateral;\n              });\n            }\n\n            this.container.className = \"linkAnnotation\";\n            this.container.appendChild(link);\n            return this.container;\n          }\n\n          _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n\n            link.onclick = () => {\n              if (destination) {\n                this.linkService.goToDestination(destination);\n              }\n\n              return false;\n            };\n\n            if (destination || destination === \"\") {\n              link.className = \"internalLink\";\n            }\n          }\n\n          _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n            };\n\n            link.className = \"internalLink\";\n          }\n\n          _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n            for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n\n              if (!jsName) {\n                continue;\n              }\n\n              link[jsName] = () => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: data.id,\n                    name\n                  }\n                });\n                return false;\n              };\n            }\n\n            if (!link.onclick) {\n              link.onclick = () => false;\n            }\n\n            link.className = \"internalLink\";\n          }\n\n          _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n\n            link.className = \"internalLink\";\n\n            if (!this._fieldObjects) {\n              (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n\n              if (!otherClickAction) {\n                link.onclick = () => false;\n              }\n\n              return;\n            }\n\n            link.onclick = () => {\n              if (otherClickAction) {\n                otherClickAction();\n              }\n\n              const {\n                fields: resetFormFields,\n                refs: resetFormRefs,\n                include\n              } = resetForm;\n              const allFields = [];\n\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                const fieldIds = new Set(resetFormRefs);\n\n                for (const fieldName of resetFormFields) {\n                  const fields = this._fieldObjects[fieldName] || [];\n\n                  for (const {\n                    id\n                  } of fields) {\n                    fieldIds.add(id);\n                  }\n                }\n\n                for (const fields of Object.values(this._fieldObjects)) {\n                  for (const field of fields) {\n                    if (fieldIds.has(field.id) === include) {\n                      allFields.push(field);\n                    }\n                  }\n                }\n              } else {\n                for (const fields of Object.values(this._fieldObjects)) {\n                  allFields.push(...fields);\n                }\n              }\n\n              const storage = this.annotationStorage;\n              const allIds = [];\n\n              for (const field of allFields) {\n                const {\n                  id\n                } = field;\n                allIds.push(id);\n\n                switch (field.type) {\n                  case \"text\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value,\n                        valueAsString: value\n                      });\n                      break;\n                    }\n\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      const value = field.defaultValue === field.exportValues;\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  default:\n                    continue;\n                }\n\n                const domElement = document.getElementById(id);\n\n                if (!domElement || !GetElementsByNameSet.has(domElement)) {\n                  continue;\n                }\n\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n\n              if (this.enableScripting) {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n\n              return false;\n            };\n          }\n\n        }\n\n        class TextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          render() {\n            this.container.className = \"textAnnotation\";\n            const image = document.createElement(\"img\");\n            image.style.height = this.container.style.height;\n            image.style.width = this.container.style.width;\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n\n            if (!this.data.hasPopup) {\n              this._createPopup(image, this.data);\n            }\n\n            this.container.appendChild(image);\n            return this.container;\n          }\n\n        }\n\n        class WidgetAnnotationElement extends AnnotationElement {\n          render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n\n            return this.container;\n          }\n\n          _getKeyModifier(event) {\n            const {\n              isWin,\n              isMac\n            } = AnnotationElement.platform;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n\n          _setEventListener(element, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: this._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n\n          _setEventListeners(element, names, getter) {\n            for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                this._setEventListener(element, baseName, eventName, getter);\n              }\n            }\n          }\n\n          _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n\n          _dispatchEventFromSandbox(actions, jsEvent) {\n            const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              event.target.style[styleName] = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n            };\n\n            const commonActions = {\n              display: event => {\n                const hidden = event.detail.display % 2 === 1;\n                event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  hidden,\n                  print: event.detail.display === 0 || event.detail.display === 3\n                });\n              },\n              print: event => {\n                this.annotationStorage.setValue(this.data.id, {\n                  print: event.detail.print\n                });\n              },\n              hidden: event => {\n                event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  hidden: event.detail.hidden\n                });\n              },\n              focus: event => {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n              userName: event => {\n                event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                if (event.detail.readonly) {\n                  event.target.setAttribute(\"readonly\", \"\");\n                } else {\n                  event.target.removeAttribute(\"readonly\");\n                }\n              },\n              required: event => {\n                if (event.detail.required) {\n                  event.target.setAttribute(\"required\", \"\");\n                } else {\n                  event.target.removeAttribute(\"required\");\n                }\n              },\n              bgColor: event => {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              }\n            };\n\n            for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n\n              if (action) {\n                action(jsEvent);\n              }\n            }\n          }\n\n        }\n\n        class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          setPropertyOnSiblings(base, key, value, keyInStorage) {\n            const storage = this.annotationStorage;\n\n            for (const element of this._getElementsByName(base.name, base.id)) {\n              if (element.domElement) {\n                element.domElement[key] = value;\n              }\n\n              storage.setValue(element.id, {\n                [keyInStorage]: value\n              });\n            }\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            this.container.className = \"textWidgetAnnotation\";\n            let element = null;\n\n            if (this.renderForms) {\n              const storedData = storage.getValue(id, {\n                value: this.data.fieldValue,\n                valueAsString: this.data.fieldValue\n              });\n              const textContent = storedData.valueAsString || storedData.value || \"\";\n              const elementData = {\n                userValue: null,\n                formattedValue: null\n              };\n\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = textContent;\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", textContent);\n              }\n\n              GetElementsByNameSet.add(element);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              elementData.userValue = textContent;\n              element.setAttribute(\"id\", id);\n              element.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n              });\n              element.addEventListener(\"resetform\", event => {\n                const defaultValue = this.data.defaultFieldValue || \"\";\n                element.value = elementData.userValue = defaultValue;\n                delete elementData.formattedValue;\n              });\n\n              let blurListener = event => {\n                if (elementData.formattedValue) {\n                  event.target.value = elementData.formattedValue;\n                }\n\n                event.target.scrollLeft = 0;\n              };\n\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"focus\", event => {\n                  if (elementData.userValue) {\n                    event.target.value = elementData.userValue;\n                  }\n                });\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                    value(event) {\n                      elementData.userValue = event.detail.value || \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n\n                      if (!elementData.formattedValue) {\n                        event.target.value = elementData.userValue;\n                      }\n                    },\n\n                    valueAsString(event) {\n                      elementData.formattedValue = event.detail.valueAsString || \"\";\n\n                      if (event.target !== document.activeElement) {\n                        event.target.value = elementData.formattedValue;\n                      }\n\n                      storage.setValue(id, {\n                        formattedValue: elementData.formattedValue\n                      });\n                    },\n\n                    selRange(event) {\n                      const [selStart, selEnd] = event.detail.selRange;\n\n                      if (selStart >= 0 && selEnd < event.target.value.length) {\n                        event.target.setSelectionRange(selStart, selEnd);\n                      }\n                    }\n\n                  };\n\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", event => {\n                  let commitKey = -1;\n\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\") {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    commitKey = 3;\n                  }\n\n                  if (commitKey === -1) {\n                    return;\n                  }\n\n                  elementData.userValue = event.target.value;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value: event.target.value,\n                      willCommit: true,\n                      commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                const _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", event => {\n                  elementData.userValue = event.target.value;\n\n                  if (this._mouseState.isDown) {\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value: event.target.value,\n                        willCommit: true,\n                        commitKey: 1,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n\n                  _blurListener(event);\n                });\n\n                if (this.data.actions?.Keystroke) {\n                  element.addEventListener(\"beforeinput\", event => {\n                    elementData.formattedValue = \"\";\n                    const {\n                      data,\n                      target\n                    } = event;\n                    const {\n                      value,\n                      selectionStart,\n                      selectionEnd\n                    } = target;\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        change: data,\n                        willCommit: false,\n                        selStart: selectionStart,\n                        selEnd: selectionEnd\n                      }\n                    });\n                  });\n                }\n\n                this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n              }\n\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n\n              if (this.data.maxLen !== null) {\n                element.maxLength = this.data.maxLen;\n              }\n\n              if (this.data.comb) {\n                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                const combWidth = fieldWidth / this.data.maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n\n            this._setTextStyle(element);\n\n            this._setBackgroundColor(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n          _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const {\n              fontSize,\n              fontColor\n            } = this.data.defaultAppearanceData;\n            const style = element.style;\n\n            if (fontSize) {\n              style.fontSize = `${fontSize}px`;\n            }\n\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n\n        }\n\n        class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.disabled = data.readOnly;\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.setAttribute(\"id\", id);\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const checkbox of this._getElementsByName(name, id)) {\n                const curChecked = checked && checkbox.exportValue === data.exportValue;\n\n                if (checkbox.domElement) {\n                  checkbox.domElement.checked = curChecked;\n                }\n\n                storage.setValue(checkbox.id, {\n                  value: curChecked\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n        }\n\n        class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.disabled = data.readOnly;\n            element.type = \"radio\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.setAttribute(\"id\", id);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const radio of this._getElementsByName(name, id)) {\n                storage.setValue(radio.id, {\n                  value: false\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value: event => {\n                    const checked = pdfButtonValue === event.detail.value;\n\n                    for (const radio of this._getElementsByName(event.target.name)) {\n                      const curChecked = checked && radio.id === id;\n\n                      if (radio.domElement) {\n                        radio.domElement.checked = curChecked;\n                      }\n\n                      storage.setValue(radio.id, {\n                        value: curChecked\n                      });\n                    }\n                  }\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n        }\n\n        class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              ignoreBorder: parameters.data.hasAppearance\n            });\n          }\n\n          render() {\n            const container = super.render();\n            container.className = \"buttonWidgetAnnotation pushButton\";\n\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n\n            return container;\n          }\n\n        }\n\n        class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.className = \"choiceWidgetAnnotation\";\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            storage.getValue(id, {\n              value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n            });\n            let {\n              fontSize\n            } = this.data.defaultAppearanceData;\n\n            if (!fontSize) {\n              fontSize = 9;\n            }\n\n            const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n            const selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.disabled = this.data.readOnly;\n            selectElement.name = this.data.fieldName;\n            selectElement.setAttribute(\"id\", id);\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            selectElement.style.fontSize = `${fontSize}px`;\n\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n\n            selectElement.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue;\n\n              for (const option of selectElement.options) {\n                option.selected = option.value === defaultValue;\n              }\n            });\n\n            for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n\n              if (this.data.combo) {\n                optionElement.style.fontSize = fontSizeStyle;\n              }\n\n              if (this.data.fieldValue.includes(option.exportValue)) {\n                optionElement.setAttribute(\"selected\", true);\n              }\n\n              selectElement.appendChild(optionElement);\n            }\n\n            const getValue = (event, isExport) => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const options = event.target.options;\n\n              if (!event.target.multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n\n              return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n            };\n\n            const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    const value = event.detail.value;\n                    const values = new Set(Array.isArray(value) ? value : [value]);\n\n                    for (const option of selectElement.options) {\n                      option.selected = values.has(option.value);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n\n                  multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n\n                  remove(event) {\n                    const options = selectElement.options;\n                    const index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n\n                    if (options.length > 0) {\n                      const i = Array.prototype.findIndex.call(options, option => option.selected);\n\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                  },\n\n                  insert(event) {\n                    const {\n                      index,\n                      displayValue,\n                      exportValue\n                    } = event.detail.insert;\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    selectElement.insertBefore(optionElement, selectElement.children[index]);\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  items(event) {\n                    const {\n                      items\n                    } = event.detail;\n\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    for (const item of items) {\n                      const {\n                        displayValue,\n                        exportValue\n                      } = item;\n                      const optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.appendChild(optionElement);\n                    }\n\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  indices(event) {\n                    const indices = new Set(event.detail.indices);\n\n                    for (const option of event.target.options) {\n                      option.selected = indices.has(option.index);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n\n                  editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                const exportValue = getValue(event, true);\n                const value = getValue(event, false);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value,\n                    changeEx: exportValue,\n                    willCommit: true,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n\n              this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked);\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(event)\n                });\n              });\n            }\n\n            this._setBackgroundColor(selectElement);\n\n            this.container.appendChild(selectElement);\n            return this.container;\n          }\n\n        }\n\n        class PopupAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          render() {\n            const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n\n            const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n            const parentElements = this.layer.querySelectorAll(selector);\n\n            if (parentElements.length === 0) {\n              return this.container;\n            }\n\n            const popup = new PopupElement({\n              container: this.container,\n              trigger: Array.from(parentElements),\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText\n            });\n            const page = this.page;\n\n            const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n            const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n            const popupTop = rect[1];\n            this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n            this.container.style.left = `${popupLeft}px`;\n            this.container.style.top = `${popupTop}px`;\n            this.container.appendChild(popup.render());\n            return this.container;\n          }\n\n        }\n\n        class PopupElement {\n          constructor(parameters) {\n            this.container = parameters.container;\n            this.trigger = parameters.trigger;\n            this.color = parameters.color;\n            this.titleObj = parameters.titleObj;\n            this.modificationDate = parameters.modificationDate;\n            this.contentsObj = parameters.contentsObj;\n            this.richText = parameters.richText;\n            this.hideWrapper = parameters.hideWrapper || false;\n            this.pinned = false;\n          }\n\n          render() {\n            const BACKGROUND_ENLIGHT = 0.7;\n            const wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.hidden = true;\n            const popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            const color = this.color;\n\n            if (color) {\n              const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n            }\n\n            const title = document.createElement(\"h1\");\n            title.dir = this.titleObj.dir;\n            title.textContent = this.titleObj.str;\n            popup.appendChild(title);\n\n            const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n            if (dateObject) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.className = \"popupDate\";\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.appendChild(modificationDate);\n            }\n\n            if (this.richText?.str && (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: this.richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n\n              popup.lastChild.className = \"richText popupContent\";\n            } else {\n              const contents = this._formatContents(this.contentsObj);\n\n              popup.appendChild(contents);\n            }\n\n            if (!Array.isArray(this.trigger)) {\n              this.trigger = [this.trigger];\n            }\n\n            for (const element of this.trigger) {\n              element.addEventListener(\"click\", this._toggle.bind(this));\n              element.addEventListener(\"mouseover\", this._show.bind(this, false));\n              element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n            }\n\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.appendChild(popup);\n            return wrapper;\n          }\n\n          _formatContents(_ref26) {\n            let {\n              str,\n              dir\n            } = _ref26;\n            const p = document.createElement(\"p\");\n            p.className = \"popupContent\";\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.appendChild(document.createTextNode(line));\n\n              if (i < ii - 1) {\n                p.appendChild(document.createElement(\"br\"));\n              }\n            }\n\n            return p;\n          }\n\n          _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n\n          _show() {\n            let pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (pin) {\n              this.pinned = true;\n            }\n\n            if (this.hideElement.hidden) {\n              this.hideElement.hidden = false;\n              this.container.style.zIndex += 1;\n            }\n          }\n\n          _hide() {\n            let unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (unpin) {\n              this.pinned = false;\n            }\n\n            if (!this.hideElement.hidden && !this.pinned) {\n              this.hideElement.hidden = true;\n              this.container.style.zIndex -= 1;\n            }\n          }\n\n        }\n\n        class FreeTextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"freeTextAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class LineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"lineAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(line);\n            this.container.append(svg);\n\n            this._createPopup(line, data);\n\n            return this.container;\n          }\n\n        }\n\n        class SquareAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"squareAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const borderWidth = data.borderStyle.width;\n            const square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(square);\n            this.container.append(svg);\n\n            this._createPopup(square, data);\n\n            return this.container;\n          }\n\n        }\n\n        class CircleAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"circleAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const borderWidth = data.borderStyle.width;\n            const circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(circle);\n            this.container.append(svg);\n\n            this._createPopup(circle, data);\n\n            return this.container;\n          }\n\n        }\n\n        class PolylineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"polylineAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n\n          render() {\n            this.container.className = this.containerClassName;\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            let points = [];\n\n            for (const coordinate of data.vertices) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n\n            points = points.join(\" \");\n            const polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(polyline);\n            this.container.append(svg);\n\n            this._createPopup(polyline, data);\n\n            return this.container;\n          }\n\n        }\n\n        class PolygonAnnotationElement extends PolylineAnnotationElement {\n          constructor(parameters) {\n            super(parameters);\n            this.containerClassName = \"polygonAnnotation\";\n            this.svgElementName = \"svg:polygon\";\n          }\n\n        }\n\n        class CaretAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"caretAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class InkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"inkAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n\n          render() {\n            this.container.className = this.containerClassName;\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n\n            for (const inkList of data.inkLists) {\n              let points = [];\n\n              for (const coordinate of inkList) {\n                const x = coordinate.x - data.rect[0];\n                const y = data.rect[3] - coordinate.y;\n                points.push(`${x},${y}`);\n              }\n\n              points = points.join(\" \");\n              const polyline = this.svgFactory.createElement(this.svgElementName);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"transparent\");\n\n              this._createPopup(polyline, data);\n\n              svg.appendChild(polyline);\n            }\n\n            this.container.append(svg);\n            return this.container;\n          }\n\n        }\n\n        class HighlightAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"highlightAnnotation\");\n            }\n\n            this.container.className = \"highlightAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class UnderlineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"underlineAnnotation\");\n            }\n\n            this.container.className = \"underlineAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class SquigglyAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"squigglyAnnotation\");\n            }\n\n            this.container.className = \"squigglyAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class StrikeOutAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n            }\n\n            this.container.className = \"strikeoutAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class StampAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"stampAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class FileAttachmentAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n            const {\n              filename,\n              content\n            } = this.data.file;\n            this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n            this.content = content;\n            this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              id: (0, _util.stringToPDFString)(filename),\n              filename,\n              content\n            });\n          }\n\n          render() {\n            this.container.className = \"fileAttachmentAnnotation\";\n            const trigger = document.createElement(\"div\");\n            trigger.style.height = this.container.style.height;\n            trigger.style.width = this.container.style.width;\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n            if (!this.data.hasPopup && (this.data.titleObj?.str || this.data.contentsObj?.str || this.data.richText)) {\n              this._createPopup(trigger, this.data);\n            }\n\n            this.container.appendChild(trigger);\n            return this.container;\n          }\n\n          _download() {\n            this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n          }\n\n        }\n\n        class AnnotationLayer {\n          static render(parameters) {\n            const sortedAnnotations = [],\n                  popupAnnotations = [];\n\n            for (const data of parameters.annotations) {\n              if (!data) {\n                continue;\n              }\n\n              const {\n                width,\n                height\n              } = getRectDims(data.rect);\n\n              if (width <= 0 || height <= 0) {\n                continue;\n              }\n\n              if (data.annotationType === _util.AnnotationType.POPUP) {\n                popupAnnotations.push(data);\n                continue;\n              }\n\n              sortedAnnotations.push(data);\n            }\n\n            if (popupAnnotations.length) {\n              sortedAnnotations.push(...popupAnnotations);\n            }\n\n            const div = parameters.div;\n\n            for (const data of sortedAnnotations) {\n              const element = AnnotationElementFactory.create({\n                data,\n                layer: div,\n                page: parameters.page,\n                viewport: parameters.viewport,\n                linkService: parameters.linkService,\n                downloadManager: parameters.downloadManager,\n                imageResourcesPath: parameters.imageResourcesPath || \"\",\n                renderForms: parameters.renderForms !== false,\n                svgFactory: new _display_utils.DOMSVGFactory(),\n                annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n                enableScripting: parameters.enableScripting,\n                hasJSActions: parameters.hasJSActions,\n                fieldObjects: parameters.fieldObjects,\n                mouseState: parameters.mouseState || {\n                  isDown: false\n                }\n              });\n\n              if (element.isRenderable) {\n                const rendered = element.render();\n\n                if (data.hidden) {\n                  rendered.style.visibility = \"hidden\";\n                }\n\n                if (Array.isArray(rendered)) {\n                  for (const renderedElement of rendered) {\n                    div.appendChild(renderedElement);\n                  }\n                } else {\n                  if (element instanceof PopupAnnotationElement) {\n                    div.prepend(rendered);\n                  } else {\n                    div.appendChild(rendered);\n                  }\n                }\n              }\n            }\n\n            this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n          }\n\n          static update(parameters) {\n            const {\n              page,\n              viewport,\n              annotations,\n              annotationCanvasMap,\n              div\n            } = parameters;\n            const transform = viewport.transform;\n            const matrix = `matrix(${transform.join(\",\")})`;\n            let scale, ownMatrix;\n\n            for (const data of annotations) {\n              const elements = div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n              if (elements) {\n                for (const element of elements) {\n                  if (data.hasOwnCanvas) {\n                    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n                    if (!ownMatrix) {\n                      scale = Math.abs(transform[0] || transform[1]);\n                      const ownTransform = transform.slice();\n\n                      for (let i = 0; i < 4; i++) {\n                        ownTransform[i] = Math.sign(ownTransform[i]);\n                      }\n\n                      ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n                    }\n\n                    const left = rect[0] * scale;\n                    const top = rect[1] * scale;\n                    element.style.left = `${left}px`;\n                    element.style.top = `${top}px`;\n                    element.style.transformOrigin = `${-left}px ${-top}px`;\n                    element.style.transform = ownMatrix;\n                  } else {\n                    element.style.transform = matrix;\n                  }\n                }\n              }\n            }\n\n            this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n            div.hidden = false;\n          }\n\n          static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n            if (!annotationCanvasMap) {\n              return;\n            }\n\n            for (const [id, canvas] of annotationCanvasMap) {\n              const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n\n              if (!element) {\n                continue;\n              }\n\n              const {\n                firstChild\n              } = element;\n\n              if (firstChild.nodeName === \"CANVAS\") {\n                element.replaceChild(canvas, firstChild);\n              } else {\n                element.insertBefore(canvas, firstChild);\n              }\n            }\n\n            annotationCanvasMap.clear();\n          }\n\n        }\n\n        exports.AnnotationLayer = AnnotationLayer;\n        /***/\n      },\n      /* 19 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n\n        class ColorConverters {\n          static CMYK_G(_ref27) {\n            let [c, y, m, k] = _ref27;\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n\n          static G_CMYK(_ref28) {\n            let [g] = _ref28;\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n\n          static G_RGB(_ref29) {\n            let [g] = _ref29;\n            return [\"RGB\", g, g, g];\n          }\n\n          static G_HTML(_ref30) {\n            let [g] = _ref30;\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n          }\n\n          static RGB_G(_ref31) {\n            let [r, g, b] = _ref31;\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n\n          static RGB_HTML(_ref32) {\n            let [r, g, b] = _ref32;\n            const R = makeColorComp(r);\n            const G = makeColorComp(g);\n            const B = makeColorComp(b);\n            return `#${R}${G}${B}`;\n          }\n\n          static T_HTML() {\n            return \"#00000000\";\n          }\n\n          static CMYK_RGB(_ref33) {\n            let [c, y, m, k] = _ref33;\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n\n          static CMYK_HTML(components) {\n            return this.RGB_HTML(this.CMYK_RGB(components));\n          }\n\n          static RGB_CMYK(_ref34) {\n            let [r, g, b] = _ref34;\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n\n        }\n\n        exports.ColorConverters = ColorConverters;\n        /***/\n      },\n      /* 20 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _xfa_text = __w_pdfjs_require__(17);\n\n        class XfaLayer {\n          static setupStorage(html, id, element, storage, intent) {\n            const storedData = storage.getValue(id, {\n              value: null\n            });\n\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n\n                if (intent === \"print\") {\n                  break;\n                }\n\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"change\", event => {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"input\", event => {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n\n                break;\n\n              case \"select\":\n                if (storedData.value !== null) {\n                  for (const option of element.children) {\n                    if (option.attributes.value === storedData.value) {\n                      option.attributes.selected = true;\n                    }\n                  }\n                }\n\n                html.addEventListener(\"input\", event => {\n                  const options = event.target.options;\n                  const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value\n                  });\n                });\n                break;\n            }\n          }\n\n          static setAttributes(_ref35) {\n            let {\n              html,\n              element,\n              storage = null,\n              intent,\n              linkService\n            } = _ref35;\n            const {\n              attributes\n            } = element;\n            const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n            if (attributes.type === \"radio\") {\n              attributes.name = `${attributes.name}-${intent}`;\n            }\n\n            for (const [key, value] of Object.entries(attributes)) {\n              if (value === null || value === undefined || key === \"dataId\") {\n                continue;\n              }\n\n              if (key !== \"style\") {\n                if (key === \"textContent\") {\n                  html.textContent = value;\n                } else if (key === \"class\") {\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n                } else {\n                  if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n                    continue;\n                  }\n\n                  html.setAttribute(key, value);\n                }\n              } else {\n                Object.assign(html.style, value);\n              }\n            }\n\n            if (isHTMLAnchorElement) {\n              if (!linkService.addLinkAttributes) {\n                (0, _util.warn)(\"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\");\n              }\n\n              linkService.addLinkAttributes?.(html, attributes.href, attributes.newWindow);\n            }\n\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n\n          static render(parameters) {\n            const storage = parameters.annotationStorage;\n            const linkService = parameters.linkService;\n            const root = parameters.xfaHtml;\n            const intent = parameters.intent || \"display\";\n            const rootHtml = document.createElement(root.name);\n\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent,\n                linkService\n              });\n            }\n\n            const stack = [[root, -1, rootHtml]];\n            const rootDiv = parameters.div;\n            rootDiv.appendChild(rootHtml);\n\n            if (parameters.viewport) {\n              const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n              rootDiv.style.transform = transform;\n            }\n\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n\n            const textDivs = [];\n\n            while (stack.length > 0) {\n              const [parent, i, html] = stack[stack.length - 1];\n\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n\n              const child = parent.children[++stack[stack.length - 1][1]];\n\n              if (child === null) {\n                continue;\n              }\n\n              const {\n                name\n              } = child;\n\n              if (name === \"#text\") {\n                const node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.appendChild(node);\n                continue;\n              }\n\n              let childHtml;\n\n              if (child?.attributes?.xmlns) {\n                childHtml = document.createElementNS(child.attributes.xmlns, name);\n              } else {\n                childHtml = document.createElement(name);\n              }\n\n              html.appendChild(childHtml);\n\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage,\n                  intent,\n                  linkService\n                });\n              }\n\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                const node = document.createTextNode(child.value);\n\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(node);\n                }\n\n                childHtml.appendChild(node);\n              }\n            }\n\n            for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n              el.setAttribute(\"readOnly\", true);\n            }\n\n            return {\n              textDivs\n            };\n          }\n\n          static update(parameters) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n\n        }\n\n        exports.XfaLayer = XfaLayer;\n        /***/\n      },\n      /* 21 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.renderTextLayer = renderTextLayer;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const MAX_TEXT_DIVS_TO_RENDER = 100000;\n        const DEFAULT_FONT_SIZE = 30;\n        const DEFAULT_FONT_ASCENT = 0.8;\n        const ascentCache = new Map();\n        const AllWhitespaceRegexp = /^\\s+$/g;\n\n        function getAscent(fontFamily, ctx) {\n          const cachedAscent = ascentCache.get(fontFamily);\n\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n\n          ctx.save();\n          ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n          const metrics = ctx.measureText(\"\");\n          let ascent = metrics.fontBoundingBoxAscent;\n          let descent = Math.abs(metrics.fontBoundingBoxDescent);\n\n          if (ascent) {\n            ctx.restore();\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n\n          for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n\n          for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n            if (pixels[i] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.restore();\n\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n\n        function appendText(task, geom, styles, ctx) {\n          const textDiv = document.createElement(\"span\");\n          const textDivProperties = task._enhanceTextSelection ? {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          } : {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL\n          };\n\n          task._textDivs.push(textDiv);\n\n          const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          let angle = Math.atan2(tx[1], tx[0]);\n          const style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          const fontHeight = Math.hypot(tx[2], tx[3]);\n          const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n          let left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = `${left}px`;\n          textDiv.style.top = `${top}px`;\n          textDiv.style.fontSize = `${fontHeight}px`;\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          let shouldScaleText = false;\n\n          if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n            shouldScaleText = true;\n          } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n                  absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection && textDivProperties.hasText) {\n            let angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            const divHeight = fontHeight;\n            let m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          const textDivs = task._textDivs;\n          const capability = task._capability;\n          const textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (let i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function findPositiveMin(ts, offset, count) {\n          let result = 0;\n\n          for (let i = 0; i < count; i++) {\n            const t = ts[offset++];\n\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n\n          return result;\n        }\n\n        function expand(task) {\n          const bounds = task._bounds;\n          const viewport = task._viewport;\n          const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (let i = 0; i < expanded.length; i++) {\n            const div = bounds[i].div;\n\n            const divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            const e = expanded[i],\n                  b = bounds[i];\n            const m = b.m,\n                  c = m[0],\n                  s = m[1];\n            const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            const ts = new Float64Array(64);\n\n            for (let j = 0, jj = points.length; j < jj; j++) {\n              const t = _util.Util.applyTransform(points[j], m);\n\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            }\n\n            const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          const bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          const expanded = new Array(boxes.length);\n\n          for (const b of bounds) {\n            const i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          }\n\n          boxes.map(function (box, i) {\n            const e = expanded[i],\n                  b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n\n          for (const b of bounds) {\n            const i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          }\n\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          const fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          const horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n\n          for (const boundary of bounds) {\n            let i = 0;\n\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n\n            let j = horizon.length - 1;\n\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n\n            let horizonPart, affectedBoundary;\n            let q,\n                k,\n                maxXNew = -Infinity;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              let xNew;\n\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n\n            boundary.x1New = maxXNew;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n\n            const changedHorizon = [];\n            let lastBoundary = null;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n\n              let used = false;\n\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          }\n\n          for (const horizonPart of horizon) {\n            const affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          }\n        }\n\n        class TextLayerRenderTask {\n          constructor(_ref36) {\n            let {\n              textContent,\n              textContentStream,\n              container,\n              viewport,\n              textDivs,\n              textContentItemsStr,\n              enhanceTextSelection\n            } = _ref36;\n            this._textContent = textContent;\n            this._textContentStream = textContentStream;\n            this._container = container;\n            this._document = container.ownerDocument;\n            this._viewport = viewport;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._enhanceTextSelection = !!enhanceTextSelection;\n            this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n            this._reader = null;\n            this._layoutTextLastFontSize = null;\n            this._layoutTextLastFontFamily = null;\n            this._layoutTextCtx = null;\n            this._textDivProperties = new WeakMap();\n            this._renderingDone = false;\n            this._canceled = false;\n            this._capability = (0, _util.createPromiseCapability)();\n            this._renderTimer = null;\n            this._bounds = [];\n\n            this._capability.promise.finally(() => {\n              if (!this._enhanceTextSelection) {\n                this._textDivProperties = null;\n              }\n\n              if (this._layoutTextCtx) {\n                this._layoutTextCtx.canvas.width = 0;\n                this._layoutTextCtx.canvas.height = 0;\n                this._layoutTextCtx = null;\n              }\n            }).catch(() => {});\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n\n              this._reader = null;\n            }\n\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          }\n\n          _processItems(items, styleCache) {\n            for (let i = 0, len = items.length; i < len; i++) {\n              if (items[i].str === undefined) {\n                if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n                  const parent = this._container;\n                  this._container = document.createElement(\"span\");\n\n                  this._container.classList.add(\"markedContent\");\n\n                  if (items[i].id !== null) {\n                    this._container.setAttribute(\"id\", `${items[i].id}`);\n                  }\n\n                  parent.appendChild(this._container);\n                } else if (items[i].type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n\n                continue;\n              }\n\n              this._textContentItemsStr.push(items[i].str);\n\n              appendText(this, items[i], styleCache, this._layoutTextCtx);\n            }\n          }\n\n          _layoutText(textDiv) {\n            const textDivProperties = this._textDivProperties.get(textDiv);\n\n            let transform = \"\";\n\n            if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n              const {\n                fontSize,\n                fontFamily\n              } = textDiv.style;\n\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n\n              const {\n                width\n              } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n              if (width > 0) {\n                const scale = textDivProperties.canvasWidth / width;\n\n                if (this._enhanceTextSelection) {\n                  textDivProperties.scale = scale;\n                }\n\n                transform = `scaleX(${scale})`;\n              }\n            }\n\n            if (textDivProperties.angle !== 0) {\n              transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n            }\n\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n\n              textDiv.style.transform = transform;\n            }\n\n            if (textDivProperties.hasText) {\n              this._container.appendChild(textDiv);\n            }\n\n            if (textDivProperties.hasEOL) {\n              const br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n\n              this._container.appendChild(br);\n            }\n          }\n\n          _render() {\n            let timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            const capability = (0, _util.createPromiseCapability)();\n            let styleCache = Object.create(null);\n\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n\n            if (this._textContent) {\n              const textItems = this._textContent.items;\n              const textStyles = this._textContent.styles;\n\n              this._processItems(textItems, textStyles);\n\n              capability.resolve();\n            } else if (this._textContentStream) {\n              const pump = () => {\n                this._reader.read().then(_ref37 => {\n                  let {\n                    value,\n                    done\n                  } = _ref37;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  this._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.');\n            }\n\n            capability.promise.then(() => {\n              styleCache = null;\n\n              if (!timeout) {\n                render(this);\n              } else {\n                this._renderTimer = setTimeout(() => {\n                  render(this);\n                  this._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          }\n\n          expandTextDivs() {\n            let expandDivs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n\n            const transformBuf = [],\n                  paddingBuf = [];\n\n            for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n              const div = this._textDivs[i];\n\n              const divProps = this._textDivProperties.get(div);\n\n              if (!divProps.hasText) {\n                continue;\n              }\n\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(`${divProps.paddingTop}px`);\n                  transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(`${divProps.paddingBottom}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                  transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                div.style.padding = paddingBuf.join(\" \");\n\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n\n        }\n\n        function renderTextLayer(renderParameters) {\n          const task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n        /***/\n\n      },\n      /* 22 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        let SVGGraphics = class {\n          constructor() {\n            (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n          }\n\n        };\n        exports.SVGGraphics = SVGGraphics;\n        {\n          const SVG_DEFAULTS = {\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n            fillColor: \"#000000\"\n          };\n          const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n          const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n          const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n          const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n          const createObjectURL = function (data) {\n            let contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n              return URL.createObjectURL(new Blob([data], {\n                type: contentType\n              }));\n            }\n\n            const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n            let buffer = `data:${contentType};base64,`;\n\n            for (let i = 0, ii = data.length; i < ii; i += 3) {\n              const b1 = data[i] & 0xff;\n              const b2 = data[i + 1] & 0xff;\n              const b3 = data[i + 2] & 0xff;\n              const d1 = b1 >> 2,\n                    d2 = (b1 & 3) << 4 | b2 >> 4;\n              const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n              const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n              buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n            }\n\n            return buffer;\n          };\n\n          const convertImgDataToPng = function () {\n            const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n            const CHUNK_WRAPPER_SIZE = 12;\n            const crcTable = new Int32Array(256);\n\n            for (let i = 0; i < 256; i++) {\n              let c = i;\n\n              for (let h = 0; h < 8; h++) {\n                if (c & 1) {\n                  c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n                } else {\n                  c = c >> 1 & 0x7fffffff;\n                }\n              }\n\n              crcTable[i] = c;\n            }\n\n            function crc32(data, start, end) {\n              let crc = -1;\n\n              for (let i = start; i < end; i++) {\n                const a = (crc ^ data[i]) & 0xff;\n                const b = crcTable[a];\n                crc = crc >>> 8 ^ b;\n              }\n\n              return crc ^ -1;\n            }\n\n            function writePngChunk(type, body, data, offset) {\n              let p = offset;\n              const len = body.length;\n              data[p] = len >> 24 & 0xff;\n              data[p + 1] = len >> 16 & 0xff;\n              data[p + 2] = len >> 8 & 0xff;\n              data[p + 3] = len & 0xff;\n              p += 4;\n              data[p] = type.charCodeAt(0) & 0xff;\n              data[p + 1] = type.charCodeAt(1) & 0xff;\n              data[p + 2] = type.charCodeAt(2) & 0xff;\n              data[p + 3] = type.charCodeAt(3) & 0xff;\n              p += 4;\n              data.set(body, p);\n              p += body.length;\n              const crc = crc32(data, offset + 4, p);\n              data[p] = crc >> 24 & 0xff;\n              data[p + 1] = crc >> 16 & 0xff;\n              data[p + 2] = crc >> 8 & 0xff;\n              data[p + 3] = crc & 0xff;\n            }\n\n            function adler32(data, start, end) {\n              let a = 1;\n              let b = 0;\n\n              for (let i = start; i < end; ++i) {\n                a = (a + (data[i] & 0xff)) % 65521;\n                b = (b + a) % 65521;\n              }\n\n              return b << 16 | a;\n            }\n\n            function deflateSync(literals) {\n              if (!_is_node.isNodeJS) {\n                return deflateSyncUncompressed(literals);\n              }\n\n              try {\n                let input;\n\n                if (parseInt(process.versions.node) >= 8) {\n                  input = literals;\n                } else {\n                  input = Buffer.from(literals);\n                }\n\n                const output = require(\"zlib\").deflateSync(input, {\n                  level: 9\n                });\n\n                return output instanceof Uint8Array ? output : new Uint8Array(output);\n              } catch (e) {\n                (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n              }\n\n              return deflateSyncUncompressed(literals);\n            }\n\n            function deflateSyncUncompressed(literals) {\n              let len = literals.length;\n              const maxBlockLength = 0xffff;\n              const deflateBlocks = Math.ceil(len / maxBlockLength);\n              const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n              let pi = 0;\n              idat[pi++] = 0x78;\n              idat[pi++] = 0x9c;\n              let pos = 0;\n\n              while (len > maxBlockLength) {\n                idat[pi++] = 0x00;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0x00;\n                idat[pi++] = 0x00;\n                idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n                pi += maxBlockLength;\n                pos += maxBlockLength;\n                len -= maxBlockLength;\n              }\n\n              idat[pi++] = 0x01;\n              idat[pi++] = len & 0xff;\n              idat[pi++] = len >> 8 & 0xff;\n              idat[pi++] = ~len & 0xffff & 0xff;\n              idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n              idat.set(literals.subarray(pos), pi);\n              pi += literals.length - pos;\n              const adler = adler32(literals, 0, literals.length);\n              idat[pi++] = adler >> 24 & 0xff;\n              idat[pi++] = adler >> 16 & 0xff;\n              idat[pi++] = adler >> 8 & 0xff;\n              idat[pi++] = adler & 0xff;\n              return idat;\n            }\n\n            function encode(imgData, kind, forceDataSchema, isMask) {\n              const width = imgData.width;\n              const height = imgData.height;\n              let bitDepth, colorType, lineSize;\n              const bytes = imgData.data;\n\n              switch (kind) {\n                case _util.ImageKind.GRAYSCALE_1BPP:\n                  colorType = 0;\n                  bitDepth = 1;\n                  lineSize = width + 7 >> 3;\n                  break;\n\n                case _util.ImageKind.RGB_24BPP:\n                  colorType = 2;\n                  bitDepth = 8;\n                  lineSize = width * 3;\n                  break;\n\n                case _util.ImageKind.RGBA_32BPP:\n                  colorType = 6;\n                  bitDepth = 8;\n                  lineSize = width * 4;\n                  break;\n\n                default:\n                  throw new Error(\"invalid format\");\n              }\n\n              const literals = new Uint8Array((1 + lineSize) * height);\n              let offsetLiterals = 0,\n                  offsetBytes = 0;\n\n              for (let y = 0; y < height; ++y) {\n                literals[offsetLiterals++] = 0;\n                literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n                offsetBytes += lineSize;\n                offsetLiterals += lineSize;\n              }\n\n              if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n                offsetLiterals = 0;\n\n                for (let y = 0; y < height; y++) {\n                  offsetLiterals++;\n\n                  for (let i = 0; i < lineSize; i++) {\n                    literals[offsetLiterals++] ^= 0xff;\n                  }\n                }\n              }\n\n              const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n              const idat = deflateSync(literals);\n              const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n              const data = new Uint8Array(pngLength);\n              let offset = 0;\n              data.set(PNG_HEADER, offset);\n              offset += PNG_HEADER.length;\n              writePngChunk(\"IHDR\", ihdr, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n              writePngChunk(\"IDATA\", idat, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + idat.length;\n              writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n              return createObjectURL(data, \"image/png\", forceDataSchema);\n            }\n\n            return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n              const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n              return encode(imgData, kind, forceDataSchema, isMask);\n            };\n          }();\n\n          class SVGExtraState {\n            constructor() {\n              this.fontSizeScale = 1;\n              this.fontWeight = SVG_DEFAULTS.fontWeight;\n              this.fontSize = 0;\n              this.textMatrix = _util.IDENTITY_MATRIX;\n              this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n              this.leading = 0;\n              this.textRenderingMode = _util.TextRenderingMode.FILL;\n              this.textMatrixScale = 1;\n              this.x = 0;\n              this.y = 0;\n              this.lineX = 0;\n              this.lineY = 0;\n              this.charSpacing = 0;\n              this.wordSpacing = 0;\n              this.textHScale = 1;\n              this.textRise = 0;\n              this.fillColor = SVG_DEFAULTS.fillColor;\n              this.strokeColor = \"#000000\";\n              this.fillAlpha = 1;\n              this.strokeAlpha = 1;\n              this.lineWidth = 1;\n              this.lineJoin = \"\";\n              this.lineCap = \"\";\n              this.miterLimit = 0;\n              this.dashArray = [];\n              this.dashPhase = 0;\n              this.dependencies = [];\n              this.activeClipUrl = null;\n              this.clipGroup = null;\n              this.maskId = \"\";\n            }\n\n            clone() {\n              return Object.create(this);\n            }\n\n            setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n\n          }\n\n          function opListToTree(opList) {\n            let opTree = [];\n            const tmp = [];\n\n            for (const opListElement of opList) {\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree[opTree.length - 1].items;\n                continue;\n              }\n\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n\n            return opTree;\n          }\n\n          function pf(value) {\n            if (Number.isInteger(value)) {\n              return value.toString();\n            }\n\n            const s = value.toFixed(10);\n            let i = s.length - 1;\n\n            if (s[i] !== \"0\") {\n              return s;\n            }\n\n            do {\n              i--;\n            } while (s[i] === \"0\");\n\n            return s.substring(0, s[i] === \".\" ? i : i + 1);\n          }\n\n          function pm(m) {\n            if (m[4] === 0 && m[5] === 0) {\n              if (m[1] === 0 && m[2] === 0) {\n                if (m[0] === 1 && m[3] === 1) {\n                  return \"\";\n                }\n\n                return `scale(${pf(m[0])} ${pf(m[3])})`;\n              }\n\n              if (m[0] === m[3] && m[1] === -m[2]) {\n                const a = Math.acos(m[0]) * 180 / Math.PI;\n                return `rotate(${pf(a)})`;\n              }\n            } else {\n              if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n                return `translate(${pf(m[4])} ${pf(m[5])})`;\n              }\n            }\n\n            return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n          }\n\n          let clipCount = 0;\n          let maskCount = 0;\n          let shadingCount = 0;\n          exports.SVGGraphics = SVGGraphics = class {\n            constructor(commonObjs, objs) {\n              let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n              this.svgFactory = new _display_utils.DOMSVGFactory();\n              this.current = new SVGExtraState();\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.transformStack = [];\n              this.extraStack = [];\n              this.commonObjs = commonObjs;\n              this.objs = objs;\n              this.pendingClip = null;\n              this.pendingEOFill = false;\n              this.embedFonts = false;\n              this.embeddedFonts = Object.create(null);\n              this.cssStyle = null;\n              this.forceDataSchema = !!forceDataSchema;\n              this._operatorIdMapping = [];\n\n              for (const op in _util.OPS) {\n                this._operatorIdMapping[_util.OPS[op]] = op;\n              }\n            }\n\n            save() {\n              this.transformStack.push(this.transformMatrix);\n              const old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n\n            restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n\n            group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n\n            loadDependencies(operatorList) {\n              const fnArray = operatorList.fnArray;\n              const argsArray = operatorList.argsArray;\n\n              for (let i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n\n                for (const obj of argsArray[i]) {\n                  const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                  const promise = new Promise(resolve => {\n                    objsPool.get(obj, resolve);\n                  });\n                  this.current.dependencies.push(promise);\n                }\n              }\n\n              return Promise.all(this.current.dependencies);\n            }\n\n            transform(a, b, c, d, e, f) {\n              const transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n\n            getSVG(operatorList, viewport) {\n              this.viewport = viewport;\n\n              const svgElement = this._initialize(viewport);\n\n              return this.loadDependencies(operatorList).then(() => {\n                this.transformMatrix = _util.IDENTITY_MATRIX;\n                this.executeOpTree(this.convertOpList(operatorList));\n                return svgElement;\n              });\n            }\n\n            convertOpList(operatorList) {\n              const operatorIdMapping = this._operatorIdMapping;\n              const argsArray = operatorList.argsArray;\n              const fnArray = operatorList.fnArray;\n              const opList = [];\n\n              for (let i = 0, ii = fnArray.length; i < ii; i++) {\n                const fnId = fnArray[i];\n                opList.push({\n                  fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n\n              return opListToTree(opList);\n            }\n\n            executeOpTree(opTree) {\n              for (const opTreeElement of opTree) {\n                const fn = opTreeElement.fn;\n                const fnId = opTreeElement.fnId;\n                const args = opTreeElement.args;\n\n                switch (fnId | 0) {\n                  case _util.OPS.beginText:\n                    this.beginText();\n                    break;\n\n                  case _util.OPS.dependency:\n                    break;\n\n                  case _util.OPS.setLeading:\n                    this.setLeading(args);\n                    break;\n\n                  case _util.OPS.setLeadingMoveText:\n                    this.setLeadingMoveText(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setFont:\n                    this.setFont(args);\n                    break;\n\n                  case _util.OPS.showText:\n                    this.showText(args[0]);\n                    break;\n\n                  case _util.OPS.showSpacedText:\n                    this.showText(args[0]);\n                    break;\n\n                  case _util.OPS.endText:\n                    this.endText();\n                    break;\n\n                  case _util.OPS.moveText:\n                    this.moveText(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setCharSpacing:\n                    this.setCharSpacing(args[0]);\n                    break;\n\n                  case _util.OPS.setWordSpacing:\n                    this.setWordSpacing(args[0]);\n                    break;\n\n                  case _util.OPS.setHScale:\n                    this.setHScale(args[0]);\n                    break;\n\n                  case _util.OPS.setTextMatrix:\n                    this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n\n                  case _util.OPS.setTextRise:\n                    this.setTextRise(args[0]);\n                    break;\n\n                  case _util.OPS.setTextRenderingMode:\n                    this.setTextRenderingMode(args[0]);\n                    break;\n\n                  case _util.OPS.setLineWidth:\n                    this.setLineWidth(args[0]);\n                    break;\n\n                  case _util.OPS.setLineJoin:\n                    this.setLineJoin(args[0]);\n                    break;\n\n                  case _util.OPS.setLineCap:\n                    this.setLineCap(args[0]);\n                    break;\n\n                  case _util.OPS.setMiterLimit:\n                    this.setMiterLimit(args[0]);\n                    break;\n\n                  case _util.OPS.setFillRGBColor:\n                    this.setFillRGBColor(args[0], args[1], args[2]);\n                    break;\n\n                  case _util.OPS.setStrokeRGBColor:\n                    this.setStrokeRGBColor(args[0], args[1], args[2]);\n                    break;\n\n                  case _util.OPS.setStrokeColorN:\n                    this.setStrokeColorN(args);\n                    break;\n\n                  case _util.OPS.setFillColorN:\n                    this.setFillColorN(args);\n                    break;\n\n                  case _util.OPS.shadingFill:\n                    this.shadingFill(args[0]);\n                    break;\n\n                  case _util.OPS.setDash:\n                    this.setDash(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setRenderingIntent:\n                    this.setRenderingIntent(args[0]);\n                    break;\n\n                  case _util.OPS.setFlatness:\n                    this.setFlatness(args[0]);\n                    break;\n\n                  case _util.OPS.setGState:\n                    this.setGState(args[0]);\n                    break;\n\n                  case _util.OPS.fill:\n                    this.fill();\n                    break;\n\n                  case _util.OPS.eoFill:\n                    this.eoFill();\n                    break;\n\n                  case _util.OPS.stroke:\n                    this.stroke();\n                    break;\n\n                  case _util.OPS.fillStroke:\n                    this.fillStroke();\n                    break;\n\n                  case _util.OPS.eoFillStroke:\n                    this.eoFillStroke();\n                    break;\n\n                  case _util.OPS.clip:\n                    this.clip(\"nonzero\");\n                    break;\n\n                  case _util.OPS.eoClip:\n                    this.clip(\"evenodd\");\n                    break;\n\n                  case _util.OPS.paintSolidColorImageMask:\n                    this.paintSolidColorImageMask();\n                    break;\n\n                  case _util.OPS.paintImageXObject:\n                    this.paintImageXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintInlineImageXObject:\n                    this.paintInlineImageXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintImageMaskXObject:\n                    this.paintImageMaskXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintFormXObjectBegin:\n                    this.paintFormXObjectBegin(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.paintFormXObjectEnd:\n                    this.paintFormXObjectEnd();\n                    break;\n\n                  case _util.OPS.closePath:\n                    this.closePath();\n                    break;\n\n                  case _util.OPS.closeStroke:\n                    this.closeStroke();\n                    break;\n\n                  case _util.OPS.closeFillStroke:\n                    this.closeFillStroke();\n                    break;\n\n                  case _util.OPS.closeEOFillStroke:\n                    this.closeEOFillStroke();\n                    break;\n\n                  case _util.OPS.nextLine:\n                    this.nextLine();\n                    break;\n\n                  case _util.OPS.transform:\n                    this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n\n                  case _util.OPS.constructPath:\n                    this.constructPath(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.endPath:\n                    this.endPath();\n                    break;\n\n                  case 92:\n                    this.group(opTreeElement.items);\n                    break;\n\n                  default:\n                    (0, _util.warn)(`Unimplemented operator ${fn}`);\n                    break;\n                }\n              }\n            }\n\n            setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n\n            setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n\n            nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n\n            setTextMatrix(a, b, c, d, e, f) {\n              const current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.hypot(a, b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.appendChild(current.tspan);\n            }\n\n            beginText() {\n              const current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n\n            moveText(x, y) {\n              const current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n\n            showText(glyphs) {\n              const current = this.current;\n              const font = current.font;\n              const fontSize = current.fontSize;\n\n              if (fontSize === 0) {\n                return;\n              }\n\n              const fontSizeScale = current.fontSizeScale;\n              const charSpacing = current.charSpacing;\n              const wordSpacing = current.wordSpacing;\n              const fontDirection = current.fontDirection;\n              const textHScale = current.textHScale * fontDirection;\n              const vertical = font.vertical;\n              const spacingDir = vertical ? 1 : -1;\n              const defaultVMetrics = font.defaultVMetrics;\n              const widthAdvanceScale = fontSize * current.fontMatrix[0];\n              let x = 0;\n\n              for (const glyph of glyphs) {\n                if (glyph === null) {\n                  x += fontDirection * wordSpacing;\n                  continue;\n                } else if (typeof glyph === \"number\") {\n                  x += spacingDir * glyph * fontSize / 1000;\n                  continue;\n                }\n\n                const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                const character = glyph.fontChar;\n                let scaledX, scaledY;\n                let width = glyph.width;\n\n                if (vertical) {\n                  let vx;\n                  const vmetric = glyph.vmetric || defaultVMetrics;\n                  vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                  vx = -vx * widthAdvanceScale;\n                  const vy = vmetric[2] * widthAdvanceScale;\n                  width = vmetric ? -vmetric[0] : width;\n                  scaledX = vx / fontSizeScale;\n                  scaledY = (x + vy) / fontSizeScale;\n                } else {\n                  scaledX = x / fontSizeScale;\n                  scaledY = 0;\n                }\n\n                if (glyph.isInFont || font.missingFile) {\n                  current.xcoords.push(current.x + scaledX);\n\n                  if (vertical) {\n                    current.ycoords.push(-current.y + scaledY);\n                  }\n\n                  current.tspan.textContent += character;\n                } else {}\n\n                let charWidth;\n\n                if (vertical) {\n                  charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                } else {\n                  charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                }\n\n                x += charWidth;\n              }\n\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n              if (vertical) {\n                current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n              } else {\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n\n              if (vertical) {\n                current.y -= x;\n              } else {\n                current.x += x * textHScale;\n              }\n\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n\n              let textMatrix = current.textMatrix;\n\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n\n              current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.appendChild(current.tspan);\n              current.txtgrp.appendChild(current.txtElement);\n\n              this._ensureTransformGroup().appendChild(current.txtElement);\n            }\n\n            setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n\n            addFontStyle(fontObj) {\n              if (!fontObj.data) {\n                throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n              }\n\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.appendChild(this.cssStyle);\n              }\n\n              const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n            }\n\n            setFont(details) {\n              const current = this.current;\n              const fontObj = this.commonObjs.get(details[0]);\n              let size = details[1];\n              current.font = fontObj;\n\n              if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n\n              current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n              let bold = \"normal\";\n\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n\n              const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n\n            endText() {\n              const current = this.current;\n\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n\n            setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n\n            setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n\n            setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n\n            setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n\n            setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n\n            setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n            }\n\n            setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n\n            setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n              this.current.ycoords = [];\n            }\n\n            setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n\n            setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n\n            shadingFill(args) {\n              const width = this.viewport.width;\n              const height = this.viewport.height;\n\n              const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n              const bl = _util.Util.applyTransform([0, 0], inv);\n\n              const br = _util.Util.applyTransform([0, height], inv);\n\n              const ul = _util.Util.applyTransform([width, 0], inv);\n\n              const ur = _util.Util.applyTransform([width, height], inv);\n\n              const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n              if (this.current.fillAlpha < 1) {\n                rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n              }\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n\n            _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n\n              return this._makeShadingPattern(args);\n            }\n\n            _makeTilingPattern(args) {\n              const color = args[1];\n              const operatorList = args[2];\n              const matrix = args[3] || _util.IDENTITY_MATRIX;\n              const [x0, y0, x1, y1] = args[4];\n              const xstep = args[5];\n              const ystep = args[6];\n              const paintType = args[7];\n              const tilingId = `shading${shadingCount++}`;\n\n              const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n\n              const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n              const txstep = xstep * xscale;\n              const tystep = ystep * yscale;\n              const tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", `${tx0}`);\n              tiling.setAttributeNS(null, \"y\", `${ty0}`);\n              const svg = this.svg;\n              const transformMatrix = this.transformMatrix;\n              const fillColor = this.current.fillColor;\n              const strokeColor = this.current.strokeColor;\n              const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n\n              if (paintType === 2) {\n                const cssColor = _util.Util.makeHexColor(...color);\n\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.appendChild(bbox.childNodes[0]);\n              this.defs.appendChild(tiling);\n              return `url(#${tilingId})`;\n            }\n\n            _makeShadingPattern(args) {\n              if (typeof args === \"string\") {\n                args = this.objs.get(args);\n              }\n\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  const shadingId = `shading${shadingCount++}`;\n                  const colorStops = args[3];\n                  let gradient;\n\n                  switch (args[1]) {\n                    case \"axial\":\n                      const point0 = args[4];\n                      const point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n\n                    case \"radial\":\n                      const focalPoint = args[4];\n                      const circlePoint = args[5];\n                      const focalRadius = args[6];\n                      const circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n\n                    default:\n                      throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                  }\n\n                  for (const colorStop of colorStops) {\n                    const stop = this.svgFactory.createElement(\"svg:stop\");\n                    stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                    stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                    gradient.appendChild(stop);\n                  }\n\n                  this.defs.appendChild(gradient);\n                  return `url(#${shadingId})`;\n\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n\n                case \"Dummy\":\n                  return \"hotpink\";\n\n                default:\n                  throw new Error(`Unknown IR type: ${args[0]}`);\n              }\n            }\n\n            setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n\n            constructPath(ops, args) {\n              const current = this.current;\n              let x = current.x,\n                  y = current.y;\n              let d = [];\n              let j = 0;\n\n              for (const op of ops) {\n                switch (op | 0) {\n                  case _util.OPS.rectangle:\n                    x = args[j++];\n                    y = args[j++];\n                    const width = args[j++];\n                    const height = args[j++];\n                    const xw = x + width;\n                    const yh = y + height;\n                    d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                    break;\n\n                  case _util.OPS.moveTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"M\", pf(x), pf(y));\n                    break;\n\n                  case _util.OPS.lineTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"L\", pf(x), pf(y));\n                    break;\n\n                  case _util.OPS.curveTo:\n                    x = args[j + 4];\n                    y = args[j + 5];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                    j += 6;\n                    break;\n\n                  case _util.OPS.curveTo2:\n                    d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    j += 4;\n                    break;\n\n                  case _util.OPS.curveTo3:\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                    j += 4;\n                    break;\n\n                  case _util.OPS.closePath:\n                    d.push(\"Z\");\n                    break;\n                }\n              }\n\n              d = d.join(\" \");\n\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n\n                this._ensureTransformGroup().appendChild(current.path);\n              }\n\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n\n            endPath() {\n              const current = this.current;\n              current.path = null;\n\n              if (!this.pendingClip) {\n                return;\n              }\n\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n\n              const clipId = `clippath${clipCount++}`;\n              const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              const clipElement = current.element.cloneNode(true);\n\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n\n              this.pendingClip = null;\n              clipPath.appendChild(clipElement);\n              this.defs.appendChild(clipPath);\n\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n\n                for (const prev of this.extraStack) {\n                  prev.clipGroup = null;\n                }\n\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n\n              current.activeClipUrl = `url(#${clipId})`;\n              this.tgrp = null;\n            }\n\n            clip(type) {\n              this.pendingClip = type;\n            }\n\n            closePath() {\n              const current = this.current;\n\n              if (current.path) {\n                const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n\n            setLeading(leading) {\n              this.current.leading = -leading;\n            }\n\n            setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n\n            setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n\n            setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n\n            setRenderingIntent(intent) {}\n\n            setFlatness(flatness) {}\n\n            setGState(states) {\n              for (const [key, value] of states) {\n                switch (key) {\n                  case \"LW\":\n                    this.setLineWidth(value);\n                    break;\n\n                  case \"LC\":\n                    this.setLineCap(value);\n                    break;\n\n                  case \"LJ\":\n                    this.setLineJoin(value);\n                    break;\n\n                  case \"ML\":\n                    this.setMiterLimit(value);\n                    break;\n\n                  case \"D\":\n                    this.setDash(value[0], value[1]);\n                    break;\n\n                  case \"RI\":\n                    this.setRenderingIntent(value);\n                    break;\n\n                  case \"FL\":\n                    this.setFlatness(value);\n                    break;\n\n                  case \"Font\":\n                    this.setFont(value);\n                    break;\n\n                  case \"CA\":\n                    this.setStrokeAlpha(value);\n                    break;\n\n                  case \"ca\":\n                    this.setFillAlpha(value);\n                    break;\n\n                  default:\n                    (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                    break;\n                }\n              }\n            }\n\n            fill() {\n              const current = this.current;\n\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n\n            stroke() {\n              const current = this.current;\n\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n\n            _setStrokeAttributes(element) {\n              let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              const current = this.current;\n              let dashArray = current.dashArray;\n\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n\n            eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fill();\n            }\n\n            fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n\n            eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fillStroke();\n            }\n\n            closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n\n            closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n\n            closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n\n            paintSolidColorImageMask() {\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n\n            paintImageXObject(objId) {\n              const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n              if (!imgData) {\n                (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n                return;\n              }\n\n              this.paintInlineImageXObject(imgData);\n            }\n\n            paintInlineImageXObject(imgData, mask) {\n              const width = imgData.width;\n              const height = imgData.height;\n              const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              const imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n              if (mask) {\n                mask.appendChild(imgEl);\n              } else {\n                this._ensureTransformGroup().appendChild(imgEl);\n              }\n            }\n\n            paintImageMaskXObject(imgData) {\n              const current = this.current;\n              const width = imgData.width;\n              const height = imgData.height;\n              const fillColor = current.fillColor;\n              current.maskId = `mask${maskCount++}`;\n              const mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n              this.defs.appendChild(mask);\n\n              this._ensureTransformGroup().appendChild(rect);\n\n              this.paintInlineImageXObject(imgData, mask);\n            }\n\n            paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n\n              if (bbox) {\n                const width = bbox[2] - bbox[0];\n                const height = bbox[3] - bbox[1];\n                const cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n\n            paintFormXObjectEnd() {}\n\n            _initialize(viewport) {\n              const svg = this.svgFactory.create(viewport.width, viewport.height);\n              const definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.appendChild(definitions);\n              this.defs = definitions;\n              const rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.appendChild(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n\n            _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                const clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.appendChild(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n\n              return this.current.clipGroup;\n            }\n\n            _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().appendChild(this.tgrp);\n                } else {\n                  this.svg.appendChild(this.tgrp);\n                }\n              }\n\n              return this.tgrp;\n            }\n\n          };\n        }\n        /***/\n      },\n      /* 23 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(24);\n\n        ;\n\n        const fs = require(\"fs\");\n\n        const http = require(\"http\");\n\n        const https = require(\"https\");\n\n        const url = require(\"url\");\n\n        const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n        function parseUrl(sourceUrl) {\n          const parsedUrl = url.parse(sourceUrl);\n\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(`file:///${sourceUrl}`);\n          }\n\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n\n          return parsedUrl;\n        }\n\n        class PDFNodeStream {\n          constructor(source) {\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n            this._rangeRequestReaders.push(rangeReader);\n\n            return rangeReader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNodeStream = PDFNodeStream;\n\n        class BaseFullReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            const source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._headersCapability = (0, _util.createPromiseCapability)();\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = (0, _util.createPromiseCapability)();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded,\n                total: this._contentLength\n              });\n            }\n\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        class BaseRangeReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            const source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = (0, _util.createPromiseCapability)();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded\n              });\n            }\n\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers\n          };\n        }\n\n        class PDFNodeStreamFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._headersCapability.resolve();\n\n              this._setReadableStream(response);\n\n              const getResponseHeader = name => {\n                return this._readableStream.headers[name.toLowerCase()];\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            } else {\n              this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n\n              this._headersCapability.reject(reason);\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            this._httpHeaders = {};\n\n            for (const property in stream.httpHeaders) {\n              const value = stream.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              this._httpHeaders[property] = value;\n            }\n\n            this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                return;\n              }\n\n              this._setReadableStream(response);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            } else {\n              this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamFsFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            fs.lstat(path, (error, stat) => {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                }\n\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._contentLength = stat.size;\n\n              this._setReadableStream(fs.createReadStream(path));\n\n              this._headersCapability.resolve();\n            });\n          }\n\n        }\n\n        class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            this._setReadableStream(fs.createReadStream(path, {\n              start,\n              end: end - 1\n            }));\n          }\n\n        }\n        /***/\n\n      },\n      /* 24 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _content_disposition = __w_pdfjs_require__(25);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        function validateRangeRequestCapabilities(_ref38) {\n          let {\n            getResponseHeader,\n            isHttp,\n            rangeChunkSize,\n            disableRange\n          } = _ref38;\n          (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n          const returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n\n          returnValues.suggestedLength = length;\n\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n\n          const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n\n        function extractFilenameFromHeader(getResponseHeader) {\n          const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n          if (contentDisposition) {\n            let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch (ex) {}\n            }\n\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n\n          return null;\n        }\n\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n\n          return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n        }\n\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n        /***/\n\n      },\n      /* 25 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n        var _util = __w_pdfjs_require__(1);\n\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          let needsEncodingFixup = true;\n          let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          tmp = rfc2231getparam(contentDisposition);\n\n          if (tmp) {\n            const filename = rfc2047decode(tmp);\n            return fixupEncoding(filename);\n          }\n\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch (e) {}\n            }\n\n            return value;\n          }\n\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n\n            return value;\n          }\n\n          function rfc2231getparam(contentDispositionStr) {\n            const matches = [];\n            let match;\n            const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              let [, n, quot, part] = match;\n              n = parseInt(n, 10);\n\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n\n                continue;\n              }\n\n              matches[n] = [quot, part];\n            }\n\n            const parts = [];\n\n            for (let n = 0; n < matches.length; ++n) {\n              if (!(n in matches)) {\n                break;\n              }\n\n              let [quot, part] = matches[n];\n              part = rfc2616unquote(part);\n\n              if (quot) {\n                part = unescape(part);\n\n                if (n === 0) {\n                  part = rfc5987decode(part);\n                }\n              }\n\n              parts.push(part);\n            }\n\n            return parts.join(\"\");\n          }\n\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              const parts = value.slice(1).split('\\\\\"');\n\n              for (let i = 0; i < parts.length; ++i) {\n                const quotindex = parts[i].indexOf('\"');\n\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n\n                parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n              }\n\n              value = parts.join('\"');\n            }\n\n            return value;\n          }\n\n          function rfc5987decode(extvalue) {\n            const encodingend = extvalue.indexOf(\"'\");\n\n            if (encodingend === -1) {\n              return extvalue;\n            }\n\n            const encoding = extvalue.slice(0, encodingend);\n            const langvalue = extvalue.slice(encodingend + 1);\n            const value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n\n            return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replace(/_/g, \" \");\n                text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n\n              try {\n                text = atob(text);\n              } catch (e) {}\n\n              return textdecode(charset, text);\n            });\n          }\n\n          return \"\";\n        }\n        /***/\n\n      },\n      /* 26 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(24);\n\n        ;\n        const OK_RESPONSE = 200;\n        const PARTIAL_CONTENT_RESPONSE = 206;\n\n        function getArrayBuffer(xhr) {\n          const data = xhr.response;\n\n          if (typeof data !== \"string\") {\n            return data;\n          }\n\n          const array = (0, _util.stringToBytes)(data);\n          return array.buffer;\n        }\n\n        class NetworkManager {\n          constructor(url) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.url = url;\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n            this.withCredentials = args.withCredentials || false;\n\n            this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n              return new XMLHttpRequest();\n            };\n\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n\n          requestRange(begin, end, listeners) {\n            const args = {\n              begin,\n              end\n            };\n\n            for (const prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n\n            return this.request(args);\n          }\n\n          requestFull(listeners) {\n            return this.request(listeners);\n          }\n\n          request(args) {\n            const xhr = this.getXhr();\n            const xhrId = this.currXhrId++;\n            const pendingRequest = this.pendingRequests[xhrId] = {\n              xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n\n            for (const property in this.httpHeaders) {\n              const value = this.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              xhr.setRequestHeader(property, value);\n            }\n\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n\n            xhr.responseType = \"arraybuffer\";\n\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n\n          onProgress(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            pendingRequest.onProgress?.(evt);\n          }\n\n          onStateChange(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            const xhr = pendingRequest.xhr;\n\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n\n            if (xhr.readyState !== 4) {\n              return;\n            }\n\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n\n            delete this.pendingRequests[xhrId];\n\n            if (xhr.status === 0 && this.isHttp) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const xhrStatus = xhr.status || OK_RESPONSE;\n            const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const chunk = getArrayBuffer(xhr);\n\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk\n              });\n            } else {\n              pendingRequest.onError?.(xhr.status);\n            }\n          }\n\n          getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n\n          isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n\n          abortRequest(xhrId) {\n            const xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n\n        }\n\n        class PDFNetworkStream {\n          constructor(source) {\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _onRangeRequestReaderClosed(reader) {\n            const i = this._rangeRequestReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNetworkStream = PDFNetworkStream;\n\n        class PDFNetworkStreamFullRequestReader {\n          constructor(manager, source) {\n            this._manager = manager;\n            const args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n\n          _onHeadersReceived() {\n            const fullRequestXhrId = this._fullRequestId;\n\n            const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n            const getResponseHeader = name => {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n\n            this._headersReceivedCapability.resolve();\n          }\n\n          _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                const requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n\n            this._done = true;\n\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            this._headersReceivedCapability.reject(this._storedError);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n\n          _onProgress(evt) {\n            this.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get headersReady() {\n            return this._headersReceivedCapability.promise;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._cachedChunks.length > 0) {\n              const chunk = this._cachedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            this._headersReceivedCapability.reject(reason);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n\n            this._fullRequestReader = null;\n          }\n\n        }\n\n        class PDFNetworkStreamRangeRequestReader {\n          constructor(manager, begin, end) {\n            this._manager = manager;\n            const args = {\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = manager.url;\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this._storedError = undefined;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n\n          _close() {\n            this.onClosed?.(this);\n          }\n\n          _onDone(data) {\n            const chunk = data.chunk;\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._close();\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n\n          _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              this.onProgress?.({\n                loaded: evt.loaded\n              });\n            }\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._queuedChunk !== null) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n\n            this._close();\n          }\n\n        }\n        /***/\n\n      },\n      /* 27 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(24);\n\n        ;\n\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers,\n            signal: abortController?.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n\n        function createHeaders(httpHeaders) {\n          const headers = new Headers();\n\n          for (const property in httpHeaders) {\n            const value = httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            headers.append(property, value);\n          }\n\n          return headers;\n        }\n\n        class PDFFetchStream {\n          constructor(source) {\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFFetchStream = PDFFetchStream;\n\n        class PDFFetchStreamReader {\n          constructor(stream) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._reader = response.body.getReader();\n\n              this._headersCapability.resolve();\n\n              const getResponseHeader = name => {\n                return response.headers.get(name);\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: this._stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._headersCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded,\n                total: this._contentLength\n              });\n            }\n\n            const buffer = new Uint8Array(value).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n\n        }\n\n        class PDFFetchStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._isStreamingSupported = !source.disableStream;\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._headers = createHeaders(this._stream.httpHeaders);\n\n            this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._readCapability.resolve();\n\n              this._reader = response.body.getReader();\n            }).catch(this._readCapability.reject);\n            this.onProgress = null;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded\n              });\n            }\n\n            const buffer = new Uint8Array(value).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n\n        }\n        /***/\n\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n\n      (() => {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationMode\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationMode;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function () {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function () {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"LoopbackPort\", {\n          enumerable: true,\n          get: function () {\n            return _api.LoopbackPort;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function () {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function () {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function () {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"PixelsPerInch\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PixelsPerInch;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _svg.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n          enumerable: true,\n          get: function () {\n            return _util.UNSUPPORTED_FEATURES;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function () {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function () {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function () {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function () {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function () {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"createPromiseCapability\", {\n          enumerable: true,\n          get: function () {\n            return _util.createPromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function () {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function () {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getXfaPageViewport\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getXfaPageViewport;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function () {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function () {\n            return _api.version;\n          }\n        });\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _api = __w_pdfjs_require__(4);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _annotation_layer = __w_pdfjs_require__(18);\n\n        var _worker_options = __w_pdfjs_require__(12);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _text_layer = __w_pdfjs_require__(21);\n\n        var _svg = __w_pdfjs_require__(22);\n\n        var _xfa_layer = __w_pdfjs_require__(20);\n\n        const pdfjsVersion = '2.13.216';\n        const pdfjsBuild = '399a0ec60';\n        {\n          if (_is_node.isNodeJS) {\n            const {\n              PDFNodeStream\n            } = __w_pdfjs_require__(23);\n\n            (0, _api.setPDFNetworkStreamFactory)(params => {\n              return new PDFNodeStream(params);\n            });\n          } else {\n            const {\n              PDFNetworkStream\n            } = __w_pdfjs_require__(26);\n\n            const {\n              PDFFetchStream\n            } = __w_pdfjs_require__(27);\n\n            (0, _api.setPDFNetworkStreamFactory)(params => {\n              if ((0, _display_utils.isValidFetchUrl)(params.url)) {\n                return new PDFFetchStream(params);\n              }\n\n              return new PDFNetworkStream(params);\n            });\n          }\n        }\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,iEACAA,2BADA,KAEA,gDACAC,4CADA,KAEA,iCACAC,4CADA,KAGAC;AACC,CATD,EASC,IATD,EASC;AACD;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKAC;;AAEA,cAAMC,kBAAkB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAxB;;AACA,cAAMC,uBAAuB,CAAC,KAAD,EAAQ,CAAR,EAAW,CAAX,EAAc,KAAd,EAAqB,CAArB,EAAwB,CAAxB,CAA7B;;AAcA,cAAMC,sBAAsB;AAC1BC,eAAK,IADqB;AAE1BC,mBAAS,IAFiB;AAG1BC,iBAAO,IAHmB;AAI1BC,6BAAmB,IAJO;AAK1BC,+BAAqB,IALK;AAM1BC,+BAAqB,IANK;AAO1BC,kBAAQ;AAPkB,SAA5B;;AAUA,cAAMC,iBAAiB;AACrBC,mBAAS,CADY;AAErBC,kBAAQ,CAFa;AAGrBC,wBAAc,CAHO;AAIrBC,0BAAgB;AAJK,SAAvB;;AAQA,cAAMC,iBAAiB;AACrBV,iBAAO,IADc;AAErBW,2BAAiB,IAFI;AAGrBC,gBAAM,IAHe;AAIrBC,8BAAoB,IAJC;AAKrBC,kCAAwB,KALH;AAMrBC,kCAAwB,KANH;AAOrBC,oBAAU,KAPW;AAQrBC,8BAAoB;AARC,SAAvB;;AAWA,cAAMC,oBAAoB;AACxBC,gBAAM,CADkB;AAExBC,kBAAQ,CAFgB;AAGxBC,uBAAa,CAHW;AAIxBC,qBAAW,CAJa;AAKxBC,4BAAkB,CALM;AAMxBC,8BAAoB,CANI;AAOxBC,mCAAyB,CAPD;AAQxBC,uBAAa,CARW;AASxBC,4BAAkB,CATM;AAUxBC,4BAAkB;AAVM,SAA1B;;AAaA,cAAMC,YAAY;AAChBC,0BAAgB,CADA;AAEhBC,qBAAW,CAFK;AAGhBC,sBAAY;AAHI,SAAlB;;AAMA,cAAMC,iBAAiB;AACrBC,gBAAM,CADe;AAErBC,gBAAM,CAFe;AAGrBC,oBAAU,CAHW;AAIrBC,gBAAM,CAJe;AAKrBC,kBAAQ,CALa;AAMrBC,kBAAQ,CANa;AAOrBC,mBAAS,CAPY;AAQrBC,oBAAU,CARW;AASrBC,qBAAW,CATU;AAUrBC,qBAAW,EAVU;AAWrBC,oBAAU,EAXW;AAYrBC,qBAAW,EAZU;AAarBC,iBAAO,EAbc;AAcrBC,iBAAO,EAdc;AAerBC,eAAK,EAfgB;AAgBrBC,iBAAO,EAhBc;AAiBrBC,0BAAgB,EAjBK;AAkBrBC,iBAAO,EAlBc;AAmBrBC,iBAAO,EAnBc;AAoBrBC,kBAAQ,EApBa;AAqBrBC,kBAAQ,EArBa;AAsBrBC,uBAAa,EAtBQ;AAuBrBC,mBAAS,EAvBY;AAwBrBC,qBAAW,EAxBU;AAyBrBC,kBAAQ,EAzBa;AA0BrBC,kBAAQ;AA1Ba,SAAvB;;AA6BA,cAAMC,2BAA2B;AAC/BC,kBAAQ,QADuB;AAE/BC,kBAAQ;AAFuB,SAAjC;;AAKA,cAAMC,wBAAwB;AAC5BF,kBAAQ,QADoB;AAE5BG,oBAAU;AAFkB,SAA9B;;AAKA,cAAMC,wBAAwB;AAC5BC,oBAAU,UADkB;AAE5BC,oBAAU,UAFkB;AAG5BC,qBAAW,WAHiB;AAI5BC,qBAAW,WAJiB;AAK5BC,gBAAM;AALsB,SAA9B;;AAQA,cAAMC,sBAAsB;AAC1BC,iBAAO,OADmB;AAE1BC,iBAAO;AAFmB,SAA5B;;AAKA,cAAMC,iBAAiB;AACrBpD,qBAAW,IADU;AAErBqD,kBAAQ,IAFa;AAGrB3E,iBAAO,IAHc;AAIrB4E,kBAAQ,IAJa;AAKrBC,oBAAU,IALW;AAMrBC,kBAAQ,IANa;AAOrBC,oBAAU,IAPW;AAQrBC,kBAAQ,IARa;AASrBC,wBAAc,KATO;AAUrBC,0BAAgB;AAVK,SAAvB;;AAaA,cAAMC,sBAAsB;AAC1BJ,oBAAU,SADgB;AAE1BK,oBAAU,SAFgB;AAG1BC,oBAAU,SAHgB;AAI1BC,qBAAW,SAJe;AAK1BC,oBAAU,SALgB;AAM1BC,yBAAe,SANW;AAO1BC,iBAAO,SAPmB;AAQ1BC,sBAAY,SARc;AAS1BC,iBAAO,SATmB;AAU1BC,gBAAM,SAVoB;AAW1BC,gBAAM,SAXoB;AAY1BC,sBAAY,SAZc;AAa1BC,uBAAa,SAba;AAc1BC,2BAAiB,SAdS;AAe1BC,uBAAa,SAfa;AAgB1BC,gBAAM,SAhBoB;AAiB1BC,oBAAU,SAjBgB;AAkB1BC,0BAAgB,SAlBU;AAmB1BC,6BAAmB;AAnBO,SAA5B;;AAsBA,cAAMC,4BAA4B;AAChCC,iBAAO,CADyB;AAEhCC,kBAAQ,CAFwB;AAGhCC,mBAAS,CAHuB;AAIhCC,iBAAO,CAJyB;AAKhC/D,qBAAW;AALqB,SAAlC;;AAQA,cAAMgE,4BAA4B;AAChCC,aAAG,aAD6B;AAEhCC,aAAG,YAF6B;AAGhCC,aAAG,YAH6B;AAIhCC,aAAG,UAJ6B;AAKhCC,cAAI,OAL4B;AAMhCC,cAAI,MAN4B;AAOhCC,cAAI,UAP4B;AAQhCC,cAAI,WAR4B;AAShCC,cAAI,aAT4B;AAUhCC,cAAI,eAV4B;AAWhCC,aAAG,WAX6B;AAYhCC,aAAG,QAZ6B;AAahCC,aAAG,UAb6B;AAchCC,aAAG;AAd6B,SAAlC;;AAiBA,cAAMC,0BAA0B;AAC9BC,cAAI,WAD0B;AAE9BC,cAAI,UAF0B;AAG9BC,cAAI,SAH0B;AAI9BC,cAAI,WAJ0B;AAK9BC,cAAI;AAL0B,SAAhC;;AAQA,cAAMC,sBAAsB;AAC1BC,aAAG,UADuB;AAE1BR,aAAG;AAFuB,SAA5B;;AAKA,cAAMS,aAAa;AACjBC,mBAAS,SADQ;AAEjBC,iBAAO,OAFU;AAGjBC,eAAK,KAHY;AAIjBC,eAAK,KAJY;AAKjBC,eAAK,KALY;AAMjBC,gBAAM,MANW;AAOjBC,eAAK,KAPY;AAQjBC,eAAK,KARY;AASjBC,eAAK,KATY;AAUjBC,eAAK;AAVY,SAAnB;;AAaA,cAAMC,WAAW;AACfV,mBAAS,SADM;AAEfW,iBAAO,OAFQ;AAGfC,yBAAe,eAHA;AAIfC,kBAAQ,QAJO;AAKfC,wBAAc,cALC;AAMfC,yBAAe,eANA;AAOfC,oBAAU,UAPK;AAQfC,wBAAc,cARC;AASfC,iBAAO,OATQ;AAUfC,oBAAU,UAVK;AAWfC,iBAAO,OAXQ;AAYfC,mBAAS;AAZM,SAAjB;;AAeA,cAAMC,iBAAiB;AACrBC,kBAAQ,CADa;AAErBC,oBAAU,CAFW;AAGrBC,iBAAO;AAHc,SAAvB;;AAMA,cAAMC,sBAAsB;AAC1BvF,gBAAM,CADoB;AAE1BwF,kBAAQ,CAFkB;AAG1BC,kBAAQ;AAHkB,SAA5B;;AAOA,cAAMC,MAAM;AAGVC,sBAAY,CAHF;AAIVC,wBAAc,CAJJ;AAKVC,sBAAY,CALF;AAMVC,uBAAa,CANH;AAOVC,yBAAe,CAPL;AAQVC,mBAAS,CARC;AASVC,8BAAoB,CATV;AAUVC,uBAAa,CAVH;AAWVC,qBAAW,CAXD;AAYVC,gBAAM,EAZI;AAaVC,mBAAS,EAbC;AAcVC,qBAAW,EAdD;AAeVC,kBAAQ,EAfE;AAgBVC,kBAAQ,EAhBE;AAiBVC,mBAAS,EAjBC;AAkBVC,oBAAU,EAlBA;AAmBVC,oBAAU,EAnBA;AAoBVC,qBAAW,EApBD;AAqBVC,qBAAW,EArBD;AAsBVC,kBAAQ,EAtBE;AAuBVC,uBAAa,EAvBH;AAwBVC,gBAAM,EAxBI;AAyBVC,kBAAQ,EAzBE;AA0BVC,sBAAY,EA1BF;AA2BVC,wBAAc,EA3BJ;AA4BVC,2BAAiB,EA5BP;AA6BVC,6BAAmB,EA7BT;AA8BVC,mBAAS,EA9BC;AA+BVC,gBAAM,EA/BI;AAgCVC,kBAAQ,EAhCE;AAiCVC,qBAAW,EAjCD;AAkCVC,mBAAS,EAlCC;AAmCVC,0BAAgB,EAnCN;AAoCVC,0BAAgB,EApCN;AAqCVC,qBAAW,EArCD;AAsCVC,sBAAY,EAtCF;AAuCVC,mBAAS,EAvCC;AAwCVC,gCAAsB,EAxCZ;AAyCVC,uBAAa,EAzCH;AA0CVC,oBAAU,EA1CA;AA2CVC,8BAAoB,EA3CV;AA4CVC,yBAAe,EA5CL;AA6CVC,oBAAU,EA7CA;AA8CVC,oBAAU,EA9CA;AA+CVC,0BAAgB,EA/CN;AAgDVC,4BAAkB,EAhDR;AAiDVC,sCAA4B,EAjDlB;AAkDVC,wBAAc,EAlDJ;AAmDVC,iCAAuB,EAnDb;AAoDVC,+BAAqB,EApDX;AAqDVC,6BAAmB,EArDT;AAsDVC,0BAAgB,EAtDN;AAuDVC,2BAAiB,EAvDP;AAwDVC,wBAAc,EAxDJ;AAyDVC,yBAAe,EAzDL;AA0DVC,yBAAe,EA1DL;AA2DVC,uBAAa,EA3DH;AA4DVC,6BAAmB,EA5DT;AA6DVC,2BAAiB,EA7DP;AA8DVC,8BAAoB,EA9DV;AA+DVC,4BAAkB,EA/DR;AAgEVC,uBAAa,EAhEH;AAiEVC,4BAAkB,EAjER;AAkEVC,0BAAgB,EAlEN;AAmEVC,0BAAgB,EAnEN;AAoEVC,wBAAc,EApEJ;AAqEVC,qBAAW,EArED;AAsEVC,0BAAgB,EAtEN;AAuEVC,8BAAoB,EAvEV;AAwEVC,mCAAyB,EAxEf;AAyEVC,4BAAkB,EAzER;AA0EVC,uBAAa,EA1EH;AA2EVC,qBAAW,EA3ED;AA4EVC,iCAAuB,EA5Eb;AA6EVC,+BAAqB,EA7EX;AA8EVC,sBAAY,EA9EF;AA+EVC,oBAAU,EA/EA;AAgFVC,4BAAkB,EAhFR;AAiFVC,0BAAgB,EAjFN;AAkFVC,2BAAiB,EAlFP;AAmFVC,yBAAe,EAnFL;AAqFVC,4BAAkB,EArFR;AAsFVC,iCAAuB,EAtFb;AAuFVC,sCAA4B,EAvFlB;AAwFVC,6BAAmB,EAxFT;AAyFVC,mCAAyB,EAzFf;AA0FVC,wCAA8B,EA1FpB;AA2FVC,mCAAyB,EA3Ff;AA4FVC,uCAA6B,EA5FnB;AA6FVC,oCAA0B,EA7FhB;AA8FVC,yBAAe;AA9FL,SAAZ;;AAiGA,cAAMC,uBAAuB;AAE3BC,mBAAS,SAFkB;AAG3BC,iBAAO,OAHoB;AAI3BC,sBAAY,YAJe;AAK3BC,sBAAY,YALe;AAM3BC,iBAAO,OANoB;AAO3BC,0BAAgB,gBAPW;AAS3BC,gBAAM,MATqB;AAU3BC,8BAAoB,oBAVO;AAW3BC,0BAAgB,gBAXW;AAY3BC,wBAAc,cAZa;AAa3BC,8BAAoB,oBAbO;AAc3BC,0BAAgB,gBAdW;AAe3BC,4BAAkB,kBAfS;AAgB3BC,8BAAoB,oBAhBO;AAiB3BC,2BAAiB,iBAjBU;AAkB3BC,6BAAmB,mBAlBQ;AAmB3BC,8BAAoB,oBAnBO;AAoB3BC,+BAAqB,qBApBM;AAqB3BC,8BAAoB,oBArBO;AAsB3BC,4BAAkB,kBAtBS;AAuB3BC,8BAAoB,oBAvBO;AAwB3BC,iCAAuB;AAxBI,SAA7B;;AA2BA,cAAMC,oBAAoB;AACxBC,yBAAe,CADS;AAExBC,8BAAoB;AAFI,SAA1B;;AAKA,YAAIC,YAAY7H,eAAeE,QAA/B;;AAEA,iBAAS4H,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,cAAIC,OAAOC,SAAPD,CAAiBD,KAAjBC,CAAJ,EAA6B;AAC3BH,wBAAYE,KAAZF;AAF8B;AAzXlC;;AA+XA,iBAASK,iBAAT,GAA6B;AAC3B,iBAAOL,SAAP;AAhYF;;AAsYA,iBAASM,IAAT,CAAcC,GAAd,EAAmB;AACjB,cAAIP,aAAa7H,eAAeG,KAAhC,EAAuC;AACrCkI,oBAAQC,GAARD,CAAa,SAAQD,GAAT,EAAZC;AAFe;AAtYnB;;AA6YA,iBAASE,IAAT,CAAcH,GAAd,EAAmB;AACjB,cAAIP,aAAa7H,eAAeE,QAAhC,EAA0C;AACxCmI,oBAAQC,GAARD,CAAa,YAAWD,GAAZ,EAAZC;AAFe;AA7YnB;;AAmZA,iBAASG,WAAT,CAAqBJ,GAArB,EAA0B;AACxB,gBAAM,IAAIK,KAAJ,CAAUL,GAAV,CAAN;AApZF;;AAuZA,iBAASM,MAAT,CAAgBC,IAAhB,EAAsBP,GAAtB,EAA2B;AACzB,cAAI,CAACO,IAAL,EAAW;AACTH,wBAAYJ,GAAZI;AAFuB;AAvZ3B;;AA8ZA,iBAASI,YAAT,CAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AACvC,cAAIC,IAAJ;;AACA,cAAI;AACFA,mBAAO,IAAIC,GAAJ,CAAQH,OAAR,CAAPE;;AACA,gBAAI,CAACA,KAAKE,MAAN,IAAgBF,KAAKE,MAALF,KAAgB,MAApC,EAA4C;AAC1C,qBAAO,KAAP;AAHA;AAAJ,YAKE,OAAOG,CAAP,EAAU;AACV,mBAAO,KAAP;AARqC;;AAWvC,gBAAMC,QAAQ,IAAIH,GAAJ,CAAQF,QAAR,EAAkBC,IAAlB,CAAd;AACA,iBAAOA,KAAKE,MAALF,KAAgBI,MAAMF,MAA7B;AA1aF;;AA8aA,iBAASG,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,cAAI,CAACA,GAAL,EAAU;AACR,mBAAO,KAAP;AAF2B;;AAI7B,kBAAQA,IAAIC,QAAZ;AACE,iBAAK,OAAL;AACA,iBAAK,QAAL;AACA,iBAAK,MAAL;AACA,iBAAK,SAAL;AACA,iBAAK,MAAL;AACE,qBAAO,IAAP;;AACF;AACE,qBAAO,KAAP;AARJ;AAlbF;;AAscA,iBAASC,sBAAT,CAAgCF,GAAhC,EAAqE;AAAA,cAAhCR,OAAgC,uEAAtB,IAAsB;AAAA,cAAhBW,OAAgB,uEAAN,IAAM;;AACnE,cAAI,CAACH,GAAL,EAAU;AACR,mBAAO,IAAP;AAFiE;;AAInE,cAAI;AACF,gBAAIG,WAAW,OAAOH,GAAP,KAAe,QAA9B,EAAwC;AAEtC,kBAAIG,QAAQC,kBAARD,IAA8BH,IAAIK,UAAJL,CAAe,MAAfA,CAAlC,EAA0D;AACxD,sBAAMM,OAAON,IAAIO,KAAJP,CAAU,KAAVA,CAAb;;AAGA,oBAAIM,QAAQA,KAAKE,MAALF,IAAe,CAA3B,EAA8B;AAC5BN,wBAAO,UAASA,GAAV,EAANA;AALsD;AAFpB;;AAatC,kBAAIG,QAAQM,kBAAZ,EAAgC;AAC9B,oBAAI;AACFT,wBAAMU,mBAAmBV,GAAnBU,CAANV;AADF,kBAEE,OAAOW,EAAP,EAAW,CAHiB;AAbM;AADtC;;AAqBF,kBAAMC,cAAcpB,UAAU,IAAIG,GAAJ,CAAQK,GAAR,EAAaR,OAAb,CAAVA,GAAkC,IAAIG,GAAJ,CAAQK,GAAR,CAAtD;;AACA,gBAAID,iBAAiBa,WAAjBb,CAAJ,EAAmC;AACjC,qBAAOa,WAAP;AAvBA;AAAJ,YAyBE,OAAOD,EAAP,EAAW,CA7BsD;;AAgCnE,iBAAO,IAAP;AAteF;;AAyeA,iBAASE,MAAT,CAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;AAUhCC,iBAAOC,cAAPD,CAAsBH,GAAtBG,EAA2BF,IAA3BE,EAAiC;AAC/BD,iBAD+B;AAE/BG,wBAAY,IAFmB;AAG/BC,0BAAc,IAHiB;AAI/BC,sBAAU;AAJqB,WAAjCJ;AAMA,iBAAOD,KAAP;AAzfF;;AA+fA,cAAMM,gBAAiB,SAASC,oBAAT,GAAgC;AAErD,mBAASD,aAAT,CAAuBE,OAAvB,EAAgCC,IAAhC,EAAsC;AACpC,gBAAI,KAAKC,WAAL,KAAqBJ,aAAzB,EAAwC;AACtCnC,0BAAY,kCAAZA;AAFkC;;AAIpC,iBAAKqC,OAAL,GAAeA,OAAf;AACA,iBAAKC,IAAL,GAAYA,IAAZ;AAPmD;;AASrDH,wBAAcK,SAAdL,GAA0B,IAAIlC,KAAJ,EAA1BkC;AACAA,wBAAcI,WAAdJ,GAA4BA,aAA5BA;AAEA,iBAAOA,aAAP;AAZqB,WAAvB;;;;AAeA,cAAMM,iBAAN,SAAgCN,aAAhC,CAA8C;AAC5CI,sBAAY3C,GAAZ2C,EAAiBG,IAAjBH,EAAuB;AACrB,kBAAM3C,GAAN,EAAW,mBAAX;AACA,iBAAK8C,IAAL,GAAYA,IAAZ;AAH0C;;AAAA;;;;AAO9C,cAAMC,qBAAN,SAAoCR,aAApC,CAAkD;AAChDI,sBAAY3C,GAAZ2C,EAAiBK,OAAjBL,EAA0B;AACxB,kBAAM3C,GAAN,EAAW,uBAAX;AACA,iBAAKgD,OAAL,GAAeA,OAAf;AAH8C;;AAAA;;;;AAOlD,cAAMC,mBAAN,SAAkCV,aAAlC,CAAgD;AAC9CI,sBAAY3C,GAAZ2C,EAAiB;AACf,kBAAM3C,GAAN,EAAW,qBAAX;AAF4C;;AAAA;;;;AAMhD,cAAMkD,mBAAN,SAAkCX,aAAlC,CAAgD;AAC9CI,sBAAY3C,GAAZ2C,EAAiB;AACf,kBAAM3C,GAAN,EAAW,qBAAX;AAF4C;;AAAA;;;;AAMhD,cAAMmD,2BAAN,SAA0CZ,aAA1C,CAAwD;AACtDI,sBAAY3C,GAAZ2C,EAAiBS,MAAjBT,EAAyB;AACvB,kBAAM3C,GAAN,EAAW,6BAAX;AACA,iBAAKoD,MAAL,GAAcA,MAAd;AAHoD;;AAAA;;;;AAUxD,cAAMC,WAAN,SAA0Bd,aAA1B,CAAwC;AACtCI,sBAAY3C,GAAZ2C,EAAiB;AACf,kBAAM3C,GAAN,EAAW,aAAX;AAFoC;;AAAA;;;;AASxC,cAAMsD,cAAN,SAA6Bf,aAA7B,CAA2C;AACzCI,sBAAY3C,GAAZ2C,EAAiB;AACf,kBAAM3C,GAAN,EAAW,gBAAX;AAFuC;;AAAA;;;;AAM3C,iBAASuD,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,cACE,OAAOA,KAAP,KAAiB,QAAjB,IACAA,UAAU,IADV,IAEAA,MAAM/B,MAAN+B,KAAiBC,SAHnB,EAIE;AACArD,wBAAY,oCAAZA;AAN0B;;AAQ5B,gBAAMqB,SAAS+B,MAAM/B,MAArB;AACA,gBAAMiC,qBAAqB,IAA3B;;AACA,cAAIjC,SAASiC,kBAAb,EAAiC;AAC/B,mBAAOC,OAAOC,YAAPD,CAAoBE,KAApBF,CAA0B,IAA1BA,EAAgCH,KAAhCG,CAAP;AAX0B;;AAa5B,gBAAMG,SAAS,EAAf;;AACA,eAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,KAAKL,kBAAjC,EAAqD;AACnD,kBAAMM,WAAWC,KAAKC,GAALD,CAASF,IAAIL,kBAAbO,EAAiCxC,MAAjCwC,CAAjB;AACA,kBAAME,QAAQX,MAAMY,QAANZ,CAAeO,CAAfP,EAAkBQ,QAAlBR,CAAd;AACAM,mBAAOO,IAAPP,CAAYH,OAAOC,YAAPD,CAAoBE,KAApBF,CAA0B,IAA1BA,EAAgCQ,KAAhCR,CAAZG;AAjB0B;;AAmB5B,iBAAOA,OAAOQ,IAAPR,CAAY,EAAZA,CAAP;AAplBF;;AAulBA,iBAASS,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,cAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3BpE,wBAAY,oCAAZA;AAFwB;;AAI1B,gBAAMqB,SAAS+C,IAAI/C,MAAnB;AACA,gBAAM+B,QAAQ,IAAIiB,UAAJ,CAAehD,MAAf,CAAd;;AACA,eAAK,IAAIsC,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4B,EAAEsC,CAA9B,EAAiC;AAC/BP,kBAAMO,CAANP,IAAWgB,IAAIE,UAAJF,CAAeT,CAAfS,IAAoB,IAA/BhB;AAPwB;;AAS1B,iBAAOA,KAAP;AAhmBF;;AAymBA,iBAASmB,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,cAAIA,IAAInD,MAAJmD,KAAenB,SAAnB,EAA8B;AAC5B,mBAAOmB,IAAInD,MAAX;AAF0B;;AAI5B,cAAImD,IAAIC,UAAJD,KAAmBnB,SAAvB,EAAkC;AAChC,mBAAOmB,IAAIC,UAAX;AAL0B;;AAO5BzE,sBAAY,sCAAZA;AAhnBF;;AAynBA,iBAAS0E,aAAT,CAAuBF,GAAvB,EAA4B;AAC1B,gBAAMnD,SAASmD,IAAInD,MAAnB;;AAEA,cAAIA,WAAW,CAAXA,IAAgBmD,IAAI,CAAJA,aAAkBH,UAAtC,EAAkD;AAChD,mBAAOG,IAAI,CAAJA,CAAP;AAJwB;;AAM1B,cAAIG,eAAe,CAAnB;;AACA,eAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,GAA5B,EAAiC;AAC/BgB,4BAAgBJ,gBAAgBC,IAAIb,CAAJa,CAAhBD,CAAhBI;AARwB;;AAU1B,cAAIC,MAAM,CAAV;AACA,gBAAMC,OAAO,IAAIR,UAAJ,CAAeM,YAAf,CAAb;;AACA,eAAK,IAAIhB,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,GAA5B,EAAiC;AAC/B,gBAAImB,OAAON,IAAIb,CAAJa,CAAX;;AACA,gBAAI,EAAEM,gBAAgBT,UAAlB,CAAJ,EAAmC;AACjC,kBAAI,OAAOS,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,uBAAOX,cAAcW,IAAdX,CAAPW;AADF,qBAEO;AACLA,uBAAO,IAAIT,UAAJ,CAAeS,IAAf,CAAPA;AAJ+B;AAFJ;;AAS/B,kBAAMC,aAAaD,KAAKL,UAAxB;AACAI,iBAAKG,GAALH,CAASC,IAATD,EAAeD,GAAfC;AACAD,mBAAOG,UAAPH;AAvBwB;;AAyB1B,iBAAOC,IAAP;AAlpBF;;AAqpBA,iBAASI,QAAT,CAAkBpD,KAAlB,EAAyB;AAUvB,iBAAO0B,OAAOC,YAAPD,CACJ1B,SAAS,EAATA,GAAe,IADX0B,EAEJ1B,SAAS,EAATA,GAAe,IAFX0B,EAGJ1B,SAAS,CAATA,GAAc,IAHV0B,EAIL1B,QAAQ,IAJH0B,CAAP;AA/pBF;;AAuqBA,iBAAS2B,UAAT,CAAoBvD,GAApB,EAAyB;AACvB,iBAAOG,OAAOqD,IAAPrD,CAAYH,GAAZG,EAAiBT,MAAxB;AAxqBF;;AA6qBA,iBAAS+D,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,gBAAM1D,MAAMG,OAAOwD,MAAPxD,CAAc,IAAdA,CAAZ;;AACA,qBAAW,CAACyD,GAAD,EAAM1D,KAAN,CAAX,IAA2BwD,GAA3B,EAAgC;AAC9B1D,gBAAI4D,GAAJ5D,IAAWE,KAAXF;AAHwB;;AAK1B,iBAAOA,GAAP;AAlrBF;;AAsrBA,iBAAS6D,cAAT,GAA0B;AACxB,gBAAMC,UAAU,IAAIpB,UAAJ,CAAe,CAAf,CAAhB;AACAoB,kBAAQ,CAARA,IAAa,CAAbA;AACA,gBAAMC,SAAS,IAAIC,WAAJ,CAAgBF,QAAQG,MAAxB,EAAgC,CAAhC,EAAmC,CAAnC,CAAf;AACA,iBAAOF,OAAO,CAAPA,MAAc,CAArB;AA1rBF;;AA4rBA,cAAMG,uBAAuB;AAC3B,cAAIhE,KAAJ,GAAY;AACV,mBAAOH,OAAO,IAAPA,EAAa,OAAbA,EAAsB8D,gBAAtB9D,CAAP;AAFyB;;AAAA,SAA7B;;;AAOA,iBAASoE,eAAT,GAA2B;AACzB,cAAI;AACF,gBAAIC,QAAJ,CAAa,EAAb;AACA,mBAAO,IAAP;AAFF,YAGE,OAAOrF,CAAP,EAAU;AACV,mBAAO,KAAP;AALuB;AAnsB3B;;AA2sBA,cAAMsF,wBAAwB;AAC5B,cAAInE,KAAJ,GAAY;AACV,mBAAOH,OAAO,IAAPA,EAAa,OAAbA,EAAsBoE,iBAAtBpE,CAAP;AAF0B;;AAAA,SAA9B;;AAMA,cAAMuE,aAAa,CAAC,GAAGC,MAAM,GAANA,EAAWf,IAAXe,EAAJ,EAAuBb,GAAvB,CAA2Bc,KAC5CA,EAAEC,QAAFD,CAAW,EAAXA,EAAeE,QAAfF,CAAwB,CAAxBA,EAA2B,GAA3BA,CADiB,CAAnB;;AAIA,cAAMG,IAAN,CAAW;AACT,iBAAOC,YAAP,CAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3B,mBAAQ,IAAGT,WAAWO,CAAXP,CAAJ,GAAoBA,WAAWQ,CAAXR,CAApB,GAAoCA,WAAWS,CAAXT,CAApC,EAAP;AAFO;;AAMT,iBAAOtN,SAAP,CAAiBgO,EAAjB,EAAqBC,EAArB,EAAyB;AACvB,mBAAO,CACLD,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CADnB,EAELD,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAFnB,EAGLD,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAHnB,EAILD,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAJnB,EAKLD,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAAxBD,GAAgCA,GAAG,CAAHA,CAL3B,EAMLA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAARD,GAAgBA,GAAG,CAAHA,IAAQC,GAAG,CAAHA,CAAxBD,GAAgCA,GAAG,CAAHA,CAN3B,CAAP;AAPO;;AAkBT,iBAAOE,cAAP,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,kBAAMC,KAAKF,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAAPD,GAAcA,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAArBD,GAA4BC,EAAE,CAAFA,CAAvC;AACA,kBAAME,KAAKH,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAAPD,GAAcA,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAArBD,GAA4BC,EAAE,CAAFA,CAAvC;AACA,mBAAO,CAACC,EAAD,EAAKC,EAAL,CAAP;AArBO;;AAwBT,iBAAOC,qBAAP,CAA6BJ,CAA7B,EAAgCC,CAAhC,EAAmC;AACjC,kBAAMI,IAAIJ,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAPA,GAAcA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAA/B;AACA,kBAAMC,KAAM,GAAE,CAAF,IAAOD,EAAE,CAAFA,CAAP,GAAcD,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAArB,GAA4BA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAnC,GAA0CA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAjD,IAAyDI,CAArE;AACA,kBAAMF,KAAM,EAACH,EAAE,CAAFA,CAAD,GAAQC,EAAE,CAAFA,CAAR,GAAeD,EAAE,CAAFA,IAAOC,EAAE,CAAFA,CAAtB,GAA6BA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAApC,GAA2CA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAlD,IAA0DI,CAAtE;AACA,mBAAO,CAACH,EAAD,EAAKC,EAAL,CAAP;AA5BO;;AAiCT,iBAAOG,0BAAP,CAAkCZ,CAAlC,EAAqCO,CAArC,EAAwC;AACtC,kBAAMM,KAAKf,KAAKO,cAALP,CAAoBE,CAApBF,EAAuBS,CAAvBT,CAAX;AACA,kBAAMgB,KAAKhB,KAAKO,cAALP,CAAoBE,EAAEe,KAAFf,CAAQ,CAARA,EAAW,CAAXA,CAApBF,EAAmCS,CAAnCT,CAAX;AACA,kBAAMkB,KAAKlB,KAAKO,cAALP,CAAoB,CAACE,EAAE,CAAFA,CAAD,EAAOA,EAAE,CAAFA,CAAP,CAApBF,EAAkCS,CAAlCT,CAAX;AACA,kBAAMmB,KAAKnB,KAAKO,cAALP,CAAoB,CAACE,EAAE,CAAFA,CAAD,EAAOA,EAAE,CAAFA,CAAP,CAApBF,EAAkCS,CAAlCT,CAAX;AACA,mBAAO,CACLzC,KAAKC,GAALD,CAASwD,GAAG,CAAHA,CAATxD,EAAgByD,GAAG,CAAHA,CAAhBzD,EAAuB2D,GAAG,CAAHA,CAAvB3D,EAA8B4D,GAAG,CAAHA,CAA9B5D,CADK,EAELA,KAAKC,GAALD,CAASwD,GAAG,CAAHA,CAATxD,EAAgByD,GAAG,CAAHA,CAAhBzD,EAAuB2D,GAAG,CAAHA,CAAvB3D,EAA8B4D,GAAG,CAAHA,CAA9B5D,CAFK,EAGLA,KAAK6D,GAAL7D,CAASwD,GAAG,CAAHA,CAATxD,EAAgByD,GAAG,CAAHA,CAAhBzD,EAAuB2D,GAAG,CAAHA,CAAvB3D,EAA8B4D,GAAG,CAAHA,CAA9B5D,CAHK,EAILA,KAAK6D,GAAL7D,CAASwD,GAAG,CAAHA,CAATxD,EAAgByD,GAAG,CAAHA,CAAhBzD,EAAuB2D,GAAG,CAAHA,CAAvB3D,EAA8B4D,GAAG,CAAHA,CAA9B5D,CAJK,CAAP;AAtCO;;AA8CT,iBAAO8D,gBAAP,CAAwBZ,CAAxB,EAA2B;AACzB,kBAAMI,IAAIJ,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAPA,GAAcA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAA/B;AACA,mBAAO,CACLA,EAAE,CAAFA,IAAOI,CADF,EAEL,CAACJ,EAAE,CAAFA,CAAD,GAAQI,CAFH,EAGL,CAACJ,EAAE,CAAFA,CAAD,GAAQI,CAHH,EAILJ,EAAE,CAAFA,IAAOI,CAJF,EAKJ,GAAE,CAAF,IAAOJ,EAAE,CAAFA,CAAP,GAAcA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAArB,IAA6BI,CALzB,EAMJ,GAAE,CAAF,IAAOJ,EAAE,CAAFA,CAAP,GAAcA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAArB,IAA6BI,CANzB,CAAP;AAhDO;;AAgET,iBAAOS,gBAAP,CAAwBb,CAAxB,EAA2Bc,CAA3B,EAA8B;AAC5B,mBAAO,CACLd,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAAPd,GAAcA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAArBd,GAA4BA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAD9B,EAELd,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAAPd,GAAcA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAArBd,GAA4BA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAF9B,EAGLd,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAAPd,GAAcA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAArBd,GAA4BA,EAAE,CAAFA,IAAOc,EAAE,CAAFA,CAH9B,CAAP;AAjEO;;AA2ET,iBAAOC,6BAAP,CAAqCf,CAArC,EAAwC;AACtC,kBAAMgB,YAAY,CAAChB,EAAE,CAAFA,CAAD,EAAOA,EAAE,CAAFA,CAAP,EAAaA,EAAE,CAAFA,CAAb,EAAmBA,EAAE,CAAFA,CAAnB,CAAlB;AAGA,kBAAMiB,IAAIjB,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAPhB,GAAsBA,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAvC;AACA,kBAAMrB,IAAIK,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAPhB,GAAsBA,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAvC;AACA,kBAAME,IAAIlB,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAPhB,GAAsBA,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAvC;AACA,kBAAMZ,IAAIJ,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAPhB,GAAsBA,EAAE,CAAFA,IAAOgB,UAAU,CAAVA,CAAvC;AAGA,kBAAMG,QAAS,KAAIf,CAAJ,IAAS,CAAxB;AACA,kBAAMgB,SAAStE,KAAKuE,IAALvE,CAAW,KAAIsD,CAAJ,KAAU,CAAV,GAAc,KAAKa,IAAIb,CAAJa,GAAQC,IAAIvB,CAAjB,CAAzB7C,IAAgD,CAA/D;AACA,kBAAMwE,KAAKH,QAAQC,MAARD,IAAkB,CAA7B;AACA,kBAAMI,KAAKJ,QAAQC,MAARD,IAAkB,CAA7B;AAGA,mBAAO,CAACrE,KAAKuE,IAALvE,CAAUwE,EAAVxE,CAAD,EAAgBA,KAAKuE,IAALvE,CAAUyE,EAAVzE,CAAhB,CAAP;AA3FO;;AAkGT,iBAAO0E,aAAP,CAAqBC,IAArB,EAA2B;AACzB,kBAAMhC,IAAIgC,KAAKjB,KAALiB,CAAW,CAAXA,CAAV;;AACA,gBAAIA,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAd,EAAuB;AACrBhC,gBAAE,CAAFA,IAAOgC,KAAK,CAALA,CAAPhC;AACAA,gBAAE,CAAFA,IAAOgC,KAAK,CAALA,CAAPhC;AAJuB;;AAMzB,gBAAIgC,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAd,EAAuB;AACrBhC,gBAAE,CAAFA,IAAOgC,KAAK,CAALA,CAAPhC;AACAA,gBAAE,CAAFA,IAAOgC,KAAK,CAALA,CAAPhC;AARuB;;AAUzB,mBAAOA,CAAP;AA5GO;;AAkHT,iBAAOiC,SAAP,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC7B,qBAASC,OAAT,CAAiBZ,CAAjB,EAAoBtB,CAApB,EAAuB;AACrB,qBAAOsB,IAAItB,CAAX;AAF2B;;AAM7B,kBAAMmC,WAAW,CAACH,MAAM,CAANA,CAAD,EAAWA,MAAM,CAANA,CAAX,EAAqBC,MAAM,CAANA,CAArB,EAA+BA,MAAM,CAANA,CAA/B,EAAyCG,IAAzC,CAA8CF,OAA9C,CAAjB;AACA,kBAAMG,WAAW,CAACL,MAAM,CAANA,CAAD,EAAWA,MAAM,CAANA,CAAX,EAAqBC,MAAM,CAANA,CAArB,EAA+BA,MAAM,CAANA,CAA/B,EAAyCG,IAAzC,CAA8CF,OAA9C,CAAjB;AACA,kBAAMI,SAAS,EAAf;AAEAN,oBAAQpC,KAAKiC,aAALjC,CAAmBoC,KAAnBpC,CAARoC;AACAC,oBAAQrC,KAAKiC,aAALjC,CAAmBqC,KAAnBrC,CAARqC;;AAGA,gBACGE,SAAS,CAATA,MAAgBH,MAAM,CAANA,CAAhBG,IAA4BA,SAAS,CAATA,MAAgBF,MAAM,CAANA,CAA5CE,IACAA,SAAS,CAATA,MAAgBF,MAAM,CAANA,CAAhBE,IAA4BA,SAAS,CAATA,MAAgBH,MAAM,CAANA,CAF/C,EAGE;AAEAM,qBAAO,CAAPA,IAAYH,SAAS,CAATA,CAAZG;AACAA,qBAAO,CAAPA,IAAYH,SAAS,CAATA,CAAZG;AANF,mBAOO;AACL,qBAAO,IAAP;AAtB2B;;AA0B7B,gBACGD,SAAS,CAATA,MAAgBL,MAAM,CAANA,CAAhBK,IAA4BA,SAAS,CAATA,MAAgBJ,MAAM,CAANA,CAA5CI,IACAA,SAAS,CAATA,MAAgBJ,MAAM,CAANA,CAAhBI,IAA4BA,SAAS,CAATA,MAAgBL,MAAM,CAANA,CAF/C,EAGE;AAEAM,qBAAO,CAAPA,IAAYD,SAAS,CAATA,CAAZC;AACAA,qBAAO,CAAPA,IAAYD,SAAS,CAATA,CAAZC;AANF,mBAOO;AACL,qBAAO,IAAP;AAlC2B;;AAqC7B,mBAAOA,MAAP;AAvJO;;AA2JT,iBAAOC,iBAAP,CAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCC,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiDC,EAAjD,EAAqDC,EAArD,EAAyD;AACvD,kBAAMC,UAAU,EAAhB;AAAA,kBACEC,SAAS,CAAC,EAAD,EAAK,EAAL,CADX;AAEA,gBAAI3B,CAAJ,EAAOtB,CAAP,EAAUuB,CAAV,EAAa2B,CAAb,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,IAAxB,EAA8BC,QAA9B;;AACA,iBAAK,IAAIrG,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1B,kBAAIA,MAAM,CAAV,EAAa;AACX+C,oBAAI,IAAIwC,EAAJ,GAAS,KAAKE,EAAd,GAAmB,IAAIE,EAA3B5C;AACAsB,oBAAI,CAAC,CAAD,GAAKkB,EAAL,GAAU,IAAIE,EAAd,GAAmB,IAAIE,EAAvB,GAA4B,IAAIE,EAApCxB;AACAC,oBAAI,IAAImB,EAAJ,GAAS,IAAIF,EAAjBjB;AAHF,qBAIO;AACLvB,oBAAI,IAAIyC,EAAJ,GAAS,KAAKE,EAAd,GAAmB,IAAIE,EAA3B7C;AACAsB,oBAAI,CAAC,CAAD,GAAKmB,EAAL,GAAU,IAAIE,EAAd,GAAmB,IAAIE,EAAvB,GAA4B,IAAIE,EAApCzB;AACAC,oBAAI,IAAIoB,EAAJ,GAAS,IAAIF,EAAjBlB;AARwB;;AAU1B,kBAAIpE,KAAKoG,GAALpG,CAASmE,CAATnE,IAAc,KAAlB,EAAyB;AACvB,oBAAIA,KAAKoG,GAALpG,CAAS6C,CAAT7C,IAAc,KAAlB,EAAyB;AACvB;AAFqB;;AAIvB+F,oBAAI,CAAC3B,CAAD,GAAKvB,CAATkD;;AACA,oBAAI,IAAIA,CAAJ,IAASA,IAAI,CAAjB,EAAoB;AAClBF,0BAAQzF,IAARyF,CAAaE,CAAbF;AANqB;;AAQvB;AAlBwB;;AAoB1BK,qBAAOrD,IAAIA,CAAJA,GAAQ,IAAIuB,CAAJ,GAAQD,CAAvB+B;AACAC,yBAAWnG,KAAKuE,IAALvE,CAAUkG,IAAVlG,CAAXmG;;AACA,kBAAID,OAAO,CAAX,EAAc;AACZ;AAvBwB;;AAyB1BF,mBAAM,EAACnD,CAAD,GAAKsD,QAAL,KAAkB,IAAIhC,CAAtB,CAAN6B;;AACA,kBAAI,IAAIA,EAAJ,IAAUA,KAAK,CAAnB,EAAsB;AACpBH,wBAAQzF,IAARyF,CAAaG,EAAbH;AA3BwB;;AA6B1BI,mBAAM,EAACpD,CAAD,GAAKsD,QAAL,KAAkB,IAAIhC,CAAtB,CAAN8B;;AACA,kBAAI,IAAIA,EAAJ,IAAUA,KAAK,CAAnB,EAAsB;AACpBJ,wBAAQzF,IAARyF,CAAaI,EAAbJ;AA/BwB;AAJ2B;;AAuCvD,gBAAIQ,IAAIR,QAAQrI,MAAhB;AAAA,gBACE8I,EADF;AAEA,kBAAMC,OAAOF,CAAb;;AACA,mBAAOA,GAAP,EAAY;AACVN,kBAAIF,QAAQQ,CAARR,CAAJE;AACAO,mBAAK,IAAIP,CAATO;AACAR,qBAAO,CAAPA,EAAUO,CAAVP,IACEQ,KAAKA,EAALA,GAAUA,EAAVA,GAAejB,EAAfiB,GACA,IAAIA,EAAJ,GAASA,EAAT,GAAcP,CAAd,GAAkBR,EADlBe,GAEA,IAAIA,EAAJ,GAASP,CAAT,GAAaA,CAAb,GAAiBN,EAFjBa,GAGAP,IAAIA,CAAJA,GAAQA,CAARA,GAAYJ,EAJdG;AAKAA,qBAAO,CAAPA,EAAUO,CAAVP,IACEQ,KAAKA,EAALA,GAAUA,EAAVA,GAAehB,EAAfgB,GACA,IAAIA,EAAJ,GAASA,EAAT,GAAcP,CAAd,GAAkBP,EADlBc,GAEA,IAAIA,EAAJ,GAASP,CAAT,GAAaA,CAAb,GAAiBL,EAFjBY,GAGAP,IAAIA,CAAJA,GAAQA,CAARA,GAAYH,EAJdE;AAlDqD;;AAyDvDA,mBAAO,CAAPA,EAAUS,IAAVT,IAAkBT,EAAlBS;AACAA,mBAAO,CAAPA,EAAUS,IAAVT,IAAkBR,EAAlBQ;AACAA,mBAAO,CAAPA,EAAUS,OAAO,CAAjBT,IAAsBH,EAAtBG;AACAA,mBAAO,CAAPA,EAAUS,OAAO,CAAjBT,IAAsBF,EAAtBE;AACAA,mBAAO,CAAPA,EAAUtI,MAAVsI,GAAmBA,OAAO,CAAPA,EAAUtI,MAAVsI,GAAmBS,OAAO,CAA7CT;AAEA,mBAAO,CACL9F,KAAKC,GAALD,CAAS,GAAG8F,OAAO,CAAPA,CAAZ9F,CADK,EAELA,KAAKC,GAALD,CAAS,GAAG8F,OAAO,CAAPA,CAAZ9F,CAFK,EAGLA,KAAK6D,GAAL7D,CAAS,GAAG8F,OAAO,CAAPA,CAAZ9F,CAHK,EAILA,KAAK6D,GAAL7D,CAAS,GAAG8F,OAAO,CAAPA,CAAZ9F,CAJK,CAAP;AA1NO;;AAAA;;;AAmOX,cAAMwG,0BAA0B,CAC9B,CAD8B,EAC3B,CAD2B,EACxB,CADwB,EACrB,CADqB,EAClB,CADkB,EACf,CADe,EACZ,CADY,EACT,CADS,EACN,CADM,EACH,CADG,EACA,CADA,EACG,CADH,EACM,CADN,EACS,CADT,EACY,CADZ,EACe,CADf,EACkB,CADlB,EACqB,CADrB,EACwB,CADxB,EAC2B,CAD3B,EAC8B,CAD9B,EACiC,CADjC,EACoC,CADpC,EACuC,CADvC,EAC0C,KAD1C,EAE9B,KAF8B,EAEvB,KAFuB,EAEhB,KAFgB,EAET,KAFS,EAEF,KAFE,EAEK,KAFL,EAEY,KAFZ,EAEmB,CAFnB,EAEsB,CAFtB,EAEyB,CAFzB,EAE4B,CAF5B,EAE+B,CAF/B,EAEkC,CAFlC,EAEqC,CAFrC,EAEwC,CAFxC,EAE2C,CAF3C,EAE8C,CAF9C,EAG9B,CAH8B,EAG3B,CAH2B,EAGxB,CAHwB,EAGrB,CAHqB,EAGlB,CAHkB,EAGf,CAHe,EAGZ,CAHY,EAGT,CAHS,EAGN,CAHM,EAGH,CAHG,EAGA,CAHA,EAGG,CAHH,EAGM,CAHN,EAGS,CAHT,EAGY,CAHZ,EAGe,CAHf,EAGkB,CAHlB,EAGqB,CAHrB,EAGwB,CAHxB,EAG2B,CAH3B,EAG8B,CAH9B,EAGiC,CAHjC,EAGoC,CAHpC,EAGuC,CAHvC,EAG0C,CAH1C,EAG6C,CAH7C,EAI9B,CAJ8B,EAI3B,CAJ2B,EAIxB,CAJwB,EAIrB,CAJqB,EAIlB,CAJkB,EAIf,CAJe,EAIZ,CAJY,EAIT,CAJS,EAIN,CAJM,EAIH,CAJG,EAIA,CAJA,EAIG,CAJH,EAIM,CAJN,EAIS,CAJT,EAIY,CAJZ,EAIe,CAJf,EAIkB,CAJlB,EAIqB,CAJrB,EAIwB,CAJxB,EAI2B,CAJ3B,EAI8B,CAJ9B,EAIiC,CAJjC,EAIoC,CAJpC,EAIuC,CAJvC,EAI0C,CAJ1C,EAI6C,CAJ7C,EAK9B,CAL8B,EAK3B,CAL2B,EAKxB,CALwB,EAKrB,CALqB,EAKlB,CALkB,EAKf,CALe,EAKZ,CALY,EAKT,CALS,EAKN,CALM,EAKH,CALG,EAKA,CALA,EAKG,CALH,EAKM,CALN,EAKS,CALT,EAKY,CALZ,EAKe,CALf,EAKkB,CALlB,EAKqB,CALrB,EAKwB,CALxB,EAK2B,CAL3B,EAK8B,CAL9B,EAKiC,CALjC,EAKoC,CALpC,EAKuC,CALvC,EAK0C,CAL1C,EAK6C,CAL7C,EAM9B,CAN8B,EAM3B,CAN2B,EAMxB,CANwB,EAMrB,CANqB,EAMlB,CANkB,EAMf,CANe,EAMZ,CANY,EAMT,CANS,EAMN,MANM,EAME,MANF,EAMU,MANV,EAMkB,MANlB,EAM0B,MAN1B,EAMkC,MANlC,EAM0C,KAN1C,EAO9B,MAP8B,EAOtB,MAPsB,EAOd,MAPc,EAON,MAPM,EAOE,MAPF,EAOU,MAPV,EAOkB,MAPlB,EAO0B,MAP1B,EAOkC,MAPlC,EAQ9B,MAR8B,EAQtB,MARsB,EAQd,MARc,EAQN,MARM,EAQE,MARF,EAQU,KARV,EAQiB,KARjB,EAQwB,KARxB,EAQ+B,KAR/B,EAQsC,KARtC,EAS9B,KAT8B,EASvB,KATuB,EAShB,KATgB,EAST,KATS,EASF,KATE,EASK,CATL,EASQ,MATR,CAAhC;;AAYA,iBAASC,iBAAT,CAA2BlG,GAA3B,EAAgC;AAC9B,cAAIA,IAAI,CAAJA,KAAU,MAAd,EAAsB;AACpB,gBAAImG,QAAJ;;AACA,gBAAInG,IAAI,CAAJA,MAAW,MAAXA,IAAqBA,IAAI,CAAJA,MAAW,MAApC,EAA4C;AAC1CmG,yBAAW,UAAXA;AADF,mBAEO,IAAInG,IAAI,CAAJA,MAAW,MAAXA,IAAqBA,IAAI,CAAJA,MAAW,MAApC,EAA4C;AACjDmG,yBAAW,UAAXA;AADK,mBAEA,IAAInG,IAAI,CAAJA,MAAW,MAAXA,IAAqBA,IAAI,CAAJA,MAAW,MAAhCA,IAA0CA,IAAI,CAAJA,MAAW,MAAzD,EAAiE;AACtEmG,yBAAW,OAAXA;AAPkB;;AAUpB,gBAAIA,QAAJ,EAAc;AACZ,kBAAI;AACF,sBAAMC,UAAU,IAAIC,WAAJ,CAAgBF,QAAhB,EAA0B;AAAEG,yBAAO;AAAT,iBAA1B,CAAhB;AACA,sBAAM9E,SAASzB,cAAcC,GAAdD,CAAf;AACA,uBAAOqG,QAAQG,MAARH,CAAe5E,MAAf4E,CAAP;AAHF,gBAIE,OAAOhJ,EAAP,EAAW;AACXzB,qBAAM,uBAAsByB,EAAG,IAA/BzB;AANU;AAVM;AADQ;;AAsB9B,gBAAM2D,SAAS,EAAf;;AACA,eAAK,IAAIC,IAAI,CAAR,EAAWiH,KAAKxG,IAAI/C,MAAzB,EAAiCsC,IAAIiH,EAArC,EAAyCjH,GAAzC,EAA8C;AAC5C,kBAAMjB,OAAO2H,wBAAwBjG,IAAIE,UAAJF,CAAeT,CAAfS,CAAxBiG,CAAb;AACA3G,mBAAOO,IAAPP,CAAYhB,OAAOa,OAAOC,YAAPD,CAAoBb,IAApBa,CAAPb,GAAmC0B,IAAIyG,MAAJzG,CAAWT,CAAXS,CAA/CV;AAzB4B;;AA2B9B,iBAAOA,OAAOQ,IAAPR,CAAY,EAAZA,CAAP;AA/9BF;;AAk+BA,iBAASoH,YAAT,CAAsB1G,GAAtB,EAA2B;AAIzB,iBAAOA,IAAI2G,OAAJ3G,CAAY,eAAZA,EAA6BhD,SAAS;AAC3C,gBAAIA,UAAU,IAAd,EAAoB;AAClB,qBAAO,KAAP;AADF,mBAEO,IAAIA,UAAU,IAAd,EAAoB;AACzB,qBAAO,KAAP;AAJyC;;AAM3C,mBAAQ,KAAIA,KAAL,EAAP;AANK,YAAP;AAt+BF;;AAg/BA,iBAAS4J,OAAT,CAAiB5G,GAAjB,EAAsB;AACpB,iBAAO,iBAAiB6G,IAAjB,CAAsB7G,GAAtB,CAAP;AAj/BF;;AAo/BA,iBAAS8G,qBAAT,CAA+B9G,GAA/B,EAAoC;AAClC,gBAAM+G,MAAM,CAAC,UAAD,CAAZ;;AACA,eAAK,IAAIxH,IAAI,CAAR,EAAWiH,KAAKxG,IAAI/C,MAAzB,EAAiCsC,IAAIiH,EAArC,EAAyCjH,GAAzC,EAA8C;AAC5C,kBAAMyH,OAAOhH,IAAIE,UAAJF,CAAeT,CAAfS,CAAb;AACA+G,gBAAIlH,IAAJkH,CACE5H,OAAOC,YAAPD,CAAqB6H,QAAQ,CAARA,GAAa,IAAlC7H,CADF4H,EAEE5H,OAAOC,YAAPD,CAAoB6H,OAAO,IAA3B7H,CAFF4H;AAJgC;;AASlC,iBAAOA,IAAIjH,IAAJiH,CAAS,EAATA,CAAP;AA7/BF;;AAggCA,iBAAS5J,kBAAT,CAA4B6C,GAA5B,EAAiC;AAC/B,iBAAOiH,mBAAmBC,OAAOlH,GAAPkH,CAAnBD,CAAP;AAjgCF;;AAogCA,iBAASE,kBAAT,CAA4BnH,GAA5B,EAAiC;AAC/B,iBAAOoH,SAASC,mBAAmBrH,GAAnBqH,CAATD,CAAP;AArgCF;;AAwgCA,iBAASE,aAAT,CAAuB7D,CAAvB,EAA0B;AACxB,iBAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,MAAM,IAA/B,IAAuCA,EAAEpD,UAAFoD,KAAiBxE,SAA/D;AAzgCF;;AA4gCA,iBAASsI,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AAChC,cAAID,KAAKvK,MAALuK,KAAgBC,KAAKxK,MAAzB,EAAiC;AAC/B,mBAAO,KAAP;AAF8B;;AAIhC,eAAK,IAAIsC,IAAI,CAAR,EAAWiH,KAAKgB,KAAKvK,MAA1B,EAAkCsC,IAAIiH,EAAtC,EAA0CjH,GAA1C,EAA+C;AAC7C,gBAAIiI,KAAKjI,CAALiI,MAAYC,KAAKlI,CAALkI,CAAhB,EAAyB;AACvB,qBAAO,KAAP;AAF2C;AAJf;;AAShC,iBAAO,IAAP;AArhCF;;AAwhCA,iBAASC,mBAAT,GAAgD;AAAA,cAAnBC,IAAmB,uEAAZ,IAAIC,IAAJ,EAAY;AAC9C,gBAAMpG,SAAS,CACbmG,KAAKE,cAALF,GAAsB3F,QAAtB2F,EADa,EAEZ,MAAKG,WAAL,KAAqB,CAArB,EAAwB9F,QAAxB,GAAmCC,QAAnC,CAA4C,CAA5C,EAA+C,GAA/C,CAFY,EAGb0F,KAAKI,UAALJ,GAAkB3F,QAAlB2F,GAA6B1F,QAA7B0F,CAAsC,CAAtCA,EAAyC,GAAzCA,CAHa,EAIbA,KAAKK,WAALL,GAAmB3F,QAAnB2F,GAA8B1F,QAA9B0F,CAAuC,CAAvCA,EAA0C,GAA1CA,CAJa,EAKbA,KAAKM,aAALN,GAAqB3F,QAArB2F,GAAgC1F,QAAhC0F,CAAyC,CAAzCA,EAA4C,GAA5CA,CALa,EAMbA,KAAKO,aAALP,GAAqB3F,QAArB2F,GAAgC1F,QAAhC0F,CAAyC,CAAzCA,EAA4C,GAA5CA,CANa,CAAf;AASA,iBAAOnG,OAAO1B,IAAP0B,CAAY,EAAZA,CAAP;AAliCF;;AAqjCA,iBAAS2G,uBAAT,GAAmC;AACjC,gBAAMC,aAAa1K,OAAOwD,MAAPxD,CAAc,IAAdA,CAAnB;AACA,cAAI2K,YAAY,KAAhB;AAEA3K,iBAAOC,cAAPD,CAAsB0K,UAAtB1K,EAAkC,SAAlCA,EAA6C;AAC3C4K,kBAAM;AACJ,qBAAOD,SAAP;AAFyC;;AAAA,WAA7C3K;AAKA0K,qBAAWG,OAAXH,GAAqB,IAAII,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1DN,uBAAWK,OAAXL,GAAqB,UAAU3H,IAAV,EAAgB;AACnC4H,0BAAY,IAAZA;AACAI,sBAAQhI,IAARgI;AAFF;;AAIAL,uBAAWM,MAAXN,GAAoB,UAAUO,MAAV,EAAkB;AACpCN,0BAAY,IAAZA;AACAK,qBAAOC,MAAPD;AAFF;AALmB,YAArBN;AAUA,iBAAOA,UAAP;AAxkCF;;;;;;;;ACgBA;;AAGA;;;;;;;;;;;ACCA,cAAMQ,WACJ,OAAOC,OAAP,KAAmB,QAAnB,IACAA,UAAU,EAAVA,KAAiB,kBADjB,IAEA,CAACA,QAAQC,QAARD,CAAiBE,EAFlB,IAGA,EAAEF,QAAQC,QAARD,CAAiBG,QAAjBH,IAA6BA,QAAQI,IAArCJ,IAA6CA,QAAQI,IAARJ,KAAiB,SAAhE,CAJF;;;;;;;;;;;;;;;;ACDA;;AAqBA;;AAWA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,cAAMK,2BAA2B,KAAjC;AACA,cAAMC,8BAA8B,GAApC;AAEA,cAAMC,uBAC6DR,oBAC7DS,6BAD6DT,GAE7DU,+BAHN;;AAIA,cAAMC,2BAC6DX,oBAC7DY,iCAD6DZ,GAE7Da,mCAHN;;AAIA,cAAMC,iCAC6Dd,oBAC7De,uCAD6Df,GAE7DgB,yCAHN;;AAkBA,YAAIC,sBAAJ;;AAWA,iBAASC,0BAAT,CAAoCC,uBAApC,EAA6D;AAC3DF,mCAAyBE,uBAAzBF;AA5GF;;AAuOA,iBAASG,WAAT,CAAqBC,GAArB,EAA0B;AACxB,gBAAMC,OAAO,IAAIC,sBAAJ,EAAb;AAEA,cAAIC,MAAJ;;AACA,cAAI,OAAOH,GAAP,KAAe,QAAf,IAA2BA,eAAe7N,GAA9C,EAAmD;AACjDgO,qBAAS;AAAE3N,mBAAKwN;AAAP,aAATG;AADF,iBAEO,IAAI9C,yBAAc2C,GAAd3C,CAAJ,EAAwB;AAC7B8C,qBAAS;AAAE3J,oBAAMwJ;AAAR,aAATG;AADK,iBAEA,IAAIH,eAAeI,qBAAnB,EAA0C;AAC/CD,qBAAS;AAAEE,qBAAOL;AAAT,aAATG;AADK,iBAEA;AACL,gBAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AAC3B,oBAAM,IAAIpO,KAAJ,CACJ,uCACE,2DAFE,CAAN;AAFG;;AAOL,gBAAI,CAACoO,IAAIxN,GAAL,IAAY,CAACwN,IAAIxJ,IAAjB,IAAyB,CAACwJ,IAAIK,KAAlC,EAAyC;AACvC,oBAAM,IAAIzO,KAAJ,CACJ,6DADI,CAAN;AARG;;AAYLuO,qBAASH,GAATG;AAtBsB;;AAwBxB,gBAAMG,SAAS7M,OAAOwD,MAAPxD,CAAc,IAAdA,CAAf;AACA,cAAI8M,iBAAiB,IAArB;AAAA,cACEC,SAAS,IADX;;AAGA,qBAAWtJ,GAAX,IAAkBiJ,MAAlB,EAA0B;AACxB,kBAAM3M,QAAQ2M,OAAOjJ,GAAPiJ,CAAd;;AAEA,oBAAQjJ,GAAR;AACE,mBAAK,KAAL;AACE,oBAAI,OAAOuJ,MAAP,KAAkB,WAAtB,EAAmC;AACjC,sBAAI;AAEFH,2BAAOpJ,GAAPoJ,IAAc,IAAInO,GAAJ,CAAQqB,KAAR,EAAeiN,OAAOC,QAAtB,EAAgCC,IAA9CL;AACA;AAHF,oBAIE,OAAOnN,EAAP,EAAW;AACXzB,oCAAM,6BAA4ByB,EAAG,IAArCzB;AAN+B;AAAnC,uBAQO,IAAI,OAAO8B,KAAP,KAAiB,QAAjB,IAA6BA,iBAAiBrB,GAAlD,EAAuD;AAC5DmO,yBAAOpJ,GAAPoJ,IAAc9M,MAAMuE,QAANvE,EAAd8M;AACA;AAXJ;;AAaE,sBAAM,IAAI1O,KAAJ,CACJ,2BACE,8DAFE,CAAN;;AAIF,mBAAK,OAAL;AACE2O,iCAAiB/M,KAAjB+M;AACA;;AACF,mBAAK,QAAL;AACEC,yBAAShN,KAATgN;AACA;;AACF,mBAAK,MAAL;AAEE,oBAGE7B,qBACA,OAAOiC,MAAP,KAAkB,WADlBjC,IAEAnL,iBAAiBoN,MALnB,EAME;AACAN,yBAAOpJ,GAAPoJ,IAAc,IAAItK,UAAJ,CAAexC,KAAf,CAAd8M;AAPF,uBAQO,IAAI9M,iBAAiBwC,UAArB,EAAiC;AACtC;AADK,uBAEA,IAAI,OAAOxC,KAAP,KAAiB,QAArB,EAA+B;AACpC8M,yBAAOpJ,GAAPoJ,IAAcxK,yBAActC,KAAdsC,CAAdwK;AADK,uBAEA,IACL,OAAO9M,KAAP,KAAiB,QAAjB,IACAA,UAAU,IADV,IAEA,CAACqN,MAAMrN,MAAMR,MAAZ6N,CAHI,EAIL;AACAP,yBAAOpJ,GAAPoJ,IAAc,IAAItK,UAAJ,CAAexC,KAAf,CAAd8M;AALK,uBAMA,IAAIjD,yBAAc7J,KAAd6J,CAAJ,EAA0B;AAC/BiD,yBAAOpJ,GAAPoJ,IAAc,IAAItK,UAAJ,CAAexC,KAAf,CAAd8M;AADK,uBAEA;AACL,wBAAM,IAAI1O,KAAJ,CACJ,kDACE,gEAFE,CAAN;AAvBJ;;AA4BE;AApDJ;;AAsDA0O,mBAAOpJ,GAAPoJ,IAAc9M,KAAd8M;AArFsB;;AAwFxBA,iBAAOQ,cAAPR,GAAwBA,OAAOQ,cAAPR,IAAyBrB,wBAAjDqB;AACAA,iBAAOS,iBAAPT,GACEA,OAAOS,iBAAPT,IAA4BhB,wBAD9BgB;AAEAA,iBAAOU,uBAAPV,GACEA,OAAOU,uBAAPV,IAAkCb,8BADpCa;AAEAA,iBAAOW,YAAPX,GAAsBA,OAAOY,YAAPZ,KAAwB,IAA9CA;AACAA,iBAAOa,mBAAPb,GAA6BA,OAAOa,mBAAPb,KAA+B,IAA5DA;AACAA,iBAAOc,MAAPd,GAAgBA,OAAOc,MAAPd,KAAkB,IAAlCA;AACAA,iBAAOe,SAAPf,GAAmBA,OAAOe,SAAPf,KAAqB,IAAxCA;;AAEA,cACE,OAAOA,OAAOgB,UAAd,KAA6B,QAA7B,IACAC,iCAAajB,OAAOgB,UAApBC,CAFF,EAGE;AAIAjB,mBAAOgB,UAAPhB,GAAoB,IAApBA;AAzGsB;;AA2GxB,cAAI,CAACnP,OAAOC,SAAPD,CAAiBmP,OAAOkB,YAAxBrQ,CAAL,EAA4C;AAC1CmP,mBAAOkB,YAAPlB,GAAsB,CAAC,CAAvBA;AA5GsB;;AA8GxB,cAAI,OAAOA,OAAOmB,cAAd,KAAiC,SAArC,EAAgD;AAC9CnB,mBAAOmB,cAAPnB,GACEA,OAAOS,iBAAPT,KAA6Bd,mCAA7Bc,IACAA,OAAOU,uBAAPV,KAAmCX,yCAFrCW;AA/GsB;;AAmHxB,cAAI,OAAOA,OAAO7I,eAAd,KAAkC,SAAtC,EAAiD;AAC/C6I,mBAAO7I,eAAP6I,GAAyB,IAAzBA;AApHsB;;AAsHxB,cAAI,OAAOA,OAAOoB,eAAd,KAAkC,SAAtC,EAAiD;AAC/CpB,mBAAOoB,eAAPpB,GACmE3B,iBADnE2B;AAvHsB;;AA0HxB,cAAI,OAAOA,OAAOqB,cAAd,KAAiC,SAArC,EAAgD;AAC9CrB,mBAAOqB,cAAPrB,GACE,CAEE3B,iBAFF,IAGK,CAAC2B,OAAOoB,eAJfpB;AA3HsB;;AAiIxB,cAAI,OAAOA,OAAOsB,aAAd,KAAgC,WAApC,EAAiD;AAC/CtB,mBAAOsB,aAAPtB,GAAuBuB,WAAWC,QAAlCxB;AAlIsB;;AAqIxB,cAAI,OAAOA,OAAOyB,YAAd,KAA+B,SAAnC,EAA8C;AAC5CzB,mBAAOyB,YAAPzB,GAAsB,KAAtBA;AAtIsB;;AAwIxB,cAAI,OAAOA,OAAO0B,aAAd,KAAgC,SAApC,EAA+C;AAC7C1B,mBAAO0B,aAAP1B,GAAuB,KAAvBA;AAzIsB;;AA2IxB,cAAI,OAAOA,OAAO2B,gBAAd,KAAmC,SAAvC,EAAkD;AAChD3B,mBAAO2B,gBAAP3B,GAA0B,KAA1BA;AA5IsB;;AAgJxBrP,uCAAkBqP,OAAOtP,SAAzBC;;AAEA,cAAI,CAACuP,MAAL,EAAa;AACX,kBAAM0B,eAAe;AACnBlR,yBAAWsP,OAAOtP,SADC;AAEnBmR,oBAAMC,oCAAoBC;AAFP,aAArB;AAMA7B,qBAAS0B,aAAaC,IAAbD,GACLI,UAAUC,QAAVD,CAAmBJ,YAAnBI,CADKJ,GAEL,IAAII,SAAJ,CAAcJ,YAAd,CAFJ1B;AAGAP,iBAAKuC,OAALvC,GAAeO,MAAfP;AA5JsB;;AA8JxB,gBAAMwC,QAAQxC,KAAKwC,KAAnB;AACAjC,iBAAOlC,OAAPkC,CACGkC,IADHlC,CACQ,YAAY;AAChB,gBAAIP,KAAK0C,SAAT,EAAoB;AAClB,oBAAM,IAAI/Q,KAAJ,CAAU,iBAAV,CAAN;AAFc;;AAKhB,kBAAMgR,kBAAkBC,eACtBrC,MADsBqC,EAEtBvC,MAFsBuC,EAGtBtC,cAHsBsC,EAItBJ,KAJsBI,CAAxB;;AAMA,kBAAMC,uBAAuB,IAAIvE,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC1D,kBAAIuE,aAAJ;;AACA,kBAAIxC,cAAJ,EAAoB;AAClBwC,gCAAgB,IAAIC,wCAAJ,CACd;AACEhQ,0BAAQsN,OAAOtN,MADjB;AAEEiQ,+BAAa3C,OAAO2C,WAFtB;AAGEC,mCAAiB5C,OAAO4C,eAH1B;AAIEC,8CAA4B7C,OAAO6C,0BAJrC;AAKEpB,gCAAczB,OAAOyB,YALvB;AAMEC,iCAAe1B,OAAO0B;AANxB,iBADc,EASdzB,cATc,CAAhBwC;AADF,qBAYO,IAAI,CAACzC,OAAO9J,IAAZ,EAAkB;AACvBuM,gCAAgBnD,uBAAuB;AACrCpN,uBAAK8N,OAAO9N,GADyB;AAErCQ,0BAAQsN,OAAOtN,MAFsB;AAGrCoQ,+BAAa9C,OAAO8C,WAHiB;AAIrCC,mCAAiB/C,OAAO+C,eAJa;AAKrCvC,kCAAgBR,OAAOQ,cALc;AAMrCiB,gCAAczB,OAAOyB,YANgB;AAOrCC,iCAAe1B,OAAO0B;AAPe,iBAAvBpC,CAAhBmD;AAfwD;;AAyB1DvE,sBAAQuE,aAARvE;AAzB2B,cAA7B;AA4BA,mBAAOD,QAAQ+E,GAAR/E,CAAY,CAACqE,eAAD,EAAkBE,oBAAlB,CAAZvE,EAAqDmE,IAArDnE,CACL,gBAAqC;AAAA,kBAA3B,CAACgF,QAAD,EAAWR,aAAX,CAA2B;;AACnC,kBAAI9C,KAAK0C,SAAT,EAAoB;AAClB,sBAAM,IAAI/Q,KAAJ,CAAU,iBAAV,CAAN;AAFiC;;AAKnC,oBAAM4R,iBAAiB,IAAIC,+BAAJ,CACrBhB,KADqB,EAErBc,QAFqB,EAGrB/C,OAAO2B,IAHc,CAAvB;AAKA,oBAAMuB,YAAY,IAAIC,eAAJ,CAChBH,cADgB,EAEhBvD,IAFgB,EAGhB8C,aAHgB,EAIhBzC,MAJgB,CAAlB;AAMAL,mBAAK2D,UAAL3D,GAAkByD,SAAlBzD;AACAuD,6BAAeK,IAAfL,CAAoB,OAApBA,EAA6B,IAA7BA;AAlBG,cAAP;AAxCJ,aA8DGM,KA9DHtD,CA8DSP,KAAK8D,WAAL9D,CAAiBxB,MA9D1B+B;AAgEA,iBAAOP,IAAP;AAtcF;;AAodA,uBAAe4C,cAAf,CAA8BrC,MAA9B,EAAsCL,MAAtC,EAA8C6D,qBAA9C,EAAqEvB,KAArE,EAA4E;AAC1E,cAAIjC,OAAOmC,SAAX,EAAsB;AACpB,kBAAM,IAAI/Q,KAAJ,CAAU,sBAAV,CAAN;AAFwE;;AAK1E,cAAIoS,qBAAJ,EAA2B;AACzB7D,mBAAOnN,MAAPmN,GAAgB6D,sBAAsBhR,MAAtCmN;AACAA,mBAAO8C,WAAP9C,GAAqB6D,sBAAsBf,WAA3C9C;AACAA,mBAAO+C,eAAP/C,GAAyB6D,sBAAsBd,eAA/C/C;AACAA,mBAAOgD,0BAAPhD,GACE6D,sBAAsBb,0BADxBhD;AATwE;;AAY1E,gBAAMoD,WAAW,MAAM/C,OAAOgD,cAAPhD,CAAsByD,eAAtBzD,CACrB,eADqBA,EAErB;AACEiC,iBADF;AAEEyB,wBAEM,UAJR;AAOE/D,oBAAQ;AACN3J,oBAAM2J,OAAO3J,IADP;AAENhE,mBAAK2N,OAAO3N,GAFN;AAGN2R,wBAAUhE,OAAOgE,QAHX;AAINlC,gCAAkB9B,OAAO8B,gBAJnB;AAKNnB,8BAAgBX,OAAOW,cALjB;AAMN9N,sBAAQmN,OAAOnN;AANT,aAPV;AAeEwO,0BAAcrB,OAAOqB,YAfvB;AAgBEE,6BAAiBvB,OAAOuB,eAhB1B;AAiBEJ,wBAAYnB,OAAOmB,UAjBrB;AAkBEL,0BAAcd,OAAOc,YAlBvB;AAmBExJ,6BAAiB0I,OAAO1I,eAnB1B;AAoBE0J,iCAAqBhB,OAAOgB,mBApB9B;AAqBEE,uBAAWlB,OAAOkB,SArBpB;AAsBEM,4BAAgBxB,OAAOwB,cAtBzB;AAuBEyC,qBAASjE,OAAOsB,cAAPtB,GAAwBA,OAAOiE,OAA/BjE,GAAyC,IAvBpD;AAwBEkE,iCAAqBlE,OAAOsB,cAAPtB,GACjBA,OAAOkE,mBADUlE,GAEjB;AA1BN,WAFqBK,CAAvB;;AAgCA,cAAIA,OAAOmC,SAAX,EAAsB;AACpB,kBAAM,IAAI/Q,KAAJ,CAAU,sBAAV,CAAN;AA7CwE;;AA+C1E,iBAAO2R,QAAP;AAngBF;;AAihBA,cAAMrD,sBAAN,CAA6B;AAC3B,qBAAWoE,UAAX,GAAwB;AACtB,mBAAOjR,kBAAO,IAAPA,EAAa,YAAbA,EAA2B;AAAEkR,mBAAK;AAAP,aAA3BlR,CAAP;AAFyB;;AAK3Ba,wBAAc;AACZ,iBAAK6P,WAAL,GAAmB7F,oCAAnB;AACA,iBAAK0F,UAAL,GAAkB,IAAlB;AACA,iBAAKpB,OAAL,GAAe,IAAf;AAMA,iBAAKC,KAAL,GAAc,IAAGvC,uBAAuBoE,UAAvBpE,CAAkCqE,GAAlCrE,EAAJ,EAAb;AAMA,iBAAKyC,SAAL,GAAiB,KAAjB;AAQA,iBAAK6B,UAAL,GAAkB,IAAlB;AAQA,iBAAKC,UAAL,GAAkB,IAAlB;AAOA,iBAAKC,oBAAL,GAA4B,IAA5B;AA3CyB;;AAkD3B,cAAIpG,OAAJ,GAAc;AACZ,mBAAO,KAAKyF,WAAL,CAAiBzF,OAAxB;AAnDyB;;AA2D3B,gBAAMqG,OAAN,GAAgB;AACd,iBAAKhC,SAAL,GAAiB,IAAjB;AACA,kBAAM,KAAKiB,UAAL,EAAiBe,OAAjB,EAAN;AAEA,iBAAKf,UAAL,GAAkB,IAAlB;;AACA,gBAAI,KAAKpB,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAamC,OAAb;;AACA,mBAAKnC,OAAL,GAAe,IAAf;AAPY;AA3DW;;AAAA;;;;AA0E7B,cAAMpC,qBAAN,CAA4B;AAO1BlM,sBACElB,MADFkB,EAEE+O,WAFF/O,EAKE;AAAA,gBAFAgP,eAEA,uEAFkB,KAElB;AAAA,gBADAC,0BACA,uEAD6B,IAC7B;AACA,iBAAKnQ,MAAL,GAAcA,MAAd;AACA,iBAAKiQ,WAAL,GAAmBA,WAAnB;AACA,iBAAKC,eAAL,GAAuBA,eAAvB;AACA,iBAAKC,0BAAL,GAAkCA,0BAAlC;AAEA,iBAAKyB,eAAL,GAAuB,EAAvB;AACA,iBAAKC,kBAAL,GAA0B,EAA1B;AACA,iBAAKC,yBAAL,GAAiC,EAAjC;AACA,iBAAKC,yBAAL,GAAiC,EAAjC;AACA,iBAAKC,gBAAL,GAAwB9G,oCAAxB;AAtBwB;;AAyB1B+G,2BAAiBC,QAAjBD,EAA2B;AACzB,iBAAKL,eAAL,CAAqBhP,IAArB,CAA0BsP,QAA1B;AA1BwB;;AA6B1BC,8BAAoBD,QAApBC,EAA8B;AAC5B,iBAAKN,kBAAL,CAAwBjP,IAAxB,CAA6BsP,QAA7B;AA9BwB;;AAiC1BE,qCAA2BF,QAA3BE,EAAqC;AACnC,iBAAKN,yBAAL,CAA+BlP,IAA/B,CAAoCsP,QAApC;AAlCwB;;AAqC1BG,qCAA2BH,QAA3BG,EAAqC;AACnC,iBAAKN,yBAAL,CAA+BnP,IAA/B,CAAoCsP,QAApC;AAtCwB;;AAyC1BI,sBAAYC,KAAZD,EAAmB5P,KAAnB4P,EAA0B;AACxB,uBAAWJ,QAAX,IAAuB,KAAKN,eAA5B,EAA6C;AAC3CM,uBAASK,KAATL,EAAgBxP,KAAhBwP;AAFsB;AAzCA;;AA+C1BM,yBAAeC,MAAfD,EAAuBE,KAAvBF,EAA8B;AAC5B,iBAAKR,gBAAL,CAAsB1G,OAAtB,CAA8BoE,IAA9B,CAAmC,MAAM;AACvC,yBAAWwC,QAAX,IAAuB,KAAKL,kBAA5B,EAAgD;AAC9CK,yBAASO,MAATP,EAAiBQ,KAAjBR;AAFqC;AAAzC;AAhDwB;;AAuD1BS,gCAAsBjQ,KAAtBiQ,EAA6B;AAC3B,iBAAKX,gBAAL,CAAsB1G,OAAtB,CAA8BoE,IAA9B,CAAmC,MAAM;AACvC,yBAAWwC,QAAX,IAAuB,KAAKJ,yBAA5B,EAAuD;AACrDI,yBAASxP,KAATwP;AAFqC;AAAzC;AAxDwB;;AA+D1BU,kCAAwB;AACtB,iBAAKZ,gBAAL,CAAsB1G,OAAtB,CAA8BoE,IAA9B,CAAmC,MAAM;AACvC,yBAAWwC,QAAX,IAAuB,KAAKH,yBAA5B,EAAuD;AACrDG;AAFqC;AAAzC;AAhEwB;;AAuE1BW,2BAAiB;AACf,iBAAKb,gBAAL,CAAsBxG,OAAtB;AAxEwB;;AA2E1BsH,2BAAiBP,KAAjBO,EAAwBC,GAAxBD,EAA6B;AAC3BnU,mCAAY,wDAAZA;AA5EwB;;AA+E1BqU,kBAAQ,CA/EkB;;AAAA;;;;AAqF5B,cAAMC,gBAAN,CAAuB;AACrB/R,sBAAYgS,OAAZhS,EAAqBwP,SAArBxP,EAAgC;AAC9B,iBAAKiS,QAAL,GAAgBD,OAAhB;AACA,iBAAKtC,UAAL,GAAkBF,SAAlB;AAGEjQ,mBAAOC,cAAPD,CAAsB,IAAtBA,EAA4B,aAA5BA,EAA2C;AACzC4K,oBAAM;AACJ+H,+CACE,qCACE,qDAFJA;AAIA,uBAAO,KAAKC,YAAL,CAAkB,CAAlB,CAAP;AANuC;;AAAA,aAA3C5S;AAUAA,mBAAOC,cAAPD,CAAsB,IAAtBA,EAA4B,UAA5BA,EAAwC;AACtCD,qBAAO,YAAY;AACjB4S,+CACE,kCACE,yDAFJA;AAIA,uBAAO,KAAKE,KAAL,IAAc;AAAEC,+BAAa,EAAf;AAAmBC,6BAAW;AAA9B,iBAArB;AANoC;AAAA,aAAxC/S;AAhBiB;;AA+BrB,cAAIgT,iBAAJ,GAAwB;AACtB,mBAAO,KAAK7C,UAAL,CAAgB6C,iBAAvB;AAhCmB;;AAsCrB,cAAIC,QAAJ,GAAe;AACb,mBAAO,KAAKP,QAAL,CAAcO,QAArB;AAvCmB;;AAgDrB,cAAIL,YAAJ,GAAmB;AACjB,mBAAO,KAAKF,QAAL,CAAcE,YAArB;AAjDmB;;AAkErB,cAAIC,KAAJ,GAAY;AACV,mBAAO,KAAK1C,UAAL,CAAgB0C,KAAvB;AAnEmB;;AAyErB,cAAIK,SAAJ,GAAgB;AACd,mBAAO,CAAC,CAAC,KAAK/C,UAAL,CAAgBgD,WAAzB;AA1EmB;;AAmFrB,cAAIC,UAAJ,GAAiB;AACf,mBAAO,KAAKjD,UAAL,CAAgBgD,WAAvB;AApFmB;;AA4FrBE,kBAAQC,UAARD,EAAoB;AAClB,mBAAO,KAAKlD,UAAL,CAAgBkD,OAAhB,CAAwBC,UAAxB,CAAP;AA7FmB;;AAqGrBC,uBAAaC,GAAbD,EAAkB;AAChB,mBAAO,KAAKpD,UAAL,CAAgBoD,YAAhB,CAA6BC,GAA7B,CAAP;AAtGmB;;AA+GrBC,4BAAkB;AAChB,mBAAO,KAAKtD,UAAL,CAAgBsD,eAAhB,EAAP;AAhHmB;;AAyHrBC,yBAAeC,EAAfD,EAAmB;AACjB,mBAAO,KAAKvD,UAAL,CAAgBuD,cAAhB,CAA+BC,EAA/B,CAAP;AA1HmB;;AAkIrBC,0BAAgB;AACd,mBAAO,KAAKzD,UAAL,CAAgByD,aAAhB,EAAP;AAnImB;;AA0IrBC,0BAAgB;AACd,mBAAO,KAAK1D,UAAL,CAAgB0D,aAAhB,EAAP;AA3ImB;;AAkJrBC,wBAAc;AACZ,mBAAO,KAAK3D,UAAL,CAAgB2D,WAAhB,EAAP;AAnJmB;;AA2JrBC,iCAAuB;AACrB,mBAAO,KAAK5D,UAAL,CAAgB4D,oBAAhB,EAAP;AA5JmB;;AAoKrBC,0BAAgB;AACd,mBAAO,KAAK7D,UAAL,CAAgB6D,aAAhB,EAAP;AArKmB;;AA4KrBC,2BAAiB;AACf,mBAAO,KAAK9D,UAAL,CAAgB8D,cAAhB,EAAP;AA7KmB;;AAqLrBC,0BAAgB;AACd,mBAAO,KAAK/D,UAAL,CAAgB+D,aAAhB,EAAP;AAtLmB;;AAgMrBC,yBAAe;AACb,mBAAO,KAAKhE,UAAL,CAAgBiE,eAAhB,EAAP;AAjMmB;;AAuNrBC,uBAAa;AACX,mBAAO,KAAKlE,UAAL,CAAgBkE,UAAhB,EAAP;AAxNmB;;AAgOrBC,qCAA2B;AACzB,mBAAO,KAAKnE,UAAL,CAAgBmE,wBAAhB,EAAP;AAjOmB;;AAyOrBC,2BAAiB;AACf,mBAAO,KAAKpE,UAAL,CAAgBoE,cAAhB,EAAP;AA1OmB;;AAoPrBC,wBAAc;AACZ,mBAAO,KAAKrE,UAAL,CAAgBqE,WAAhB,EAAP;AArPmB;;AAqQrBC,wBAAc;AACZ,mBAAO,KAAKtE,UAAL,CAAgBsE,WAAhB,EAAP;AAtQmB;;AA6QrBC,oBAAU;AACR,mBAAO,KAAKvE,UAAL,CAAgBuE,OAAhB,EAAP;AA9QmB;;AAsRrBC,4BAAkB;AAChB,mBAAO,KAAKxE,UAAL,CAAgByE,sBAAhB,CAAuC/J,OAA9C;AAvRmB;;AAsSrBgK,oBAAiC;AAAA,gBAAzBC,eAAyB,uEAAP,KAAO;AAC/B,mBAAO,KAAK3E,UAAL,CAAgB4E,YAAhB,CAA6BD,mBAAmB,KAAK5B,SAArD,CAAP;AAvSmB;;AA6SrBhC,oBAAU;AACR,mBAAO,KAAK8D,WAAL,CAAiB9D,OAAjB,EAAP;AA9SmB;;AAqTrB,cAAI+D,aAAJ,GAAoB;AAClB,mBAAO,KAAK9E,UAAL,CAAgB8E,aAAvB;AAtTmB;;AA4TrB,cAAID,WAAJ,GAAkB;AAChB,mBAAO,KAAK7E,UAAL,CAAgB6E,WAAvB;AA7TmB;;AAoUrBE,yBAAe;AACb,gBAEE,KAAK/E,UAAL,CAAgB6C,iBAAhB,CAAkCmC,IAAlC,IAA0C,CAF5C,EAGE;AACAxC,6CACE,6DACE,wCAFJA;AALW;;AAUb,mBAAO,KAAKxC,UAAL,CAAgB+E,YAAhB,EAAP;AA9UmB;;AAsVrBE,4BAAkB;AAChB,mBAAO,KAAKjF,UAAL,CAAgBiF,eAAhB,EAAP;AAvVmB;;AA8VrBC,yBAAe;AACb,mBAAO,KAAKlF,UAAL,CAAgBkF,YAAhB,EAAP;AA/VmB;;AAuWrBC,mCAAyB;AACvB,mBAAO,KAAKnF,UAAL,CAAgBmF,sBAAhB,EAAP;AAxWmB;;AAAA;;;;AAuhBvB,cAAMC,YAAN,CAAmB;AACjB9U,sBAAY+U,SAAZ/U,EAAuBgV,QAAvBhV,EAAiCwP,SAAjCxP,EAA4C0N,aAA5C1N,EAA2E;AAAA,gBAAhBkN,MAAgB,uEAAP,KAAO;AACzE,iBAAK+H,UAAL,GAAkBF,SAAlB;AACA,iBAAKG,SAAL,GAAiBF,QAAjB;AACA,iBAAKG,cAAL,GAAsBzH,aAAtB;AACA,iBAAKgC,UAAL,GAAkBF,SAAlB;AACA,iBAAK4F,MAAL,GAAclI,SAAS,IAAImI,wBAAJ,EAATnI,GAA2B,IAAzC;AACA,iBAAKoI,OAAL,GAAepI,MAAf;AAEA,iBAAKqI,UAAL,GAAkB/F,UAAU+F,UAA5B;AACA,iBAAKC,IAAL,GAAY,IAAIC,UAAJ,EAAZ;AAEA,iBAAKC,kBAAL,GAA0B,KAA1B;AACA,iBAAKC,cAAL,GAAsB,KAAtB;AACA,iBAAKC,aAAL,GAAqB,IAAIC,GAAJ,EAArB;AACA,iBAAKC,mBAAL,GAA2B,IAAID,GAAJ,EAA3B;AACA,iBAAKpH,SAAL,GAAiB,KAAjB;AAhBe;;AAsBjB,cAAIoE,UAAJ,GAAiB;AACf,mBAAO,KAAKoC,UAAL,GAAkB,CAAzB;AAvBe;;AA6BjB,cAAIc,MAAJ,GAAa;AACX,mBAAO,KAAKb,SAAL,CAAea,MAAtB;AA9Be;;AAoCjB,cAAIhD,GAAJ,GAAU;AACR,mBAAO,KAAKmC,SAAL,CAAenC,GAAtB;AArCe;;AA2CjB,cAAIiD,QAAJ,GAAe;AACb,mBAAO,KAAKd,SAAL,CAAec,QAAtB;AA5Ce;;AAmDjB,cAAIC,IAAJ,GAAW;AACT,mBAAO,KAAKf,SAAL,CAAee,IAAtB;AApDe;;AA4DjBC,wBAMQ;AAAA,gBANI;AACVC,mBADU;AAEVC,yBAAW,KAAKL,MAFN;AAGVM,wBAAU,CAHA;AAIVC,wBAAU,CAJA;AAKVC,yBAAW;AALD,aAMJ,uEAAJ,EAAI;AACN,mBAAO,IAAIC,2BAAJ,CAAiB;AACtBC,uBAAS,KAAKR,IADQ;AAEtBE,mBAFsB;AAGtBC,sBAHsB;AAItBC,qBAJsB;AAKtBC,qBALsB;AAMtBC;AANsB,aAAjB,CAAP;AAnEe;;AAkFjBG,2BAA4C;AAAA,gBAA7B;AAAEC,uBAAS;AAAX,aAA6B,uEAAJ,EAAI;;AAC1C,kBAAMC,aAAa,KAAKlH,UAAL,CAAgBmH,kBAAhB,CAAmCF,MAAnC,CAAnB;;AAEA,gBAAIvM,UAAU,KAAK0L,mBAAL,CAAyB3L,GAAzB,CAA6ByM,WAAWE,QAAxC,CAAd;;AACA,gBAAI,CAAC1M,OAAL,EAAc;AACZA,wBAAU,KAAKsF,UAAL,CAAgBgH,cAAhB,CACR,KAAKzB,UADG,EAER2B,WAAWG,eAFH,CAAV3M;;AAIA,mBAAK0L,mBAAL,CAAyBrT,GAAzB,CAA6BmU,WAAWE,QAAxC,EAAkD1M,OAAlD;;AAGEA,wBAAUA,QAAQoE,IAARpE,CAAa4M,eAAe;AACpC,2BAAWC,UAAX,IAAyBD,WAAzB,EAAsC;AACpC,sBAAIC,WAAWC,QAAXD,KAAwBnW,SAA5B,EAAuC;AACrCvB,2BAAOC,cAAPD,CAAsB0X,UAAtB1X,EAAkC,OAAlCA,EAA2C;AACzC4K,4BAAM;AACJ+H,uDACE,gEADFA;AAGA,+BAAO+E,WAAWC,QAAXD,CAAoBpV,GAA3B;AALuC;;AAAA,qBAA3CtC;AAFkC;;AAWpC,sBAAI0X,WAAWE,WAAXF,KAA2BnW,SAA/B,EAA0C;AACxCvB,2BAAOC,cAAPD,CAAsB0X,UAAtB1X,EAAkC,UAAlCA,EAA8C;AAC5C4K,4BAAM;AACJ+H,uDACE,sEADFA;AAGA,+BAAO+E,WAAWE,WAAXF,CAAuBpV,GAA9B;AAL0C;;AAAA,qBAA9CtC;AAZkC;AADF;;AAuBpC,uBAAOyX,WAAP;AAvBQ,gBAAV5M;AAZsC;;AAuC1C,mBAAOA,OAAP;AAzHe;;AAgIjBsJ,yBAAe;AACb,mBAAQ,KAAK0D,iBAAL,KAA2B,KAAK1H,UAAL,CAAgB2H,gBAAhB,CACjC,KAAKpC,UAD4B,CAAnC;AAjIe;;AA4IjB,gBAAMqC,MAAN,GAAe;AACb,mBAAO,KAAK5H,UAAL,CAAgBgD,WAAhB,EAA6B6E,QAA7B,CAAsC,KAAKtC,UAA3C,KAA0D,IAAjE;AA7Ie;;AAuJjBuC,wBAWG;AAAA,gBAXI;AACLC,2BADK;AAELC,sBAFK;AAGLf,uBAAS,SAHJ;AAILgB,+BAAiB9rB,qBAAeE,MAJ3B;AAKLqK,0BAAY,IALP;AAMLwhB,2BAAa,IANR;AAOLC,8BAAgB,IAPX;AAQLC,2BAAa,IARR;AASLC,6CAA+B,IAT1B;AAULC,oCAAsB;AAVjB,aAWJ;;AAEC,gBAAIC,UAAU,CAAVA,GAAcC,sBAAdD,KAAyCnX,SAA7C,EAAwD;AACtDoR,6CACE,mEACE,iDAFJA;;AAIA,kBACE+F,UAAU,CAAVA,EAAaC,sBAAbD,KAAwC,IAAxCA,IACAN,mBAAmB9rB,qBAAeE,MAFpC,EAGE;AACA4rB,iCAAiB9rB,qBAAeG,YAAhC2rB;AAToD;AAFzD;;AAcC,gBAAIM,UAAU,CAAVA,GAAcE,wBAAdF,KAA2CnX,SAA/C,EAA0D;AACxDoR,6CACE,qEACE,iDAFJA;;AAIA,kBACE+F,UAAU,CAAVA,EAAaE,wBAAbF,KAA0C,IAA1CA,IACAN,mBAAmB9rB,qBAAeE,MAFpC,EAGE;AACA4rB,iCAAiB9rB,qBAAeI,cAAhC0rB;AATsD;AAd3D;;AA4BD,gBAAI,KAAKvC,MAAT,EAAiB;AACf,mBAAKA,MAAL,CAAYgD,IAAZ,CAAiB,SAAjB;AA7BD;;AAgCD,kBAAMxB,aAAa,KAAKlH,UAAL,CAAgBmH,kBAAhB,CACjBF,MADiB,EAEjBgB,cAFiB,CAAnB;;AAMA,iBAAKhC,cAAL,GAAsB,KAAtB;;AAEA,gBAAI,CAACoC,4BAAL,EAAmC;AACjCA,6CAA+B,KAAKrI,UAAL,CAAgBmE,wBAAhB,EAA/BkE;AAzCD;;AA4CD,gBAAIM,cAAc,KAAKzC,aAAL,CAAmBzL,GAAnB,CAAuByM,WAAWE,QAAlC,CAAlB;;AACA,gBAAI,CAACuB,WAAL,EAAkB;AAChBA,4BAAc9Y,OAAOwD,MAAPxD,CAAc,IAAdA,CAAd8Y;;AACA,mBAAKzC,aAAL,CAAmBnT,GAAnB,CAAuBmU,WAAWE,QAAlC,EAA4CuB,WAA5C;AA/CD;;AAmDD,gBAAIA,YAAYC,yBAAhB,EAA2C;AACzCC,2BAAaF,YAAYC,yBAAzBC;AACAF,0BAAYC,yBAAZD,GAAwC,IAAxCA;AArDD;;AAwDD,kBAAMG,wBACJX,iBACA,IAAI5M,oBAAJ,CAAyB;AAAEyC,6BAAe,KAAKyH;AAAtB,aAAzB,CAFF;AAGA,kBAAMsD,cAAc,CAAC,EACnB7B,WAAWG,eAAXH,GAA6BvrB,0BAAoBG,KAD9B,CAArB;;AAMA,gBAAI,CAAC6sB,YAAYK,sBAAjB,EAAyC;AACvCL,0BAAYK,sBAAZL,GAAqCrO,oCAArCqO;AACAA,0BAAYM,YAAZN,GAA2B;AACzBO,yBAAS,EADgB;AAEzBC,2BAAW,EAFc;AAGzBC,2BAAW;AAHc,eAA3BT;;AAMA,kBAAI,KAAKjD,MAAT,EAAiB;AACf,qBAAKA,MAAL,CAAYgD,IAAZ,CAAiB,cAAjB;AATqC;;AAWvC,mBAAKW,iBAAL,CAAuBnC,UAAvB;AA5ED;;AA+ED,kBAAMoC,WAAWC,SAAS;AACxBZ,0BAAYa,WAAZb,CAAwBc,MAAxBd,CAA+Be,kBAA/Bf;;AAIA,kBAAI,KAAK3C,kBAAL,IAA2B+C,WAA/B,EAA4C;AAC1C,qBAAK9C,cAAL,GAAsB,IAAtB;AANsB;;AAQxB,mBAAK0D,WAAL;;AAEA,kBAAIJ,KAAJ,EAAW;AACTG,mCAAmBnP,UAAnBmP,CAA8B7O,MAA9B6O,CAAqCH,KAArCG;;AAEA,qBAAKE,kBAAL,CAAwB;AACtBjB,6BADsB;AAEtB7N,0BAAQyO,iBAAiBvb,KAAjBub,GAAyBA,KAAzBA,GAAiC,IAAIvb,KAAJ,CAAUub,KAAV;AAFnB,iBAAxB;AAHF,qBAOO;AACLG,mCAAmBnP,UAAnBmP,CAA8B9O,OAA9B8O;AAlBsB;;AAoBxB,kBAAI,KAAKhE,MAAT,EAAiB;AACf,qBAAKA,MAAL,CAAYmE,OAAZ,CAAoB,WAApB;;AACA,qBAAKnE,MAAL,CAAYmE,OAAZ,CAAoB,SAApB;AAtBsB;AAA1B;;AA0BA,kBAAMH,qBAAqB,IAAII,kBAAJ,CAAuB;AAChDC,wBAAUT,QADsC;AAGhD5M,sBAAQ;AACNqL,6BADM;AAENC,wBAFM;AAGNthB,yBAHM;AAINwhB,0BAJM;AAKNE;AALM,eAHwC;AAUhDtC,oBAAM,KAAKA,IAVqC;AAWhDD,0BAAY,KAAKA,UAX+B;AAYhDyC,iCAZgD;AAahDW,4BAAcN,YAAYM,YAbsB;AAchD5D,yBAAW,KAAKE,UAdgC;AAehD4C,6BAAeW,qBAfiC;AAgBhDkB,wCAA0B,CAACjB,WAhBqB;AAiBhDvL,sBAAQ,KAAKoI;AAjBmC,aAAvB,CAA3B;AAoBC,yBAAY4D,WAAZ,KAA4B,IAAIS,GAAJ,EAA5B,EAAuCC,GAAvC,CAA2CR,kBAA3C;AACD,kBAAMS,aAAaT,mBAAmBrN,IAAtC;AAEA1B,oBAAQ+E,GAAR/E,CAAY,CACVgO,YAAYK,sBAAZL,CAAmCjO,OADzB,EAEV2N,4BAFU,CAAZ1N,EAIGmE,IAJHnE,CAIQ,SAA2C;AAAA,kBAA1C,CAACyP,YAAD,EAAeC,qBAAf,CAA0C;;AAC/C,kBAAI,KAAKpE,cAAT,EAAyB;AACvBqD;AACA;AAH6C;;AAK/C,kBAAI,KAAK5D,MAAT,EAAiB;AACf,qBAAKA,MAAL,CAAYgD,IAAZ,CAAiB,WAAjB;AAN6C;;AAQ/CgB,iCAAmBY,kBAAnBZ,CAAsC;AACpCU,4BADoC;AAEpCC;AAFoC,eAAtCX;AAIAA,iCAAmBa,mBAAnBb;AAhBJ,eAkBGxJ,KAlBHvF,CAkBS2O,QAlBT3O;AAoBA,mBAAOwP,UAAP;AAtTe;;AA+TjBK,4BAGQ;AAAA,gBAHQ;AACdvD,uBAAS,SADK;AAEdgB,+BAAiB9rB,qBAAeE;AAFlB,aAGR,uEAAJ,EAAI;;AACN,qBAASkuB,mBAAT,GAA+B;AAC7B,kBAAI5B,YAAYM,YAAZN,CAAyBS,SAA7B,EAAwC;AACtCT,4BAAY8B,oBAAZ9B,CAAiC/N,OAAjC+N,CAAyCA,YAAYM,YAArDN;AAEAA,4BAAYa,WAAZb,CAAwBc,MAAxBd,CAA+B+B,UAA/B/B;AAJ2B;AADzB;;AASN,kBAAMzB,aAAa,KAAKlH,UAAL,CAAgBmH,kBAAhB,CACjBF,MADiB,EAEjBgB,cAFiB,EAGA,IAHA,CAAnB;;AAKA,gBAAIU,cAAc,KAAKzC,aAAL,CAAmBzL,GAAnB,CAAuByM,WAAWE,QAAlC,CAAlB;;AACA,gBAAI,CAACuB,WAAL,EAAkB;AAChBA,4BAAc9Y,OAAOwD,MAAPxD,CAAc,IAAdA,CAAd8Y;;AACA,mBAAKzC,aAAL,CAAmBnT,GAAnB,CAAuBmU,WAAWE,QAAlC,EAA4CuB,WAA5C;AAjBI;;AAmBN,gBAAI+B,UAAJ;;AAEA,gBAAI,CAAC/B,YAAY8B,oBAAjB,EAAuC;AACrCC,2BAAa7a,OAAOwD,MAAPxD,CAAc,IAAdA,CAAb6a;AACAA,yBAAWH,mBAAXG,GAAiCH,mBAAjCG;AACA/B,0BAAY8B,oBAAZ9B,GAAmCrO,oCAAnCqO;AACC,2BAAYa,WAAZ,KAA4B,IAAIS,GAAJ,EAA5B,EAAuCC,GAAvC,CAA2CQ,UAA3C;AACD/B,0BAAYM,YAAZN,GAA2B;AACzBO,yBAAS,EADgB;AAEzBC,2BAAW,EAFc;AAGzBC,2BAAW;AAHc,eAA3BT;;AAMA,kBAAI,KAAKjD,MAAT,EAAiB;AACf,qBAAKA,MAAL,CAAYgD,IAAZ,CAAiB,cAAjB;AAZmC;;AAcrC,mBAAKW,iBAAL,CAAuBnC,UAAvB;AAnCI;;AAqCN,mBAAOyB,YAAY8B,oBAAZ9B,CAAiCjO,OAAxC;AAvWe;;AAiXjBiQ,8BAGQ;AAAA,gBAHU;AAChBC,wCAA0B,KADV;AAEhBC,qCAAuB;AAFP,aAGV,uEAAJ,EAAI;AACN,kBAAMC,0BAA0B,GAAhC;AAEA,mBAAO,KAAK9K,UAAL,CAAgBJ,cAAhB,CAA+BmL,cAA/B,CACL,gBADK,EAEL;AACE1F,yBAAW,KAAKE,UADlB;AAEEyF,gCAAkBJ,4BAA4B,IAFhD;AAGEC,oCAAsBA,yBAAyB;AAHjD,aAFK,EAOL;AACEI,6BAAeH,uBADjB;;AAEE9F,mBAAKkG,WAALlG,EAAkB;AAChB,uBAAOkG,YAAYC,KAAZD,CAAkB9b,MAAzB;AAHJ;;AAAA,aAPK,CAAP;AAvXe;;AA+YjBgc,2BAA4B;AAAA,gBAAb1O,MAAa,uEAAJ,EAAI;;AAC1B,gBAAI,KAAKsD,UAAL,CAAgBgD,WAApB,EAAiC;AAG/B,qBAAO,KAAK4E,MAAL,GAAc9I,IAAd,CAAmBuM,OAAO;AAC/B,uBAAOC,kBAAQJ,WAARI,CAAoBD,GAApBC,CAAP;AADK,gBAAP;AAJwB;;AAQ1B,kBAAMC,iBAAiB,KAAKZ,iBAAL,CAAuBjO,MAAvB,CAAvB;AAEA,mBAAO,IAAI/B,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,uBAAS2Q,IAAT,GAAgB;AACdC,uBAAOC,IAAPD,GAAc3M,IAAd2M,CAAmB,iBAA2B;AAAA,sBAAjB;AAAE7b,yBAAF;AAAS+b;AAAT,mBAAiB;;AAC5C,sBAAIA,IAAJ,EAAU;AACR/Q,4BAAQsQ,WAARtQ;AACA;AAH0C;;AAK5C/K,yBAAO+b,MAAP/b,CAAcqb,YAAYW,MAA1Bhc,EAAkCD,MAAMic,MAAxChc;AACAqb,8BAAYC,KAAZD,CAAkBlZ,IAAlBkZ,CAAuB,GAAGtb,MAAMub,KAAhCD;AACAM;AAPF,mBAQG3Q,MARH4Q;AAF0C;;AAa5C,oBAAMA,SAASF,eAAeO,SAAfP,EAAf;AACA,oBAAML,cAAc;AAClBC,uBAAO,EADW;AAElBU,wBAAQhc,OAAOwD,MAAPxD,CAAc,IAAdA;AAFU,eAApB;AAIA2b;AAlBK,cAAP;AAzZe;;AAobjBO,0BAAgB;AACd,mBAAQ,KAAKC,kBAAL,KAA4B,KAAKhM,UAAL,CAAgB+L,aAAhB,CAClC,KAAKxG,UAD6B,CAApC;AArbe;;AA8bjB0G,qBAAW;AACT,iBAAKlN,SAAL,GAAiB,IAAjB;AAEA,kBAAMmN,SAAS,EAAf;;AACA,uBAAWvD,WAAX,IAA0B,KAAKzC,aAAL,CAAmBiG,MAAnB,EAA1B,EAAuD;AACrD,mBAAKvC,kBAAL,CAAwB;AACtBjB,2BADsB;AAEtB7N,wBAAQ,IAAI9M,KAAJ,CAAU,qBAAV,CAFc;AAGtBoe,uBAAO;AAHe,eAAxB;;AAMA,kBAAIzD,YAAY8B,oBAAhB,EAAsC;AAEpC;AATmD;;AAWrD,yBAAWf,kBAAX,IAAiCf,YAAYa,WAA7C,EAA0D;AACxD0C,uBAAOla,IAAPka,CAAYxC,mBAAmB2C,SAA/BH;AACAxC,mCAAmB4C,MAAnB5C;AAbmD;AAJ9C;;AAoBT,iBAAK5D,IAAL,CAAUyG,KAAV;;AACA,iBAAKnG,mBAAL,CAAyBmG,KAAzB;;AACA,iBAAK7E,iBAAL,GAAyB,IAAzB;AACA,iBAAKsE,kBAAL,GAA0B,IAA1B;AACA,iBAAK/F,cAAL,GAAsB,KAAtB;AACA,mBAAOtL,QAAQ+E,GAAR/E,CAAYuR,MAAZvR,CAAP;AAvde;;AAiejB+J,oBAA4B;AAAA,gBAApB8H,UAAoB,uEAAP,KAAO;AAC1B,iBAAKvG,cAAL,GAAsB,IAAtB;AACA,mBAAO,KAAK0D,WAAL,CAAiB6C,UAAjB,CAAP;AAnee;;AA0ejB7C,wBAAgC;AAAA,gBAApB6C,UAAoB,uEAAP,KAAO;;AAC9B,gBAAI,CAAC,KAAKvG,cAAV,EAA0B;AACxB,qBAAO,KAAP;AAF4B;;AAI9B,uBAAW;AAAEuD,yBAAF;AAAeP;AAAf,aAAX,IAA4C,KAAK/C,aAAL,CAAmBiG,MAAnB,EAA5C,EAAyE;AACvE,kBAAI3C,YAAYxE,IAAZwE,GAAmB,CAAnBA,IAAwB,CAACP,aAAaG,SAA1C,EAAqD;AACnD,uBAAO,KAAP;AAFqE;AAJ3C;;AAU9B,iBAAKlD,aAAL,CAAmBqG,KAAnB;;AACA,iBAAKzG,IAAL,CAAUyG,KAAV;;AACA,iBAAKnG,mBAAL,CAAyBmG,KAAzB;;AACA,iBAAK7E,iBAAL,GAAyB,IAAzB;AACA,iBAAKsE,kBAAL,GAA0B,IAA1B;;AACA,gBAAIQ,cAAc,KAAK9G,MAAvB,EAA+B;AAC7B,mBAAKA,MAAL,GAAc,IAAIC,wBAAJ,EAAd;AAhB4B;;AAkB9B,iBAAKM,cAAL,GAAsB,KAAtB;AACA,mBAAO,IAAP;AA7fe;;AAmgBjBwG,2BAAiBrC,YAAjBqC,EAA+BrF,QAA/BqF,EAAyC;AACvC,kBAAM9D,cAAc,KAAKzC,aAAL,CAAmBzL,GAAnB,CAAuB2M,QAAvB,CAApB;;AACA,gBAAI,CAACuB,WAAL,EAAkB;AAChB;AAHqC;;AAKvC,gBAAI,KAAKjD,MAAT,EAAiB;AACf,mBAAKA,MAAL,CAAYmE,OAAZ,CAAoB,cAApB;AANqC;;AAUvC,gBAAIlB,YAAYK,sBAAhB,EAAwC;AACtCL,0BAAYK,sBAAZL,CAAmC/N,OAAnC+N,CAA2CyB,YAA3CzB;AAXqC;AAngBxB;;AAqhBjB+D,2BAAiBC,iBAAjBD,EAAoC/D,WAApC+D,EAAiD;AAE/C,iBAAK,IAAIhb,IAAI,CAAR,EAAWiH,KAAKgU,kBAAkBvd,MAAvC,EAA+CsC,IAAIiH,EAAnD,EAAuDjH,GAAvD,EAA4D;AAC1DiX,0BAAYM,YAAZN,CAAyBO,OAAzBP,CAAiC3W,IAAjC2W,CAAsCgE,kBAAkBzD,OAAlByD,CAA0Bjb,CAA1Bib,CAAtChE;AACAA,0BAAYM,YAAZN,CAAyBQ,SAAzBR,CAAmC3W,IAAnC2W,CAAwCgE,kBAAkBxD,SAAlBwD,CAA4Bjb,CAA5Bib,CAAxChE;AAJ6C;;AAM/CA,wBAAYM,YAAZN,CAAyBS,SAAzBT,GAAqCgE,kBAAkBvD,SAAvDT;;AAGA,uBAAWe,kBAAX,IAAiCf,YAAYa,WAA7C,EAA0D;AACxDE,iCAAmBa,mBAAnBb;AAV6C;;AAa/C,gBAAIiD,kBAAkBvD,SAAtB,EAAiC;AAC/B,mBAAKO,WAAL;AAd6C;AArhBhC;;AA0iBjBN,mCAAiD;AAAA,gBAA/B;AAAEhC,6BAAF;AAAmBD;AAAnB,aAA+B;;AAW/C,kBAAMmE,iBAAiB,KAAKvL,UAAL,CAAgBJ,cAAhB,CAA+BmL,cAA/B,CACrB,iBADqB,EAErB;AACE1F,yBAAW,KAAKE,UADlB;AAEE0B,sBAAQI,eAFV;AAGED,sBAHF;AAIEvE,iCACEwE,kBAAkB1rB,0BAAoBK,mBAAtCqrB,GACI,KAAKrH,UAAL,CAAgB6C,iBAAhB,CAAkC+J,YADtCvF,GAEI;AAPR,aAFqB,CAAvB;;AAYA,kBAAMoE,SAASF,eAAeO,SAAfP,EAAf;;AAEA,kBAAM5C,cAAc,KAAKzC,aAAL,CAAmBzL,GAAnB,CAAuB2M,QAAvB,CAApB;;AACAuB,wBAAYkE,YAAZlE,GAA2B8C,MAA3B9C;;AAEA,kBAAM6C,OAAO,MAAM;AACjBC,qBAAOC,IAAPD,GAAc3M,IAAd2M,CACE,SAAqB;AAAA,oBAApB;AAAE7b,uBAAF;AAAS+b;AAAT,iBAAoB;;AACnB,oBAAIA,IAAJ,EAAU;AACRhD,8BAAYkE,YAAZlE,GAA2B,IAA3BA;AACA;AAHiB;;AAKnB,oBAAI,KAAK3I,UAAL,CAAgBjB,SAApB,EAA+B;AAC7B;AANiB;;AAQnB,qBAAK2N,gBAAL,CAAsB9c,KAAtB,EAA6B+Y,WAA7B;;AACA6C;AAVJ,iBAYE1Q,UAAU;AACR6N,4BAAYkE,YAAZlE,GAA2B,IAA3BA;;AAEA,oBAAI,KAAK3I,UAAL,CAAgBjB,SAApB,EAA+B;AAC7B;AAJM;;AAMR,oBAAI4J,YAAYM,YAAhB,EAA8B;AAE5BN,8BAAYM,YAAZN,CAAyBS,SAAzBT,GAAqC,IAArCA;;AAEA,6BAAWe,kBAAX,IAAiCf,YAAYa,WAA7C,EAA0D;AACxDE,uCAAmBa,mBAAnBb;AAL0B;;AAO5B,uBAAKC,WAAL;AAbM;;AAgBR,oBAAIhB,YAAYK,sBAAhB,EAAwC;AACtCL,8BAAYK,sBAAZL,CAAmC9N,MAAnC8N,CAA0C7N,MAA1C6N;AADF,uBAEO,IAAIA,YAAY8B,oBAAhB,EAAsC;AAC3C9B,8BAAY8B,oBAAZ9B,CAAiC9N,MAAjC8N,CAAwC7N,MAAxC6N;AADK,uBAEA;AACL,wBAAM7N,MAAN;AArBM;AAZZ;AADF;;AAuCA0Q;AA7mBe;;AAmnBjB5B,oCAA2D;AAAA,gBAAxC;AAAEjB,yBAAF;AAAe7N,oBAAf;AAAuBsR,sBAAQ;AAA/B,aAAwC;;AAWzD,gBAAI,CAACzD,YAAYkE,YAAjB,EAA+B;AAC7B;AAZuD;;AAczD,gBAAI,CAACT,KAAL,EAAY;AAGV,kBAAIzD,YAAYa,WAAZb,CAAwB3D,IAAxB2D,GAA+B,CAAnC,EAAsC;AACpC;AAJQ;;AASV,kBAAI7N,kBAAkBgS,0CAAtB,EAAmD;AACjDnE,4BAAYC,yBAAZD,GAAwCoE,WAAW,MAAM;AACvD,uBAAKnD,kBAAL,CAAwB;AAAEjB,+BAAF;AAAe7N,0BAAf;AAAuBsR,2BAAO;AAA9B,mBAAxB;;AACAzD,8BAAYC,yBAAZD,GAAwC,IAAxCA;AAFsC,mBAGrCrN,2BAHqCyR,CAAxCpE;AAIA;AAdQ;AAd6C;;AA+BzDA,wBAAYkE,YAAZlE,CACG2D,MADH3D,CACU,IAAI1X,oBAAJ,CAAmB6J,OAAO1K,OAA1B,CADVuY,EAEGzI,KAFHyI,CAES,MAAM,CAFf;AAKAA,wBAAYkE,YAAZlE,GAA2B,IAA3BA;;AAEA,gBAAI,KAAK3I,UAAL,CAAgBjB,SAApB,EAA+B;AAC7B;AAvCuD;;AA2CzD,uBAAW,CAACiO,WAAD,EAAcC,cAAd,CAAX,IAA4C,KAAK/G,aAAjD,EAAgE;AAC9D,kBAAI+G,mBAAmBtE,WAAvB,EAAoC;AAClC,qBAAKzC,aAAL,CAAmBuD,MAAnB,CAA0BuD,WAA1B;;AACA;AAH4D;AA3CP;;AAkDzD,iBAAKtI,OAAL;AArqBe;;AA2qBjB,cAAIhC,KAAJ,GAAY;AACV,mBAAO,KAAKgD,MAAZ;AA5qBe;;AAAA;;;;AAgrBnB,cAAMwH,YAAN,CAAmB;AACjB5c,wBAAc;AACZ,iBAAK6c,UAAL,GAAkB,EAAlB;AACA,iBAAKC,SAAL,GAAiBzS,QAAQC,OAARD,EAAjB;AAHe;;AAMjB0S,sBAAY3d,GAAZ2d,EAAiBC,SAAjBD,EAA4B;AAC1B,kBAAME,QAAQ;AACZ3a,oBAIM4a,gBAAgB9d,GAAhB8d,EAAqBF,SAArBE;AALM,aAAd;;AASA,iBAAKJ,SAAL,CAAetO,IAAf,CAAoB,MAAM;AACxB,yBAAWwC,QAAX,IAAuB,KAAK6L,UAA5B,EAAwC;AACtC7L,yBAASmM,IAATnM,CAAc,IAAdA,EAAoBiM,KAApBjM;AAFsB;AAA1B;AAhBe;;AAuBjBoM,2BAAiBrd,IAAjBqd,EAAuBpM,QAAvBoM,EAAiC;AAC/B,iBAAKP,UAAL,CAAgBnb,IAAhB,CAAqBsP,QAArB;AAxBe;;AA2BjBqM,8BAAoBtd,IAApBsd,EAA0BrM,QAA1BqM,EAAoC;AAClC,kBAAMjc,IAAI,KAAKyb,UAAL,CAAgBS,OAAhB,CAAwBtM,QAAxB,CAAV;;AACA,iBAAK6L,UAAL,CAAgBU,MAAhB,CAAuBnc,CAAvB,EAA0B,CAA1B;AA7Be;;AAgCjBoc,sBAAY;AACV,iBAAKX,UAAL,CAAgB/d,MAAhB,GAAyB,CAAzB;AAjCe;;AAAA;;;AA6CnB,cAAM2e,gBAAgB;AACpBC,4BAAkB,KADE;AAEpBC,6BAAmB,IAFC;AAGpBC,wBAAc;AAHM,SAAtB;AAKiE;AAE/D,cAAInT,qBAAY,OAAOoT,OAAP,KAAmC,UAAnD,EAA+D;AAE7DJ,0BAAcC,gBAAdD,GAAiC,IAAjCA;AAEAA,0BAAcE,iBAAdF,GAEI,iBAFJA;AAJF,iBAOO,IAAI,OAAO7P,QAAP,KAAoB,QAAxB,EAAkC;AACvC,kBAAMkQ,gBAAgBlQ,UAAUmQ,aAAVnQ,EAAyB9B,GAA/C;;AACA,gBAAIgS,aAAJ,EAAmB;AACjBL,4BAAcE,iBAAdF,GAAkCK,cAActV,OAAdsV,CAChC,2BADgCA,EAEhC,aAFgCA,CAAlCL;AAHqC;AATsB;;AAmB/DA,wBAAcO,gBAAdP,GAAiC,UAAUnf,GAAV,EAAe;AAI9C,kBAAM2f,UAAW,kBAAiB3f,GAAI,KAAtC;AACA,mBAAOL,IAAIigB,eAAJjgB,CAAoB,IAAIkgB,IAAJ,CAAS,CAACF,OAAD,CAAT,CAApBhgB,CAAP;AALF;AA57DF;;AA68DA,cAAMmQ,SAAN,CAAgB;AACd,qBAAWgQ,YAAX,GAA0B;AACxB,mBAAOjf,kBAAO,IAAPA,EAAa,cAAbA,EAA6B,IAAIkf,OAAJ,EAA7Blf,CAAP;AAFY;;AAKda,wBAIQ;AAAA,gBAJI;AACVD,qBAAO,IADG;AAEVkO,qBAAO,IAFG;AAGVnR,0BAAYK;AAHF,aAIJ,uEAAJ,EAAI;;AACN,gBAAI8Q,QAAQG,UAAUgQ,YAAVhQ,CAAuBkQ,GAAvBlQ,CAA2BH,IAA3BG,CAAZ,EAA8C;AAC5C,oBAAM,IAAI1Q,KAAJ,CAAU,8CAAV,CAAN;AAFI;;AAKN,iBAAKqC,IAAL,GAAYA,IAAZ;AACA,iBAAK0O,SAAL,GAAiB,KAAjB;AACA,iBAAK3R,SAAL,GAAiBA,SAAjB;AAEA,iBAAKgU,gBAAL,GAAwB9G,oCAAxB;AACA,iBAAKuU,KAAL,GAAa,IAAb;AACA,iBAAKC,UAAL,GAAkB,IAAlB;AACA,iBAAKC,eAAL,GAAuB,IAAvB;;AAEA,gBAAIxQ,IAAJ,EAAU;AACRG,wBAAUgQ,YAAVhQ,CAAuB3L,GAAvB2L,CAA2BH,IAA3BG,EAAiC,IAAjCA;;AACA,mBAAKsQ,mBAAL,CAAyBzQ,IAAzB;;AACA;AAjBI;;AAmBN,iBAAK0Q,WAAL;AA5BY;;AAmCd,cAAIvU,OAAJ,GAAc;AACZ,mBAAO,KAAK0G,gBAAL,CAAsB1G,OAA7B;AApCY;;AA2Cd,cAAI6D,IAAJ,GAAW;AACT,mBAAO,KAAKsQ,KAAZ;AA5CY;;AAmDd,cAAIjP,cAAJ,GAAqB;AACnB,mBAAO,KAAKmP,eAAZ;AApDY;;AAuDdC,8BAAoBzQ,IAApByQ,EAA0B;AACxB,iBAAKH,KAAL,GAAatQ,IAAb;AACA,iBAAKwQ,eAAL,GAAuB,IAAIlP,+BAAJ,CAAmB,MAAnB,EAA2B,QAA3B,EAAqCtB,IAArC,CAAvB;;AACA,iBAAKwQ,eAAL,CAAqBG,EAArB,CAAwB,OAAxB,EAAiC,YAAY,CAA7C;;AAIA,iBAAK9N,gBAAL,CAAsBxG,OAAtB;AA9DY;;AAiEdqU,wBAAc;AAMZ,gBACE,OAAOE,MAAP,KAAkB,WAAlB,IACA,CAACpB,cAAcC,gBADf,IAEA,CAACtP,UAAU0Q,+BAHb,EAIE;AACA,kBAAIC,YAAY3Q,UAAU2Q,SAA1B;;AAEA,kBAAI;AAGF,oBAGE,CAAClhB,wBAAa0O,OAAOC,QAAPD,CAAgBE,IAA7B5O,EAAmCkhB,SAAnClhB,CAHH,EAIE;AACAkhB,8BAAYtB,cAAcO,gBAAdP,CACV,IAAIxf,GAAJ,CAAQ8gB,SAAR,EAAmBxS,OAAOC,QAA1B,EAAoCC,IAD1BgR,CAAZsB;AARA;;AAeF,sBAAMzS,SAAS,IAAIuS,MAAJ,CAAWE,SAAX,CAAf;AACA,sBAAMzP,iBAAiB,IAAIC,+BAAJ,CAAmB,MAAnB,EAA2B,QAA3B,EAAqCjD,MAArC,CAAvB;;AACA,sBAAM0S,iBAAiB,MAAM;AAC3B1S,yBAAO+Q,mBAAP/Q,CAA2B,OAA3BA,EAAoC2S,aAApC3S;AACAgD,iCAAemB,OAAfnB;AACAhD,yBAAOkR,SAAPlR;;AACA,sBAAI,KAAKmC,SAAT,EAAoB;AAClB,yBAAKqC,gBAAL,CAAsBvG,MAAtB,CAA6B,IAAI7M,KAAJ,CAAU,sBAAV,CAA7B;AADF,yBAEO;AAGL,yBAAKwhB,gBAAL;AATyB;AAA7B;;AAaA,sBAAMD,gBAAgB,MAAM;AAC1B,sBAAI,CAAC,KAAKT,UAAV,EAAsB;AAGpBQ;AAJwB;AAA5B;;AAOA1S,uBAAO8Q,gBAAP9Q,CAAwB,OAAxBA,EAAiC2S,aAAjC3S;AAEAgD,+BAAesP,EAAftP,CAAkB,MAAlBA,EAA0BhN,QAAQ;AAChCgK,yBAAO+Q,mBAAP/Q,CAA2B,OAA3BA,EAAoC2S,aAApC3S;;AACA,sBAAI,KAAKmC,SAAT,EAAoB;AAClBuQ;AACA;AAJ8B;;AAMhC,sBAAI1c,IAAJ,EAAU;AACR,yBAAKmc,eAAL,GAAuBnP,cAAvB;AACA,yBAAKiP,KAAL,GAAajS,MAAb;AACA,yBAAKkS,UAAL,GAAkBlS,MAAlB;;AAEA,yBAAKwE,gBAAL,CAAsBxG,OAAtB;;AAEAgF,mCAAeK,IAAfL,CAAoB,WAApBA,EAAiC;AAC/BxS,iCAAW,KAAKA;AADe,qBAAjCwS;AAPF,yBAUO;AACL,yBAAK4P,gBAAL;;AACA5P,mCAAemB,OAAfnB;AACAhD,2BAAOkR,SAAPlR;AAnB8B;AAAlC;AAuBAgD,+BAAesP,EAAftP,CAAkB,OAAlBA,EAA2BhN,QAAQ;AACjCgK,yBAAO+Q,mBAAP/Q,CAA2B,OAA3BA,EAAoC2S,aAApC3S;;AACA,sBAAI,KAAKmC,SAAT,EAAoB;AAClBuQ;AACA;AAJ+B;;AAMjC,sBAAI;AACFG;AADF,oBAEE,OAAOhhB,CAAP,EAAU;AAEV,yBAAK+gB,gBAAL;AAV+B;AAAnC;;AAcA,sBAAMC,WAAW,MAAM;AACrB,wBAAMC,UAAU,IAAItd,UAAJ,CAAe,CAAC,GAAD,CAAf,CAAhB;;AAGA,sBAAI;AACFwN,mCAAeK,IAAfL,CAAoB,MAApBA,EAA4B8P,OAA5B9P,EAAqC,CAAC8P,QAAQ/b,MAAT,CAArCiM;AADF,oBAEE,OAAOrQ,EAAP,EAAW;AACXzB,oCAAK,mCAALA;AACA4hB,4BAAQ,CAARA,IAAa,CAAbA;AACA9P,mCAAeK,IAAfL,CAAoB,MAApBA,EAA4B8P,OAA5B9P;AATmB;AAAvB;;AAgBA6P;AACA;AA7FF,gBA8FE,OAAOhhB,CAAP,EAAU;AACVf,gCAAK,+BAALA;AAlGF;AAVU;;AAiHZ,iBAAK8hB,gBAAL;AAlLY;;AAqLdA,6BAAmB;AACjB,gBAAI,CAACzB,cAAcC,gBAAnB,EAAqC;AACnClgB,8BAAK,yBAALA;AACAigB,4BAAcC,gBAAdD,GAAiC,IAAjCA;AAHe;;AAMjBrP,sBAAUiR,sBAAVjR,CACGI,IADHJ,CACQkR,wBAAwB;AAC5B,kBAAI,KAAK7Q,SAAT,EAAoB;AAClB,qBAAKqC,gBAAL,CAAsBvG,MAAtB,CAA6B,IAAI7M,KAAJ,CAAU,sBAAV,CAA7B;;AACA;AAH0B;;AAK5B,oBAAMuQ,OAAO,IAAI2O,YAAJ,EAAb;AACA,mBAAK2B,KAAL,GAAatQ,IAAb;AAGA,oBAAMiF,KAAM,OAAMuK,cAAcG,YAAdH,EAAP,EAAX;AAIA,oBAAM8B,gBAAgB,IAAIhQ,+BAAJ,CAAmB2D,KAAK,SAAxB,EAAmCA,EAAnC,EAAuCjF,IAAvC,CAAtB;AACAqR,mCAAqBE,KAArBF,CAA2BC,aAA3BD,EAA0CrR,IAA1CqR;AAEA,oBAAMhQ,iBAAiB,IAAIC,+BAAJ,CAAmB2D,EAAnB,EAAuBA,KAAK,SAA5B,EAAuCjF,IAAvC,CAAvB;AACA,mBAAKwQ,eAAL,GAAuBnP,cAAvB;;AACA,mBAAKwB,gBAAL,CAAsBxG,OAAtB;;AAEAgF,6BAAeK,IAAfL,CAAoB,WAApBA,EAAiC;AAC/BxS,2BAAW,KAAKA;AADe,eAAjCwS;AArBJ,eAyBGM,KAzBHxB,CAyBS5D,UAAU;AACf,mBAAKsG,gBAAL,CAAsBvG,MAAtB,CACE,IAAI7M,KAAJ,CAAW,mCAAkC8M,OAAO1K,OAAQ,IAA5D,CADF;AA1BJ;AA3LY;;AA8Nd2Q,oBAAU;AACR,iBAAKhC,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAK+P,UAAT,EAAqB;AAEnB,mBAAKA,UAAL,CAAgBhB,SAAhB;;AACA,mBAAKgB,UAAL,GAAkB,IAAlB;AALM;;AAORpQ,sBAAUgQ,YAAVhQ,CAAuB+K,MAAvB/K,CAA8B,KAAKmQ,KAAnCnQ;;AACA,iBAAKmQ,KAAL,GAAa,IAAb;;AACA,gBAAI,KAAKE,eAAT,EAA0B;AACxB,mBAAKA,eAAL,CAAqBhO,OAArB;;AACA,mBAAKgO,eAAL,GAAuB,IAAvB;AAXM;AA9NI;;AAgPd,iBAAOpQ,QAAP,CAAgBjC,MAAhB,EAAwB;AACtB,gBAAI,CAACA,QAAQ6B,IAAb,EAAmB;AACjB,oBAAM,IAAIvQ,KAAJ,CAAU,gDAAV,CAAN;AAFoB;;AAItB,gBAAI,KAAK0gB,YAAL,CAAkBE,GAAlB,CAAsBlS,OAAO6B,IAA7B,CAAJ,EAAwC;AACtC,qBAAO,KAAKmQ,YAAL,CAAkBjU,GAAlB,CAAsBiC,OAAO6B,IAA7B,CAAP;AALoB;;AAOtB,mBAAO,IAAIG,SAAJ,CAAchC,MAAd,CAAP;AAvPY;;AA8Pd,qBAAW2S,SAAX,GAAuB;AACrB,gBAAI7Q,oCAAoB6Q,SAAxB,EAAmC;AACjC,qBAAO7Q,oCAAoB6Q,SAA3B;AAFmB;;AAIrB,gBAAItB,cAAcE,iBAAdF,KAAoC,IAAxC,EAA8C;AAC5C,kBAAI,CAAChT,iBAAL,EAAe;AACbyH,+CAAW,+CAAXA;AAF0C;;AAI5C,qBAAOuL,cAAcE,iBAArB;AARmB;;AAUrB,kBAAM,IAAIjgB,KAAJ,CAAU,+CAAV,CAAN;AAxQY;;AA2Qd,qBAAWohB,+BAAX,GAA6C;AAC3C,gBAAI;AACF,qBAAOnR,WAAW8R,WAAX9R,EAAwB2R,oBAAxB3R,IAAgD,IAAvD;AADF,cAEE,OAAO1O,EAAP,EAAW;AACX,qBAAO,IAAP;AAJyC;AA3Q/B;;AAoRd,qBAAWogB,sBAAX,GAAoC;AAClC,kBAAMK,SAAS,YAAY;AACzB,oBAAMC,2BAA2B,KAAKb,+BAAtC;;AAEA,kBAAIa,wBAAJ,EAA8B;AAE5B,uBAAOA,wBAAP;AALuB;;AAWzB,kBAEElV,qBAEA,OAAOoT,OAAP,KAAmC,UAJrC,EAKE;AAcA,sBAAMvR,SAASsT,KAAK,SAALA,EAAgB,KAAKb,SAArBa,CAAf;AACA,uBAAOtT,OAAOgT,oBAAd;AA/BuB;;AAiCzB,oBAAMO,+BAAW,KAAKd,SAAhBc,CAAN;AACA,qBAAOtT,OAAOkT,WAAPlT,CAAmB+S,oBAA1B;AAlCF;;AAqCA,mBAAOngB,kBAAO,IAAPA,EAAa,wBAAbA,EAAuCugB,QAAvCvgB,CAAP;AA1TY;;AAAA;;;AA6TiD;AAC/DiP,oBAAU0R,YAAV1R,GAAyB,YAAY;AACnC8D,2CACE,uEADFA;AAGA,mBAAO,KAAK6M,SAAZ;AAJF;AA3wEF;;AAuxEA,cAAMtP,eAAN,CAAsB;AACpBsQ,sBAAY,IAAZA;AAEAC,uBAAa,IAAInK,GAAJ,EAAbmK;AAEAC,0BAAgB,IAAIpK,GAAJ,EAAhBoK;AAEAC,6BAAmB,IAAnBA;;AAEAlgB,sBAAYsP,cAAZtP,EAA4BuU,WAA5BvU,EAAyC6O,aAAzC7O,EAAwDoM,MAAxDpM,EAAgE;AAC9D,iBAAKsP,cAAL,GAAsBA,cAAtB;AACA,iBAAKiF,WAAL,GAAmBA,WAAnB;AACA,iBAAKgB,UAAL,GAAkB,IAAIE,UAAJ,EAAlB;AACA,iBAAK0K,UAAL,GAAkB,IAAIC,uBAAJ,CAAe;AAC/B7R,qBAAOgG,YAAYhG,KADY;AAE/BiC,oCAAsB,KAAK6P,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAFS;AAG/B5S,6BAAetB,OAAOsB,aAHS;AAI/B6S,4BAAcnU,OAAOmU;AAJU,aAAf,CAAlB;AAMA,iBAAKC,OAAL,GAAepU,MAAf;;AAEA,gBAAI,CAACA,OAAOmB,cAAZ,EAA4B;AAC1B,mBAAKV,iBAAL,GAAyB,IAAIT,OAAOS,iBAAX,CAA6B;AACpD/O,yBAASsO,OAAO8D,OADoC;AAEpDuQ,8BAAcrU,OAAOsU;AAF+B,eAA7B,CAAzB;AAIA,mBAAK5T,uBAAL,GAA+B,IAAIV,OAAOU,uBAAX,CAAmC;AAChEhP,yBAASsO,OAAO+D;AADgD,eAAnC,CAA/B;AAjB4D;;AAsB9D,iBAAK1B,SAAL,GAAiB,KAAjB;AACA,iBAAKkS,iBAAL,GAAyB,IAAzB;AACA,iBAAKC,mBAAL,GAA2B,IAA3B;AAEA,iBAAKC,cAAL,GAAsBhS,aAAtB;AACA,iBAAKiS,WAAL,GAAmB,IAAnB;AACA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAK5M,sBAAL,GAA8BnK,oCAA9B;AAEA,iBAAKgX,mBAAL;AAxCkB;;AA2CpB,cAAIzO,iBAAJ,GAAwB;AACtB,mBAAOpT,kBAAO,IAAPA,EAAa,mBAAbA,EAAkC,IAAI8hB,qCAAJ,EAAlC9hB,CAAP;AA5CkB;;AA+CpB,cAAIiT,KAAJ,GAAY;AACV,mBAAO,KAAK2N,SAAZ;AAhDkB;;AAmDpBlJ,6BACEF,MADFE,EAIE;AAAA,gBAFAc,cAEA,uEAFiB9rB,qBAAeE,MAEhC;AAAA,gBADAm1B,QACA,uEADW,KACX;AACA,gBAAInK,kBAAkB1rB,0BAAoBE,OAA1C;AACA,gBAAI41B,eAAe,EAAnB;;AAEA,oBAAQxK,MAAR;AACE,mBAAK,KAAL;AACEI,kCAAkB1rB,0BAAoBC,GAAtCyrB;AACA;;AACF,mBAAK,SAAL;AACE;;AACF,mBAAK,OAAL;AACEA,kCAAkB1rB,0BAAoBG,KAAtCurB;AACA;;AACF;AACEvZ,gCAAM,wCAAuCmZ,MAAxC,EAALnZ;AAVJ;;AAaA,oBAAQma,cAAR;AACE,mBAAK9rB,qBAAeC,OAApB;AACEirB,mCAAmB1rB,0BAAoBM,mBAAvCorB;AACA;;AACF,mBAAKlrB,qBAAeE,MAApB;AACE;;AACF,mBAAKF,qBAAeG,YAApB;AACE+qB,mCAAmB1rB,0BAAoBI,iBAAvCsrB;AACA;;AACF,mBAAKlrB,qBAAeI,cAApB;AACE8qB,mCAAmB1rB,0BAAoBK,mBAAvCqrB;AAEAoK,+BAAe,KAAK5O,iBAAL,CAAuB4O,YAAtCA;AACA;;AACF;AACE3jB,gCAAM,gDAA+Cma,cAAhD,EAALna;AAfJ;;AAkBA,gBAAI0jB,QAAJ,EAAc;AACZnK,iCAAmB1rB,0BAAoBO,MAAvCmrB;AApCF;;AAuCA,mBAAO;AACLA,6BADK;AAELD,wBAAU,GAAGC,eAAgB,IAAGoK,YAAtB;AAFL,aAAP;AA9FkB;;AAoGpB1Q,oBAAU;AACR,gBAAI,KAAKkQ,iBAAT,EAA4B;AAC1B,qBAAO,KAAKA,iBAAL,CAAuBvW,OAA9B;AAFM;;AAKR,iBAAKqE,SAAL,GAAiB,IAAjB;AACA,iBAAKkS,iBAAL,GAAyB3W,oCAAzB;;AAEA,gBAAI,KAAK4W,mBAAT,EAA8B;AAC5B,mBAAKA,mBAAL,CAAyBrW,MAAzB,CACE,IAAI7M,KAAJ,CAAU,iDAAV,CADF;AATM;;AAcR,kBAAMke,SAAS,EAAf;;AAGA,uBAAWwF,IAAX,IAAmB,KAAKpB,UAAL,CAAgBnE,MAAhB,EAAnB,EAA6C;AAC3CD,qBAAOla,IAAPka,CAAYwF,KAAKzF,QAALyF,EAAZxF;AAlBM;;AAoBR,iBAAKoE,UAAL,CAAgB/D,KAAhB;AACA,iBAAKgE,aAAL,CAAmBhE,KAAnB;;AAEA,gBAAI,KAAKoF,cAAL,CAAoB,mBAApB,CAAJ,EAA8C;AAC5C,mBAAK9O,iBAAL,CAAuB+O,aAAvB;AAxBM;;AA2BR,kBAAMC,aAAa,KAAKjS,cAAL,CAAoBS,eAApB,CAAoC,WAApC,EAAiD,IAAjD,CAAnB;AACA6L,mBAAOla,IAAPka,CAAY2F,UAAZ3F;AAEAvR,oBAAQ+E,GAAR/E,CAAYuR,MAAZvR,EAAoBmE,IAApBnE,CAAyB,MAAM;AAC7B,mBAAKkL,UAAL,CAAgB0G,KAAhB;AACA,mBAAKkE,UAAL,CAAgBlE,KAAhB;AACA,mBAAKiE,gBAAL,GAAwB,IAAxB;AACA,mBAAKsB,uBAAL,GAA+B,IAA/B;AACA,mBAAKC,oBAAL,GAA4B,IAA5B;;AAEA,kBAAI,KAAKZ,cAAT,EAAyB;AACvB,qBAAKA,cAAL,CAAoBa,iBAApB,CACE,IAAI/gB,oBAAJ,CAAmB,wBAAnB,CADF;AAR2B;;AAa7B,kBAAI,KAAK2O,cAAT,EAAyB;AACvB,qBAAKA,cAAL,CAAoBmB,OAApB;AACA,qBAAKnB,cAAL,GAAsB,IAAtB;AAf2B;;AAiB7B,mBAAKqR,iBAAL,CAAuBrW,OAAvB;AAjBF,eAkBG,KAAKqW,iBAAL,CAAuBpW,MAlB1BF;AAmBA,mBAAO,KAAKsW,iBAAL,CAAuBvW,OAA9B;AArJkB;;AAwJpB4W,gCAAsB;AACpB,kBAAM;AAAE1R,4BAAF;AAAkBiF;AAAlB,gBAAkC,IAAxC;AAEAjF,2BAAesP,EAAftP,CAAkB,WAAlBA,EAA+B,CAAChN,IAAD,EAAOqf,IAAP,KAAgB;AAC7ChkB,gCACE,KAAKkjB,cADPljB,EAEE,iDAFFA;AAIA,mBAAKmjB,WAAL,GAAmB,KAAKD,cAAL,CAAoBe,aAApB,EAAnB;;AACA,mBAAKd,WAAL,CAAiBvQ,UAAjB,GAA8BsR,OAAO;AACnC,qBAAKd,aAAL,GAAqB;AACnBxP,0BAAQsQ,IAAItQ,MADO;AAEnBC,yBAAOqQ,IAAIrQ;AAFQ,iBAArB;AADF;;AAMAmQ,mBAAKG,MAALH,GAAc,MAAM;AAClB,qBAAKb,WAAL,CACG1F,IADH,GAEG5M,IAFH,CAEQ,iBAA2B;AAAA,sBAAjB;AAAElP,yBAAF;AAAS+b;AAAT,mBAAiB;;AAC/B,sBAAIA,IAAJ,EAAU;AACRsG,yBAAKI,KAALJ;AACA;AAH6B;;AAK/BhkB,oCACEwL,yBAAc7J,KAAd6J,CADFxL,EAEE,sCAFFA;AAMAgkB,uBAAKK,OAALL,CAAa,IAAI7f,UAAJ,CAAexC,KAAf,CAAbqiB,EAAoC,CAApCA,EAAuC,CAACriB,KAAD,CAAvCqiB;AAbJ,mBAeG/R,KAfH,CAeSpF,UAAU;AACfmX,uBAAK1I,KAAL0I,CAAWnX,MAAXmX;AAhBJ;AADF;;AAqBAA,mBAAKM,QAALN,GAAgBnX,UAAU;AACxB,qBAAKsW,WAAL,CAAiB9E,MAAjB,CAAwBxR,MAAxB;;AAEAmX,qBAAKO,KAALP,CAAW/R,KAAX+R,CAAiBQ,eAAe;AAC9B,sBAAI,KAAK1T,SAAT,EAAoB;AAClB;AAF4B;;AAI9B,wBAAM0T,WAAN;AAJF;AAHF;AAjCF;AA6CA7S,2BAAesP,EAAftP,CAAkB,oBAAlBA,EAAwChN,QAAQ;AAC9C,oBAAM8f,oBAAoBpY,oCAA1B;AACA,oBAAMqY,aAAa,KAAKvB,WAAxB;AACAuB,yBAAWC,YAAXD,CAAwB7T,IAAxB6T,CAA6B,MAAM;AAGjC,oBAAI,CAACA,WAAWE,oBAAZ,IAAoC,CAACF,WAAWG,gBAApD,EAAsE;AACpE,sBAAI,KAAKzB,aAAT,EAAwB;AACtBxM,gCAAYhE,UAAZgE,GAAyB,KAAKwM,aAA9BxM;AAFkE;;AAIpE8N,6BAAW9R,UAAX8R,GAAwBR,OAAO;AAC7BtN,gCAAYhE,UAAZgE,GAAyB;AACvBhD,8BAAQsQ,IAAItQ,MADW;AAEvBC,6BAAOqQ,IAAIrQ;AAFY,qBAAzB+C;AADF;AAP+B;;AAejC6N,kCAAkB9X,OAAlB8X,CAA0B;AACxBG,wCAAsBF,WAAWE,oBADT;AAExBC,oCAAkBH,WAAWG,gBAFL;AAGxBC,iCAAeJ,WAAWI;AAHF,iBAA1BL;AAfF,iBAoBGA,kBAAkB7X,MApBrB8X;AAsBA,qBAAOD,kBAAkBhY,OAAzB;AAzBF;AA4BAkF,2BAAesP,EAAftP,CAAkB,gBAAlBA,EAAoC,CAAChN,IAAD,EAAOqf,IAAP,KAAgB;AAClDhkB,gCACE,KAAKkjB,cADPljB,EAEE,sDAFFA;;AAIA,oBAAM+kB,cAAc,KAAK7B,cAAL,CAAoB8B,cAApB,CAClBrgB,KAAK+O,KADa,EAElB/O,KAAKuP,GAFa,CAApB;;AAeA,kBAAI,CAAC6Q,WAAL,EAAkB;AAChBf,qBAAKI,KAALJ;AACA;AAtBgD;;AAyBlDA,mBAAKG,MAALH,GAAc,MAAM;AAClBe,4BACGtH,IADHsH,GAEGlU,IAFHkU,CAEQ,iBAA2B;AAAA,sBAAjB;AAAEpjB,yBAAF;AAAS+b;AAAT,mBAAiB;;AAC/B,sBAAIA,IAAJ,EAAU;AACRsG,yBAAKI,KAALJ;AACA;AAH6B;;AAK/BhkB,oCACEwL,yBAAc7J,KAAd6J,CADFxL,EAEE,2CAFFA;AAIAgkB,uBAAKK,OAALL,CAAa,IAAI7f,UAAJ,CAAexC,KAAf,CAAbqiB,EAAoC,CAApCA,EAAuC,CAACriB,KAAD,CAAvCqiB;AAXJ,mBAaG/R,KAbH8S,CAaSlY,UAAU;AACfmX,uBAAK1I,KAAL0I,CAAWnX,MAAXmX;AAdJ;AADF;;AAmBAA,mBAAKM,QAALN,GAAgBnX,UAAU;AACxBkY,4BAAY1G,MAAZ0G,CAAmBlY,MAAnBkY;AAEAf,qBAAKO,KAALP,CAAW/R,KAAX+R,CAAiBQ,eAAe;AAC9B,sBAAI,KAAK1T,SAAT,EAAoB;AAClB;AAF4B;;AAI9B,wBAAM0T,WAAN;AAJF;AAHF;AA5CF;AAwDA7S,2BAAesP,EAAftP,CAAkB,QAAlBA,EAA4B,UAAiB;AAAA,kBAAhB;AAAE0C;AAAF,eAAgB;AAC3C,mBAAK4Q,SAAL,GAAiB5Q,QAAQQ,QAAzB;AACA,mBAAKE,WAAL,GAAmBV,QAAQ6Q,UAA3B;AACA,qBAAO7Q,QAAQ6Q,UAAf;;AACAtO,0BAAY1E,WAAZ0E,CAAwBjK,OAAxBiK,CAAgC,IAAIxC,gBAAJ,CAAqBC,OAArB,EAA8B,IAA9B,CAAhCuC;AAJF;AAOAjF,2BAAesP,EAAftP,CAAkB,cAAlBA,EAAkC,UAAUrQ,EAAV,EAAc;AAC9C,kBAAIuL,MAAJ;;AACA,sBAAQvL,GAAGc,IAAX;AACE,qBAAK,mBAAL;AACEyK,2BAAS,IAAItK,uBAAJ,CAAsBjB,GAAGa,OAAzB,EAAkCb,GAAGkB,IAArC,CAATqK;AACA;;AACF,qBAAK,qBAAL;AACEA,2BAAS,IAAIlK,yBAAJ,CAAwBrB,GAAGa,OAA3B,CAAT0K;AACA;;AACF,qBAAK,qBAAL;AACEA,2BAAS,IAAIjK,yBAAJ,CAAwBtB,GAAGa,OAA3B,CAAT0K;AACA;;AACF,qBAAK,6BAAL;AACEA,2BAAS,IAAIhK,iCAAJ,CAAgCvB,GAAGa,OAAnC,EAA4Cb,GAAGwB,MAA/C,CAAT+J;AACA;;AACF,qBAAK,uBAAL;AACEA,2BAAS,IAAIpK,2BAAJ,CAA0BnB,GAAGa,OAA7B,EAAsCb,GAAGoB,OAAzC,CAATmK;AACA;;AACF;AACE/M,yCAAY,wCAAZA;AAjBJ;;AAmBA8W,0BAAY1E,WAAZ0E,CAAwBhK,MAAxBgK,CAA+B/J,MAA/B+J;AArBF;AAwBAjF,2BAAesP,EAAftP,CAAkB,iBAAlBA,EAAqCwT,aAAa;AAChD,mBAAKlC,mBAAL,GAA2B5W,oCAA3B;;AAEA,kBAAIuK,YAAYjE,UAAhB,EAA4B;AAC1B,sBAAMyS,iBAAiB9S,YAAY;AACjC,sBAAIA,oBAAoBvS,KAAxB,EAA+B;AAC7B,yBAAKkjB,mBAAL,CAAyBrW,MAAzB,CAAgC0F,QAAhC;AADF,yBAEO;AACL,yBAAK2Q,mBAAL,CAAyBtW,OAAzB,CAAiC;AAAE2F;AAAF,qBAAjC;AAJ+B;AAAnC;;AAOA,oBAAI;AACFsE,8BAAYjE,UAAZiE,CAAuBwO,cAAvBxO,EAAuCuO,UAAU3iB,IAAjDoU;AADF,kBAEE,OAAOtV,EAAP,EAAW;AACX,uBAAK2hB,mBAAL,CAAyBrW,MAAzB,CAAgCtL,EAAhC;AAXwB;AAA5B,qBAaO;AACL,qBAAK2hB,mBAAL,CAAyBrW,MAAzB,CACE,IAAIrK,uBAAJ,CAAsB4iB,UAAUhjB,OAAhC,EAAyCgjB,UAAU3iB,IAAnD,CADF;AAjB8C;;AAqBhD,qBAAO,KAAKygB,mBAAL,CAAyBxW,OAAhC;AArBF;AAwBAkF,2BAAesP,EAAftP,CAAkB,YAAlBA,EAAgChN,QAAQ;AAGtCiS,0BAAYhE,UAAZgE,GAAyB;AACvBhD,wBAAQjP,KAAKxD,MADU;AAEvB0S,uBAAOlP,KAAKxD;AAFW,eAAzByV;AAKA,mBAAKJ,sBAAL,CAA4B7J,OAA5B,CAAoChI,IAApC;AARF;AAWAgN,2BAAesP,EAAftP,CAAkB,iBAAlBA,EAAqChN,QAAQ;AAC3C,kBAAI,KAAKmM,SAAT,EAAoB;AAClB;AAFyC;;AAK3C,oBAAM2S,OAAO,KAAKpB,UAAL,CAAgB7V,GAAhB,CAAoB7H,KAAKyS,SAAzB,CAAb;;AACAqM,mBAAKjF,gBAALiF,CAAsB9e,KAAKwX,YAA3BsH,EAAyC9e,KAAKwU,QAA9CsK;AANF;AASA9R,2BAAesP,EAAftP,CAAkB,WAAlBA,EAA+B,UAA8B;AAAA,kBAA7B,CAAC4D,EAAD,EAAKpI,IAAL,EAAWkY,YAAX,CAA6B;;AAC3D,kBAAI,KAAKvU,SAAT,EAAoB;AAClB;AAFyD;;AAK3D,kBAAI,KAAK8G,UAAL,CAAgB+I,GAAhB,CAAoBpL,EAApB,CAAJ,EAA6B;AAC3B;AANyD;;AAS3D,sBAAQpI,IAAR;AACE,qBAAK,MAAL;AACE,wBAAMsB,SAAS,KAAKoU,OAApB;;AAEA,sBAAI,WAAWwC,YAAf,EAA6B;AAC3B,0BAAMC,gBAAgBD,aAAa/J,KAAnC;AACAzb,oCAAM,8BAA6BylB,aAA9B,EAALzlB;AACA,yBAAK+X,UAAL,CAAgBjL,OAAhB,CAAwB4I,EAAxB,EAA4B+P,aAA5B;AACA;AAPJ;;AAUE,sBAAIC,eAAe,IAAnB;;AACA,sBAAI9W,OAAOc,MAAPd,IAAiBuB,WAAWwV,aAAXxV,EAA0ByV,OAA/C,EAAwD;AACtDF,mCAAe;AACbG,mCAAa1nB,IAAb0nB,EAAmB/kB,GAAnB+kB,EAAwB;AACtB1V,mCAAWwV,aAAXxV,CAAyB2V,SAAzB3V,CAAmChS,IAAnCgS,EAAyCrP,GAAzCqP;AAFW;;AAAA,qBAAfuV;AAZJ;;AAkBE,wBAAMvnB,OAAO,IAAI4nB,2BAAJ,CAAmBP,YAAnB,EAAiC;AAC5Czf,qCAAiB6I,OAAO7I,eADoB;AAE5CiK,qCAAiBpB,OAAOoB,eAFoB;AAG5CT,kCAAcX,OAAOW,YAHuB;AAI5CyD,0CAAsB,KAAK6P,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAJsB;AAK5C4C;AAL4C,mBAAjC,CAAb;AAQA,uBAAK/C,UAAL,CACGG,IADH,CACQ3kB,IADR,EAEGiU,KAFH,CAESpF,UAAU;AACf,2BAAO8E,eAAeS,eAAfT,CAA+B,cAA/BA,EAA+C;AAAE4D;AAAF,qBAA/C5D,CAAP;AAHJ,qBAKGkU,OALH,CAKW,MAAM;AACb,wBAAI,CAACpX,OAAOa,mBAAR,IAA+BtR,KAAK2G,IAAxC,EAA8C;AAM5C3G,2BAAK2G,IAAL3G,GAAY,IAAZA;AAPW;;AASb,yBAAK4Z,UAAL,CAAgBjL,OAAhB,CAAwB4I,EAAxB,EAA4BvX,IAA5B;AAdJ;AAgBA;;AACF,qBAAK,UAAL;AACA,qBAAK,OAAL;AACE,uBAAK4Z,UAAL,CAAgBjL,OAAhB,CAAwB4I,EAAxB,EAA4B8P,YAA5B;AACA;;AACF;AACE,wBAAM,IAAItlB,KAAJ,CAAW,kCAAiCoN,IAAlC,EAAV,CAAN;AAjDJ;AATF;AA8DAwE,2BAAesP,EAAftP,CAAkB,KAAlBA,EAAyB,UAAsC;AAAA,kBAArC,CAAC4D,EAAD,EAAK6B,SAAL,EAAgBjK,IAAhB,EAAsB2Y,SAAtB,CAAqC;;AAC7D,kBAAI,KAAKhV,SAAT,EAAoB;AAElB;AAH2D;;AAM7D,oBAAMiV,YAAY,KAAK1D,UAAL,CAAgB7V,GAAhB,CAAoB4K,SAApB,CAAlB;;AACA,kBAAI2O,UAAUlO,IAAVkO,CAAepF,GAAfoF,CAAmBxQ,EAAnBwQ,CAAJ,EAA4B;AAC1B;AAR2D;;AAW7D,sBAAQ5Y,IAAR;AACE,qBAAK,OAAL;AACE4Y,4BAAUlO,IAAVkO,CAAepZ,OAAfoZ,CAAuBxQ,EAAvBwQ,EAA2BD,SAA3BC;AAGA,wBAAMC,0BAA0B,OAAhC;;AACA,sBAAIF,WAAWnhB,IAAXmhB,EAAiB3kB,MAAjB2kB,GAA0BE,uBAA9B,EAAuD;AACrDD,8BAAUhO,kBAAVgO,GAA+B,IAA/BA;AANJ;;AAQE;;AACF,qBAAK,SAAL;AACEA,4BAAUlO,IAAVkO,CAAepZ,OAAfoZ,CAAuBxQ,EAAvBwQ,EAA2BD,SAA3BC;AACA;;AACF;AACE,wBAAM,IAAIhmB,KAAJ,CAAW,2BAA0BoN,IAA3B,EAAV,CAAN;AAdJ;AAXF;AA6BAwE,2BAAesP,EAAftP,CAAkB,aAAlBA,EAAiChN,QAAQ;AACvC,kBAAI,KAAKmM,SAAT,EAAoB;AAClB;AAFqC;;AAIvC8F,0BAAYhE,UAAZgE,GAAyB;AACvBhD,wBAAQjP,KAAKiP,MADU;AAEvBC,uBAAOlP,KAAKkP;AAFW,eAAzB+C;AAJF;AAUAjF,2BAAesP,EAAftP,CAAkB,UAAlBA,EAA8BhN,QAAQ;AACpC,kBAAI,KAAKmM,SAAT,EAAoB;AAClB;AAFkC;;AAMpC,mBAAKsR,SAAL,GAAiBxgB,OAAOqkB,MAAPrkB,CAAc;AAC7B8S,6BAAa9S,OAAOqkB,MAAPrkB,CAAc+C,KAAK+P,WAAnB9S,CADgB;AAE7B+S,2BAAW/S,OAAOqkB,MAAPrkB,CAAc+C,KAAKgQ,SAAnB/S;AAFkB,eAAdA,CAAjB;AANF;AAYA+P,2BAAesP,EAAftP,CACE,oBADFA,EAEE,KAAK+Q,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAFFhR;AAKAA,2BAAesP,EAAftP,CAAkB,kBAAlBA,EAAsChN,QAAQ;AAC5C,kBAAI,KAAKmM,SAAT,EAAoB;AAClB,uBAAOpE,QAAQE,MAARF,CAAe,IAAI3M,KAAJ,CAAU,uBAAV,CAAf2M,CAAP;AAF0C;;AAI5C,kBAAI,CAAC,KAAKwC,iBAAV,EAA6B;AAC3B,uBAAOxC,QAAQE,MAARF,CACL,IAAI3M,KAAJ,CACE,wEADF,CADK2M,CAAP;AAL0C;;AAW5C,qBAAO,KAAKwC,iBAAL,CAAuBgX,KAAvB,CAA6BvhB,IAA7B,CAAP;AAXF;AAcAgN,2BAAesP,EAAftP,CAAkB,uBAAlBA,EAA2ChN,QAAQ;AACjD,kBAAI,KAAKmM,SAAT,EAAoB;AAClB,uBAAOpE,QAAQE,MAARF,CAAe,IAAI3M,KAAJ,CAAU,uBAAV,CAAf2M,CAAP;AAF+C;;AAIjD,kBAAI,CAAC,KAAKyC,uBAAV,EAAmC;AACjC,uBAAOzC,QAAQE,MAARF,CACL,IAAI3M,KAAJ,CACE,8EADF,CADK2M,CAAP;AAL+C;;AAWjD,qBAAO,KAAKyC,uBAAL,CAA6B+W,KAA7B,CAAmCvhB,IAAnC,CAAP;AAXF;AA3ekB;;AA0fpB+d,wCAAqC;AAAA,gBAAf;AAAEyD;AAAF,aAAe;;AACnC,gBAAI,KAAKrV,SAAT,EAAoB;AAClB;AAFiC;;AAInC,iBAAK8F,WAAL,CAAiB/D,oBAAjB,GAAwCsT,SAAxC;AA9fkB;;AAigBpB7P,oBAAU;AACR,mBAAO,KAAK3E,cAAL,CAAoBS,eAApB,CAAoC,SAApC,EAA+C,IAA/C,CAAP;AAlgBkB;;AAqgBpB6C,kBAAQC,UAARD,EAAoB;AAClB,gBACE,CAAC3V,OAAOC,SAAPD,CAAiB4V,UAAjB5V,CAAD,IACA4V,cAAc,CADd,IAEAA,aAAa,KAAK+P,SAHpB,EAIE;AACA,qBAAOvY,QAAQE,MAARF,CAAe,IAAI3M,KAAJ,CAAU,uBAAV,CAAf2M,CAAP;AANgB;;AASlB,kBAAM0K,YAAYlC,aAAa,CAA/B;AAAA,kBACEkR,gBAAgB,KAAK9D,aAAL,CAAmB9V,GAAnB,CAAuB4K,SAAvB,CADlB;;AAEA,gBAAIgP,aAAJ,EAAmB;AACjB,qBAAOA,aAAP;AAZgB;;AAclB,kBAAM3Z,UAAU,KAAKkF,cAAL,CACbS,eADa,CACG,SADH,EACc;AAC1BgF;AAD0B,aADd,EAIbvG,IAJa,CAIRwG,YAAY;AAChB,kBAAI,KAAKvG,SAAT,EAAoB;AAClB,sBAAM,IAAI/Q,KAAJ,CAAU,qBAAV,CAAN;AAFc;;AAIhB,oBAAM0jB,OAAO,IAAItM,YAAJ,CACXC,SADW,EAEXC,QAFW,EAGX,IAHW,EAIX,KAAKwL,OAAL,CAAa9S,aAJF,EAKX,KAAK8S,OAAL,CAAatT,MALF,CAAb;AAOA,mBAAK8S,UAAL,CAAgBvd,GAAhB,CAAoBsS,SAApB,EAA+BqM,IAA/B;AACA,qBAAOA,IAAP;AAhBY,cAAhB;AAkBA,iBAAKnB,aAAL,CAAmBxd,GAAnB,CAAuBsS,SAAvB,EAAkC3K,OAAlC;AACA,mBAAOA,OAAP;AAtiBkB;;AAyiBpB0I,uBAAaC,GAAbD,EAAkB;AAChB,gBACE,OAAOC,GAAP,KAAe,QAAf,IACAA,QAAQ,IADR,IAEA,CAAC9V,OAAOC,SAAPD,CAAiB8V,IAAIiR,GAArB/mB,CAFD,IAGA8V,IAAIiR,GAAJjR,GAAU,CAHV,IAIA,CAAC9V,OAAOC,SAAPD,CAAiB8V,IAAIkR,GAArBhnB,CAJD,IAKA8V,IAAIkR,GAAJlR,GAAU,CANZ,EAOE;AACA,qBAAO1I,QAAQE,MAARF,CAAe,IAAI3M,KAAJ,CAAU,4BAAV,CAAf2M,CAAP;AATc;;AAWhB,mBAAO,KAAKiF,cAAL,CAAoBS,eAApB,CAAoC,cAApC,EAAoD;AACzDiU,mBAAKjR,IAAIiR,GADgD;AAEzDC,mBAAKlR,IAAIkR;AAFgD,aAApD,CAAP;AApjBkB;;AA0jBpBvN,yBAAe3B,SAAf2B,EAA0BC,MAA1BD,EAAkC;AAChC,mBAAO,KAAKpH,cAAL,CAAoBS,eAApB,CAAoC,gBAApC,EAAsD;AAC3DgF,uBAD2D;AAE3D4B;AAF2D,aAAtD,CAAP;AA3jBkB;;AAikBpBlC,yBAAe;AACb,mBAAO,KAAKnF,cAAL,CACJS,eADI,CACY,cADZ,EAC4B;AAC/B0C,yBAAW,CAAC,CAAC,KAAKC,WADa;AAE/BF,wBAAU,KAAKoQ,SAFgB;AAG/BrQ,iCAAmB,KAAKA,iBAAL,CAAuB+J,YAHX;AAI/B4H,wBAAU,KAAKpD,WAAL,EAAkBoD,QAAlB,IAA8B;AAJT,aAD5B,EAOJV,OAPI,CAOI,MAAM;AACb,mBAAKjR,iBAAL,CAAuB+O,aAAvB;AARG,cAAP;AAlkBkB;;AA8kBpB3M,4BAAkB;AAChB,mBAAQ,KAAK6M,uBAAL,KACN,KAAKlS,cAAL,CAAoBS,eAApB,CAAoC,iBAApC,EAAuD,IAAvD,CADF;AA/kBkB;;AAmlBpB6E,yBAAe;AACb,mBAAQ,KAAK6M,oBAAL,KAA8B,KAAKnS,cAAL,CAAoBS,eAApB,CACpC,cADoC,EAEpC,IAFoC,CAAtC;AAplBkB;;AA0lBpB8E,mCAAyB;AACvB,mBAAO,KAAKvF,cAAL,CAAoBS,eAApB,CAAoC,wBAApC,EAA8D,IAA9D,CAAP;AA3lBkB;;AA8lBpBiD,4BAAkB;AAChB,mBAAO,KAAK1D,cAAL,CAAoBS,eAApB,CAAoC,iBAApC,EAAuD,IAAvD,CAAP;AA/lBkB;;AAkmBpBkD,yBAAeC,EAAfD,EAAmB;AACjB,gBAAI,OAAOC,EAAP,KAAc,QAAlB,EAA4B;AAC1B,qBAAO7I,QAAQE,MAARF,CAAe,IAAI3M,KAAJ,CAAU,8BAAV,CAAf2M,CAAP;AAFe;;AAIjB,mBAAO,KAAKiF,cAAL,CAAoBS,eAApB,CAAoC,gBAApC,EAAsD;AAC3DmD;AAD2D,aAAtD,CAAP;AAtmBkB;;AA2mBpBC,0BAAgB;AACd,mBAAO,KAAK7D,cAAL,CAAoBS,eAApB,CAAoC,eAApC,EAAqD,IAArD,CAAP;AA5mBkB;;AA+mBpBqD,0BAAgB;AACd,mBAAO,KAAK9D,cAAL,CAAoBS,eAApB,CAAoC,eAApC,EAAqD,IAArD,CAAP;AAhnBkB;;AAmnBpBsD,wBAAc;AACZ,mBAAO,KAAK/D,cAAL,CAAoBS,eAApB,CAAoC,aAApC,EAAmD,IAAnD,CAAP;AApnBkB;;AAunBpBuD,iCAAuB;AACrB,mBAAO,KAAKhE,cAAL,CAAoBS,eAApB,CAAoC,sBAApC,EAA4D,IAA5D,CAAP;AAxnBkB;;AA2nBpBwD,0BAAgB;AACd,mBAAO,KAAKjE,cAAL,CAAoBS,eAApB,CAAoC,eAApC,EAAqD,IAArD,CAAP;AA5nBkB;;AA+nBpByD,2BAAiB;AACf,mBAAO,KAAKlE,cAAL,CAAoBS,eAApB,CAAoC,gBAApC,EAAsD,IAAtD,CAAP;AAhoBkB;;AAmoBpB0D,0BAAgB;AACd,mBAAO,KAAKnE,cAAL,CAAoBS,eAApB,CAAoC,eAApC,EAAqD,IAArD,CAAP;AApoBkB;;AAuoBpB4D,4BAAkB;AAChB,mBAAO,KAAKrE,cAAL,CAAoBS,eAApB,CAAoC,iBAApC,EAAuD,IAAvD,CAAP;AAxoBkB;;AA2oBpBsH,2BAAiBtC,SAAjBsC,EAA4B;AAC1B,mBAAO,KAAK/H,cAAL,CAAoBS,eAApB,CAAoC,kBAApC,EAAwD;AAC7DgF;AAD6D,aAAxD,CAAP;AA5oBkB;;AAipBpB0G,wBAAc1G,SAAd0G,EAAyB;AACvB,mBAAO,KAAKnM,cAAL,CAAoBS,eAApB,CAAoC,eAApC,EAAqD;AAC1DgF;AAD0D,aAArD,CAAP;AAlpBkB;;AAupBpBnB,uBAAa;AACX,mBAAO,KAAKtE,cAAL,CAAoBS,eAApB,CAAoC,YAApC,EAAkD,IAAlD,CAAP;AAxpBkB;;AA2pBpB8D,qCAA2B;AACzB,mBAAO,KAAKvE,cAAL,CACJS,eADI,CACY,0BADZ,EACwC,IADxC,EAEJvB,IAFI,CAEC2V,WAAW;AACf,qBAAO,IAAIC,8CAAJ,CAA0BD,OAA1B,CAAP;AAHG,cAAP;AA5pBkB;;AAmqBpBrQ,2BAAiB;AACf,mBAAO,KAAKxE,cAAL,CAAoBS,eAApB,CAAoC,gBAApC,EAAsD,IAAtD,CAAP;AApqBkB;;AAuqBpBgE,wBAAc;AACZ,mBAAQ,KAAKmM,gBAAL,KAA0B,KAAK5Q,cAAL,CAC/BS,eAD+B,CACf,aADe,EACA,IADA,EAE/BvB,IAF+B,CAE1B2V,WAAW;AACf,qBAAO;AACL/mB,sBAAM+mB,QAAQ,CAARA,CADD;AAELE,0BAAUF,QAAQ,CAARA,IAAa,IAAIG,kBAAJ,CAAaH,QAAQ,CAARA,CAAb,CAAbA,GAAwC,IAF7C;AAGLlV,4CAA4B,KAAK6R,WAAL,EAAkBoD,QAAlB,IAA8B,IAHrD;AAILzB,+BAAe,KAAK3B,WAAL,EAAkB2B,aAAlB,IAAmC;AAJ7C,eAAP;AAH8B,cAAlC;AAxqBkB;;AAorBpBzO,wBAAc;AACZ,mBAAO,KAAK1E,cAAL,CAAoBS,eAApB,CAAoC,aAApC,EAAmD,IAAnD,CAAP;AArrBkB;;AAwrBpB,gBAAMuE,YAAN,GAA4C;AAAA,gBAAzBD,eAAyB,uEAAP,KAAO;AAC1C,kBAAM,KAAK/E,cAAL,CAAoBS,eAApB,CAAoC,SAApC,EAA+C,IAA/C,CAAN;;AAEA,gBAAI,KAAKtB,SAAT,EAAoB;AAClB;AAJwC;;AAM1C,uBAAW2S,IAAX,IAAmB,KAAKpB,UAAL,CAAgBnE,MAAhB,EAAnB,EAA6C;AAC3C,oBAAM0I,oBAAoBnD,KAAKhN,OAALgN,EAA1B;;AAEA,kBAAI,CAACmD,iBAAL,EAAwB;AACtB,sBAAM,IAAI7mB,KAAJ,CACH,sBAAqB0jB,KAAKvO,UAAW,0BADlC,CAAN;AAJyC;AANH;;AAe1C,iBAAK0C,UAAL,CAAgB0G,KAAhB;;AACA,gBAAI,CAAC5H,eAAL,EAAsB;AACpB,mBAAK8L,UAAL,CAAgBlE,KAAhB;AAjBwC;;AAmB1C,iBAAKiE,gBAAL,GAAwB,IAAxB;AACA,iBAAKsB,uBAAL,GAA+B,IAA/B;AACA,iBAAKC,oBAAL,GAA4B,IAA5B;AA7sBkB;;AAgtBpB,cAAIjN,aAAJ,GAAoB;AAClB,kBAAMpI,SAAS,KAAKoU,OAApB;AACA,mBAAOrhB,kBAAO,IAAPA,EAAa,eAAbA,EAA8B;AACnC4O,gCAAkB3B,OAAO2B,gBADU;AAEnCZ,yBAAWf,OAAOe;AAFiB,aAA9BhO,CAAP;AAltBkB;;AAAA;;AA8tBtB,cAAMsW,UAAN,CAAiB;AACfD,kBAAQjW,OAAOwD,MAAPxD,CAAc,IAAdA,CAARiW;;AAQAgP,qBAAWC,KAAXD,EAAkB;AAChB,kBAAMplB,MAAM,KAAKoW,KAAL,CAAWiP,KAAX,CAAZ;;AACA,gBAAIrlB,GAAJ,EAAS;AACP,qBAAOA,GAAP;AAHc;;AAKhB,mBAAQ,KAAKoW,KAAL,CAAWiP,KAAX,IAAoB;AAC1Bxa,0BAAYD,oCADc;AAE1B1H,oBAAM;AAFoB,aAA5B;AAda;;AAgCf6H,cAAIsa,KAAJta,EAA4B;AAAA,gBAAjBsP,QAAiB,uEAAN,IAAM;;AAG1B,gBAAIA,QAAJ,EAAc;AACZ,oBAAMra,MAAM,KAAKolB,UAAL,CAAgBC,KAAhB,CAAZ;AACArlB,kBAAI6K,UAAJ7K,CAAegL,OAAfhL,CAAuBoP,IAAvBpP,CAA4B,MAAMqa,SAASra,IAAIkD,IAAbmX,CAAlCra;AACA,qBAAO,IAAP;AANwB;;AAU1B,kBAAMA,MAAM,KAAKoW,KAAL,CAAWiP,KAAX,CAAZ;;AAGA,gBAAI,CAACrlB,KAAK6K,UAAL7K,CAAgBslB,OAArB,EAA8B;AAC5B,oBAAM,IAAIhnB,KAAJ,CAAW,6CAA4C+mB,KAAM,GAA7D,CAAN;AAdwB;;AAgB1B,mBAAOrlB,IAAIkD,IAAX;AAhDa;;AAuDfgc,cAAImG,KAAJnG,EAAW;AACT,kBAAMlf,MAAM,KAAKoW,KAAL,CAAWiP,KAAX,CAAZ;AACA,mBAAOrlB,KAAK6K,UAAL7K,CAAgBslB,OAAhBtlB,IAA2B,KAAlC;AAzDa;;AAkEfkL,kBAAQma,KAARna,EAA4B;AAAA,gBAAbhI,IAAa,uEAAN,IAAM;AAC1B,kBAAMlD,MAAM,KAAKolB,UAAL,CAAgBC,KAAhB,CAAZ;AACArlB,gBAAIkD,IAAJlD,GAAWkD,IAAXlD;AACAA,gBAAI6K,UAAJ7K,CAAekL,OAAflL;AArEa;;AAwEf6c,kBAAQ;AACN,iBAAKzG,KAAL,GAAajW,OAAOwD,MAAPxD,CAAc,IAAdA,CAAb;AAzEa;;AAAA;;AAgFjB,cAAMolB,UAAN,CAAiB;AACf3kB,sBAAYoZ,kBAAZpZ,EAAgC;AAC9B,iBAAK4kB,mBAAL,GAA2BxL,kBAA3B;AAQA,iBAAKyL,UAAL,GAAkB,IAAlB;AAVa;;AAiBf,cAAIza,OAAJ,GAAc;AACZ,mBAAO,KAAKwa,mBAAL,CAAyB3a,UAAzB,CAAoCG,OAA3C;AAlBa;;AA0Bf4R,mBAAS;AACP,iBAAK4I,mBAAL,CAAyB5I,MAAzB;AA3Ba;;AAAA;;;;AAmCjB,cAAMxC,kBAAN,CAAyB;AACvB,qBAAWsL,WAAX,GAAyB;AACvB,mBAAO3lB,kBAAO,IAAPA,EAAa,aAAbA,EAA4B,IAAI4lB,OAAJ,EAA5B5lB,CAAP;AAFqB;;AAKvBa,8BAWG;AAAA,gBAXS;AACVyZ,sBADU;AAEVrN,oBAFU;AAGVoJ,kBAHU;AAIVD,wBAJU;AAKVyC,iCALU;AAMVW,0BANU;AAOV5D,uBAPU;AAQV8C,2BARU;AASV6B,yCAA2B,KATjB;AAUVxM,uBAAS;AAVC,aAWT;AACD,iBAAKuM,QAAL,GAAgBA,QAAhB;AACA,iBAAKrN,MAAL,GAAcA,MAAd;AACA,iBAAKoJ,IAAL,GAAYA,IAAZ;AACA,iBAAKD,UAAL,GAAkBA,UAAlB;AACA,iBAAKyC,mBAAL,GAA2BA,mBAA3B;AACA,iBAAKgN,eAAL,GAAuB,IAAvB;AACA,iBAAKrM,YAAL,GAAoBA,YAApB;AACA,iBAAK1D,UAAL,GAAkBF,SAAlB;AACA,iBAAK8C,aAAL,GAAqBA,aAArB;AACA,iBAAKvC,OAAL,GAAepI,MAAf;AAEA,iBAAK+X,OAAL,GAAe,KAAf;AACA,iBAAKC,qBAAL,GAA6B,IAA7B;AACA,iBAAKC,aAAL,GAAqB,KAArB;AACA,iBAAKC,yBAAL,GACE1L,6BAA6B,IAA7BA,IAAqC,OAAOnN,MAAP,KAAkB,WADzD;AAEA,iBAAK8Y,SAAL,GAAiB,KAAjB;AACA,iBAAKpb,UAAL,GAAkBD,oCAAlB;AACA,iBAAK+B,IAAL,GAAY,IAAI4Y,UAAJ,CAAe,IAAf,CAAZ;AAEA,iBAAKW,YAAL,GAAoB,KAAKtJ,MAAL,CAAYsE,IAAZ,CAAiB,IAAjB,CAApB;AACA,iBAAKiF,cAAL,GAAsB,KAAKC,SAAL,CAAelF,IAAf,CAAoB,IAApB,CAAtB;AACA,iBAAKmF,kBAAL,GAA0B,KAAKC,aAAL,CAAmBpF,IAAnB,CAAwB,IAAxB,CAA1B;AACA,iBAAKqF,UAAL,GAAkB,KAAKC,KAAL,CAAWtF,IAAX,CAAgB,IAAhB,CAAlB;AACA,iBAAKuF,OAAL,GAAezZ,OAAOqL,aAAPrL,CAAqB0Z,MAApC;AAzCqB;;AA4CvB,cAAI/J,SAAJ,GAAgB;AACd,mBAAO,KAAK9R,UAAL,CAAgBG,OAAhB,CAAwBwF,KAAxB,CAA8B,YAAY,CAA1C,EAAP;AA7CqB;;AAmDvBoK,qCAAoE;AAAA,gBAAjD;AAAEF,6BAAe,KAAjB;AAAwBC;AAAxB,aAAiD;;AAClE,gBAAI,KAAKsL,SAAT,EAAoB;AAClB;AAFgE;;AAIlE,gBAAI,KAAKQ,OAAT,EAAkB;AAChB,kBAAIrM,mBAAmBsL,WAAnBtL,CAA+B8E,GAA/B9E,CAAmC,KAAKqM,OAAxCrM,CAAJ,EAAsD;AACpD,sBAAM,IAAI9b,KAAJ,CACJ,qEACE,0DADF,GAEE,yBAHE,CAAN;AAFc;;AAQhB8b,iCAAmBsL,WAAnBtL,CAA+BI,GAA/BJ,CAAmC,KAAKqM,OAAxCrM;AAZgE;;AAelE,gBAAI,KAAKlE,OAAL,IAAgB3H,WAAWoY,cAAXpY,EAA2ByV,OAA/C,EAAwD;AACtD,mBAAK4C,OAAL,GAAerY,WAAWoY,cAAXpY,CAA0B5K,MAA1B4K,CAAiC,KAAKsH,UAAtCtH,CAAf;AACA,mBAAKqY,OAAL,CAAaC,IAAb,CAAkB,KAAKtN,YAAvB;AACA,mBAAKqN,OAAL,CAAaE,cAAb,GAA8B,KAAKF,OAAL,CAAaG,iBAAb,EAA9B;AAlBgE;;AAoBlE,kBAAM;AAAE1O,2BAAF;AAAiBC,sBAAjB;AAA2BthB,uBAA3B;AAAsCwhB,wBAAtC;AAAkDE;AAAlD,gBACJ,KAAK1L,MADP;AAGA,iBAAKga,GAAL,GAAW,IAAIC,sBAAJ,CACT5O,aADS,EAET,KAAKlC,UAFI,EAGT,KAAKC,IAHI,EAIT,KAAKqC,aAJI,EAKTD,UALS,EAMTmC,qBANS,EAOT,KAAK/B,mBAPI,CAAX;AASA,iBAAKoO,GAAL,CAASE,YAAT,CAAsB;AACpBlwB,uBADoB;AAEpBshB,sBAFoB;AAGpBoC,0BAHoB;AAIpBhC;AAJoB,aAAtB;AAMA,iBAAKkN,eAAL,GAAuB,CAAvB;AACA,iBAAKG,aAAL,GAAqB,IAArB;;AACA,gBAAI,KAAKD,qBAAT,EAAgC;AAC9B,mBAAKA,qBAAL;AAzCgE;AAnD7C;;AAgGvBlJ,mBAAqB;AAAA,gBAAd/C,KAAc,uEAAN,IAAM;AACnB,iBAAKgM,OAAL,GAAe,KAAf;AACA,iBAAKI,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKe,GAAT,EAAc;AACZ,mBAAKA,GAAL,CAASG,UAAT;AAJiB;;AAMnB,gBAAI,KAAKV,OAAT,EAAkB;AAChBrM,iCAAmBsL,WAAnBtL,CAA+BL,MAA/BK,CAAsC,KAAKqM,OAA3CrM;AAPiB;;AASnB,iBAAKC,QAAL,CACER,SACE,IAAIuD,0CAAJ,CACG,6BAA4B,KAAKvH,UAAL,GAAkB,CAA/C,EADF,EAEE,QAFF,CAFJ;AAzGqB;;AAkHvBgF,gCAAsB;AACpB,gBAAI,CAAC,KAAKkL,aAAV,EAAyB;AACvB,kBAAI,CAAC,KAAKD,qBAAV,EAAiC;AAC/B,qBAAKA,qBAAL,GAA6B,KAAKK,cAAlC;AAFqB;;AAIvB;AALkB;;AAQpB,gBAAI,KAAKS,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaQ,kBAAb,CAAgC,KAAK7N,YAArC;AATkB;;AAYpB,gBAAI,KAAKsM,OAAT,EAAkB;AAChB;AAbkB;;AAepB,iBAAKO,SAAL;AAjIqB;;AAoIvBA,sBAAY;AACV,iBAAKP,OAAL,GAAe,IAAf;;AACA,gBAAI,KAAKI,SAAT,EAAoB;AAClB;AAHQ;;AAKV,gBAAI,KAAKtZ,IAAL,CAAU8Y,UAAd,EAA0B;AACxB,mBAAK9Y,IAAL,CAAU8Y,UAAV,CAAqB,KAAKY,kBAA1B;AADF,mBAEO;AACL,mBAAKC,aAAL;AARQ;AApIW;;AAgJvBA,0BAAgB;AACd,gBAAI,KAAKN,yBAAT,EAAoC;AAClC7Y,qBAAOka,qBAAPla,CAA6B,MAAM;AACjC,qBAAKoZ,UAAL,GAAkB/V,KAAlB,CAAwB,KAAK0V,YAA7B;AADF;AADF,mBAIO;AACLjb,sBAAQC,OAARD,GAAkBmE,IAAlBnE,CAAuB,KAAKsb,UAA5Btb,EAAwCuF,KAAxCvF,CAA8C,KAAKib,YAAnDjb;AANY;AAhJO;;AA0JvB,gBAAMub,KAAN,GAAc;AACZ,gBAAI,KAAKP,SAAT,EAAoB;AAClB;AAFU;;AAIZ,iBAAKL,eAAL,GAAuB,KAAKoB,GAAL,CAASM,mBAAT,CACrB,KAAK/N,YADgB,EAErB,KAAKqM,eAFgB,EAGrB,KAAKO,cAHgB,EAIrB,KAAKS,OAJgB,CAAvB;;AAMA,gBAAI,KAAKhB,eAAL,KAAyB,KAAKrM,YAAL,CAAkBE,SAAlB,CAA4B/Z,MAAzD,EAAiE;AAC/D,mBAAKmmB,OAAL,GAAe,KAAf;;AACA,kBAAI,KAAKtM,YAAL,CAAkBG,SAAtB,EAAiC;AAC/B,qBAAKsN,GAAL,CAASG,UAAT;;AACA,oBAAI,KAAKV,OAAT,EAAkB;AAChBrM,qCAAmBsL,WAAnBtL,CAA+BL,MAA/BK,CAAsC,KAAKqM,OAA3CrM;AAH6B;;AAK/B,qBAAKC,QAAL;AAP6D;AAVrD;AA1JS;;AAAA;;AAkLzB,cAAMkN,UAC8B,UADpC;;AAGA,cAAMC,QAC8B,WADpC;;;;;;;;;;;;;;;;;;;;;AC9wGA;;AAMA;;AAEA,cAAMC,SAAS,4BAAf;;AAEA,cAAMC,aAAN,CAAoB;AAClB,iBAAOC,GAAP,GAAa,IAAb;AAEA,iBAAOC,GAAP,GAAa,IAAb;AAEA,iBAAOC,gBAAP,GAA0B,KAAKF,GAAL,GAAW,KAAKC,GAA1C;AALkB;;;;AAQpB,cAAM7b,gBAAN,SAA+B+b,+BAA/B,CAAiD;AAC/ClnB,wBAA0D;AAAA,gBAA9C;AAAE0N,8BAAgBC,WAAWC;AAA7B,aAA8C,uEAAJ,EAAI;AACxD;AACA,iBAAKuZ,SAAL,GAAiBzZ,aAAjB;AAH6C;;AAM/C0Z,wBAAcC,KAAdD,EAAqBE,MAArBF,EAA6B;AAC3B,kBAAMtB,SAAS,KAAKqB,SAAL,CAAeI,aAAf,CAA6B,QAA7B,CAAf;;AACAzB,mBAAOuB,KAAPvB,GAAeuB,KAAfvB;AACAA,mBAAOwB,MAAPxB,GAAgBwB,MAAhBxB;AACA,mBAAOA,MAAP;AAV6C;;AAAA;;;;AAcjD,uBAAe0B,SAAf,CAAyBlpB,GAAzB,EAAoD;AAAA,cAAtBmpB,YAAsB,uEAAP,KAAO;;AAClD,cAEEC,gBAAgBppB,GAAhBopB,EAAqB9Z,SAAS+Z,OAA9BD,CAFF,EAGE;AACA,kBAAME,WAAW,MAAM/D,MAAMvlB,GAANulB,CAAvB;;AACA,gBAAI,CAAC+D,SAASC,EAAd,EAAkB;AAChB,oBAAM,IAAInqB,KAAJ,CAAUkqB,SAASE,UAAnB,CAAN;AAHF;;AAKA,mBAAOL,eACH,IAAI3lB,UAAJ,CAAe,MAAM8lB,SAASG,WAATH,EAArB,CADGH,GAEH7lB,yBAAc,MAAMgmB,SAASI,IAATJ,EAApBhmB,CAFJ;AATgD;;AAelD,iBAAO,IAAIyI,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAM0d,UAAU,IAAIC,cAAJ,EAAhB;AACAD,oBAAQE,IAARF,CAAa,KAAbA,EAAoB3pB,GAApB2pB,EAA8C,IAA9CA;;AAEA,gBAAIR,YAAJ,EAAkB;AAChBQ,sBAAQG,YAARH,GAAuB,aAAvBA;AALoC;;AAOtCA,oBAAQI,kBAARJ,GAA6B,MAAM;AACjC,kBAAIA,QAAQK,UAARL,KAAuBC,eAAeK,IAA1C,EAAgD;AAC9C;AAF+B;;AAIjC,kBAAIN,QAAQxnB,MAARwnB,KAAmB,GAAnBA,IAA0BA,QAAQxnB,MAARwnB,KAAmB,CAAjD,EAAoD;AAClD,oBAAI3lB,IAAJ;;AACA,oBAAImlB,gBAAgBQ,QAAQL,QAA5B,EAAsC;AACpCtlB,yBAAO,IAAIR,UAAJ,CAAemmB,QAAQL,QAAvB,CAAPtlB;AADF,uBAEO,IAAI,CAACmlB,YAAD,IAAiBQ,QAAQO,YAA7B,EAA2C;AAChDlmB,yBAAOV,yBAAcqmB,QAAQO,YAAtB5mB,CAAPU;AALgD;;AAOlD,oBAAIA,IAAJ,EAAU;AACRgI,0BAAQhI,IAARgI;AACA;AATgD;AAJnB;;AAgBjCC,qBAAO,IAAI7M,KAAJ,CAAUuqB,QAAQH,UAAlB,CAAPvd;AAhBF;;AAmBA0d,oBAAQtY,IAARsY,CAAa,IAAbA;AA1BK,YAAP;AA9DF;;AA4FA,cAAM3c,oBAAN,SAAmCmd,mCAAnC,CAAyD;AACvDC,qBAAWpqB,GAAXoqB,EAAgBC,eAAhBD,EAAiC;AAC/B,mBAAOlB,UAAUlpB,GAAVkpB,EAAoC,KAAK/G,YAAzC+G,EAAuDhZ,IAAvDgZ,CAA4DllB,QAAQ;AACzE,qBAAO;AAAEsmB,0BAAUtmB,IAAZ;AAAkBqmB;AAAlB,eAAP;AADK,cAAP;AAFqD;;AAAA;;;;AAQzD,cAAMld,0BAAN,SAAyCod,yCAAzC,CAAqE;AACnEH,qBAAWpqB,GAAXoqB,EAAgB;AACd,mBAAOlB,UAAUlpB,GAAVkpB,EAAoC,IAApCA,CAAP;AAFiE;;AAAA;;;;AAMrE,cAAMsB,aAAN,SAA4BC,4BAA5B,CAA2C;AACzCC,qBAAWle,IAAXke,EAAiB;AACf,mBAAOpb,SAASqb,eAATrb,CAAyBiZ,MAAzBjZ,EAAiC9C,IAAjC8C,CAAP;AAFuC;;AAAA;;;;AAqC3C,cAAM4I,YAAN,CAAmB;AAIjBxW,8BAOG;AAAA,gBAPS;AACVyW,qBADU;AAEVN,mBAFU;AAGVC,sBAHU;AAIVC,wBAAU,CAJA;AAKVC,wBAAU,CALA;AAMVC,yBAAW;AAND,aAOT;AACD,iBAAKE,OAAL,GAAeA,OAAf;AACA,iBAAKN,KAAL,GAAaA,KAAb;AACA,iBAAKC,QAAL,GAAgBA,QAAhB;AACA,iBAAKC,OAAL,GAAeA,OAAf;AACA,iBAAKC,OAAL,GAAeA,OAAf;AAIA,kBAAM4S,UAAW,SAAQ,CAAR,IAAazS,QAAQ,CAARA,CAAb,IAA2B,CAA5C;AACA,kBAAM0S,UAAW,SAAQ,CAAR,IAAa1S,QAAQ,CAARA,CAAb,IAA2B,CAA5C;AACA,gBAAI2S,OAAJ,EAAaC,OAAb,EAAsBC,OAAtB,EAA+BC,OAA/B;AAEAnT,wBAAY,GAAZA;;AACA,gBAAIA,WAAW,CAAf,EAAkB;AAChBA,0BAAY,GAAZA;AAfD;;AAiBD,oBAAQA,QAAR;AACE,mBAAK,GAAL;AACEgT,0BAAU,CAAC,CAAXA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACA;;AACF,mBAAK,EAAL;AACEH,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACA;;AACF,mBAAK,GAAL;AACEH,0BAAU,CAAVA;AACAC,0BAAU,CAAC,CAAXA;AACAC,0BAAU,CAAC,CAAXA;AACAC,0BAAU,CAAVA;AACA;;AACF,mBAAK,CAAL;AACEH,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAVA;AACAC,0BAAU,CAAC,CAAXA;AACA;;AACF;AACE,sBAAM,IAAI7rB,KAAJ,CACJ,mEADI,CAAN;AA1BJ;;AA+BA,gBAAI6Y,QAAJ,EAAc;AACZ+S,wBAAU,CAACA,OAAXA;AACAC,wBAAU,CAACA,OAAXA;AAlDD;;AAqDD,gBAAIC,aAAJ,EAAmBC,aAAnB;AACA,gBAAIpC,KAAJ,EAAWC,MAAX;;AACA,gBAAI8B,YAAY,CAAhB,EAAmB;AACjBI,8BAAgBloB,KAAKoG,GAALpG,CAAS6nB,UAAU1S,QAAQ,CAARA,CAAnBnV,IAAiC6U,KAAjC7U,GAAyC+U,OAAzDmT;AACAC,8BAAgBnoB,KAAKoG,GAALpG,CAAS4nB,UAAUzS,QAAQ,CAARA,CAAnBnV,IAAiC6U,KAAjC7U,GAAyCgV,OAAzDmT;AACApC,sBAAQ/lB,KAAKoG,GAALpG,CAASmV,QAAQ,CAARA,IAAaA,QAAQ,CAARA,CAAtBnV,IAAoC6U,KAA5CkR;AACAC,uBAAShmB,KAAKoG,GAALpG,CAASmV,QAAQ,CAARA,IAAaA,QAAQ,CAARA,CAAtBnV,IAAoC6U,KAA7CmR;AAJF,mBAKO;AACLkC,8BAAgBloB,KAAKoG,GAALpG,CAAS4nB,UAAUzS,QAAQ,CAARA,CAAnBnV,IAAiC6U,KAAjC7U,GAAyC+U,OAAzDmT;AACAC,8BAAgBnoB,KAAKoG,GAALpG,CAAS6nB,UAAU1S,QAAQ,CAARA,CAAnBnV,IAAiC6U,KAAjC7U,GAAyCgV,OAAzDmT;AACApC,sBAAQ/lB,KAAKoG,GAALpG,CAASmV,QAAQ,CAARA,IAAaA,QAAQ,CAARA,CAAtBnV,IAAoC6U,KAA5CkR;AACAC,uBAAShmB,KAAKoG,GAALpG,CAASmV,QAAQ,CAARA,IAAaA,QAAQ,CAARA,CAAtBnV,IAAoC6U,KAA7CmR;AAhED;;AAqED,iBAAKlxB,SAAL,GAAiB,CACfgzB,UAAUjT,KADK,EAEfkT,UAAUlT,KAFK,EAGfmT,UAAUnT,KAHK,EAIfoT,UAAUpT,KAJK,EAKfqT,gBAAgBJ,UAAUjT,KAAViT,GAAkBF,OAAlCM,GAA4CF,UAAUnT,KAAVmT,GAAkBH,OAL/C,EAMfM,gBAAgBJ,UAAUlT,KAAVkT,GAAkBH,OAAlCO,GAA4CF,UAAUpT,KAAVoT,GAAkBJ,OAN/C,CAAjB;AASA,iBAAK9B,KAAL,GAAaA,KAAb;AACA,iBAAKC,MAAL,GAAcA,MAAd;AA1Fe;;AAkGjBoC,kBAMQ;AAAA,gBANF;AACJvT,sBAAQ,KAAKA,KADT;AAEJC,yBAAW,KAAKA,QAFZ;AAGJC,wBAAU,KAAKA,OAHX;AAIJC,wBAAU,KAAKA,OAJX;AAKJC,yBAAW;AALP,aAME,uEAAJ,EAAI;AACN,mBAAO,IAAIC,YAAJ,CAAiB;AACtBC,uBAAS,KAAKA,OAAL,CAAazR,KAAb,EADa;AAEtBmR,mBAFsB;AAGtBC,sBAHsB;AAItBC,qBAJsB;AAKtBC,qBALsB;AAMtBC;AANsB,aAAjB,CAAP;AAzGe;;AA6HjBoT,iCAAuBC,CAAvBD,EAA0BE,CAA1BF,EAA6B;AAC3B,mBAAO5lB,WAAKO,cAALP,CAAoB,CAAC6lB,CAAD,EAAIC,CAAJ,CAApB9lB,EAA4B,KAAK3N,SAAjC2N,CAAP;AA9He;;AAwIjB+lB,qCAA2B7jB,IAA3B6jB,EAAiC;AAC/B,kBAAMC,UAAUhmB,WAAKO,cAALP,CAAoB,CAACkC,KAAK,CAALA,CAAD,EAAUA,KAAK,CAALA,CAAV,CAApBlC,EAAwC,KAAK3N,SAA7C2N,CAAhB;;AACA,kBAAMimB,cAAcjmB,WAAKO,cAALP,CAAoB,CAACkC,KAAK,CAALA,CAAD,EAAUA,KAAK,CAALA,CAAV,CAApBlC,EAAwC,KAAK3N,SAA7C2N,CAApB;;AACA,mBAAO,CAACgmB,QAAQ,CAARA,CAAD,EAAaA,QAAQ,CAARA,CAAb,EAAyBC,YAAY,CAAZA,CAAzB,EAAyCA,YAAY,CAAZA,CAAzC,CAAP;AA3Ie;;AAuJjBC,4BAAkBL,CAAlBK,EAAqBJ,CAArBI,EAAwB;AACtB,mBAAOlmB,WAAKY,qBAALZ,CAA2B,CAAC6lB,CAAD,EAAIC,CAAJ,CAA3B9lB,EAAmC,KAAK3N,SAAxC2N,CAAP;AAxJe;;AAAA;;;;AA4JnB,cAAMyY,2BAAN,SAA0C5c,mBAA1C,CAAwD;AACtDI,sBAAY3C,GAAZ2C,EAAiB8K,IAAjB9K,EAAuB;AACrB,kBAAM3C,GAAN,EAAW,6BAAX;AACA,iBAAKyN,IAAL,GAAYA,IAAZ;AAHoD;;AAAA;;;;AAOxD,iBAASuC,YAAT,CAAsB/O,GAAtB,EAA2B;AACzB,gBAAM+J,KAAK/J,IAAIQ,MAAf;AACA,cAAIsC,IAAI,CAAR;;AACA,iBAAOA,IAAIiH,EAAJjH,IAAU9C,IAAI8C,CAAJ9C,EAAO4rB,IAAP5rB,OAAkB,EAAnC,EAAuC;AACrC8C;AAJuB;;AAMzB,iBAAO9C,IAAI6rB,SAAJ7rB,CAAc8C,CAAd9C,EAAiB8C,IAAI,CAArB9C,EAAwB8rB,WAAxB9rB,OAA0C,OAAjD;AAxTF;;AA2TA,iBAAS+rB,SAAT,CAAmBnG,QAAnB,EAA6B;AAC3B,iBAAO,OAAOA,QAAP,KAAoB,QAApB,IAAgC,UAAUxb,IAAV,CAAewb,QAAf,CAAvC;AA5TF;;AAoUA,iBAASoG,kBAAT,CAA4BhsB,GAA5B,EAAiC;AAC/B,gBAAMisB,SAASjsB,IAAIgf,OAAJhf,CAAY,GAAZA,CAAf;AACA,gBAAMksB,QAAQlsB,IAAIgf,OAAJhf,CAAY,GAAZA,CAAd;AACA,gBAAMuT,MAAMvQ,KAAKC,GAALD,CACVipB,SAAS,CAATA,GAAaA,MAAbA,GAAsBjsB,IAAIQ,MADhBwC,EAEVkpB,QAAQ,CAARA,GAAYA,KAAZA,GAAoBlsB,IAAIQ,MAFdwC,CAAZ;AAIA,iBAAOhD,IAAI6rB,SAAJ7rB,CAAcA,IAAImsB,WAAJnsB,CAAgB,GAAhBA,EAAqBuT,GAArBvT,IAA4B,CAA1CA,EAA6CuT,GAA7CvT,CAAP;AA3UF;;AAqVA,iBAASosB,qBAAT,CAA+BpsB,GAA/B,EAAsE;AAAA,cAAlCqsB,eAAkC,uEAAhB,cAAgB;;AACpE,cAAI,OAAOrsB,GAAP,KAAe,QAAnB,EAA6B;AAC3B,mBAAOqsB,eAAP;AAFkE;;AAIpE,cAAItd,aAAa/O,GAAb+O,CAAJ,EAAuB;AACrB7P,4BAAK,oEAALA;AACA,mBAAOmtB,eAAP;AANkE;;AAQpE,gBAAMC,QAAQ,qDAAd;AAGA,gBAAMC,aAAa,+BAAnB;AACA,gBAAMC,WAAWF,MAAMG,IAANH,CAAWtsB,GAAXssB,CAAjB;AACA,cAAII,oBACFH,WAAWE,IAAXF,CAAgBC,SAAS,CAATA,CAAhBD,KACAA,WAAWE,IAAXF,CAAgBC,SAAS,CAATA,CAAhBD,CADAA,IAEAA,WAAWE,IAAXF,CAAgBC,SAAS,CAATA,CAAhBD,CAHF;;AAIA,cAAIG,iBAAJ,EAAuB;AACrBA,gCAAoBA,kBAAkB,CAAlBA,CAApBA;;AACA,gBAAIA,kBAAkBC,QAAlBD,CAA2B,GAA3BA,CAAJ,EAAqC;AAEnC,kBAAI;AACFA,oCAAoBH,WAAWE,IAAXF,CAClB/hB,mBAAmBkiB,iBAAnBliB,CADkB+hB,EAElB,CAFkBA,CAApBG;AADF,gBAIE,OAAO/rB,EAAP,EAAW,CANsB;AAFhB;AAjB6C;;AAgCpE,iBAAO+rB,qBAAqBL,eAA5B;AArXF;;AAwXA,cAAMtV,SAAN,CAAgB;AACdrV,wBAAc;AACZ,iBAAKkrB,OAAL,GAAe3rB,OAAOwD,MAAPxD,CAAc,IAAdA,CAAf;AACA,iBAAK4rB,KAAL,GAAa,EAAb;AAHY;;AAMd/S,eAAKrY,IAALqY,EAAW;AACT,gBAAIrY,QAAQ,KAAKmrB,OAAjB,EAA0B;AACxB1tB,8BAAM,gCAA+BuC,IAAhC,EAALvC;AAFO;;AAIT,iBAAK0tB,OAAL,CAAanrB,IAAb,IAAqB0J,KAAK2hB,GAAL3hB,EAArB;AAVY;;AAad8P,kBAAQxZ,IAARwZ,EAAc;AACZ,gBAAI,EAAExZ,QAAQ,KAAKmrB,OAAf,CAAJ,EAA6B;AAC3B1tB,8BAAM,kCAAiCuC,IAAlC,EAALvC;AAFU;;AAIZ,iBAAK2tB,KAAL,CAAWzpB,IAAX,CAAgB;AACd3B,kBADc;AAEdsrB,qBAAO,KAAKH,OAAL,CAAanrB,IAAb,CAFO;AAGd8R,mBAAKpI,KAAK2hB,GAAL3hB;AAHS,aAAhB;AAMA,mBAAO,KAAKyhB,OAAL,CAAanrB,IAAb,CAAP;AAvBY;;AA0Bd8D,qBAAW;AAET,kBAAMynB,SAAS,EAAf;AACA,gBAAIC,UAAU,CAAd;;AACA,uBAAWnT,IAAX,IAAmB,KAAK+S,KAAxB,EAA+B;AAC7B,oBAAMprB,OAAOqY,KAAKrY,IAAlB;;AACA,kBAAIA,KAAKjB,MAALiB,GAAcwrB,OAAlB,EAA2B;AACzBA,0BAAUxrB,KAAKjB,MAAfysB;AAH2B;AAJtB;;AAUT,uBAAWnT,IAAX,IAAmB,KAAK+S,KAAxB,EAA+B;AAC7B,oBAAMK,WAAWpT,KAAKvG,GAALuG,GAAWA,KAAKiT,KAAjC;AACAC,qBAAO5pB,IAAP4pB,CAAY,GAAGlT,KAAKrY,IAALqY,CAAUqT,MAAVrT,CAAiBmT,OAAjBnT,CAA0B,IAAGoT,QAAS,MAArDF;AAZO;;AAcT,mBAAOA,OAAO3pB,IAAP2pB,CAAY,EAAZA,CAAP;AAxCY;;AAAA;;;;AA4ChB,iBAAS5D,eAAT,CAAyBppB,GAAzB,EAA8BR,OAA9B,EAAuC;AACrC,cAAI;AACF,kBAAM;AAAES;AAAF,gBAAeT,UAAU,IAAIG,GAAJ,CAAQK,GAAR,EAAaR,OAAb,CAAVA,GAAkC,IAAIG,GAAJ,CAAQK,GAAR,CAAvD;AAEA,mBAAOC,aAAa,OAAbA,IAAwBA,aAAa,QAA5C;AAHF,YAIE,OAAOU,EAAP,EAAW;AACX,mBAAO,KAAP;AANmC;AApavC;;AAmbA,iBAAS4gB,UAAT,CAAoB/T,GAApB,EAAsD;AAAA,cAA7B4f,mBAA6B,uEAAP,KAAO;AACpD,iBAAO,IAAIrhB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,kBAAMohB,SAAS/d,SAAS2Z,aAAT3Z,CAAuB,QAAvBA,CAAf;AACA+d,mBAAO7f,GAAP6f,GAAa7f,GAAb6f;;AAEAA,mBAAOC,MAAPD,GAAgB,UAAU9J,GAAV,EAAe;AAC7B,kBAAI6J,mBAAJ,EAAyB;AACvBC,uBAAOE,MAAPF;AAF2B;;AAI7BrhB,sBAAQuX,GAARvX;AAJF;;AAMAqhB,mBAAOG,OAAPH,GAAiB,YAAY;AAC3BphB,qBAAO,IAAI7M,KAAJ,CAAW,0BAAyBiuB,OAAO7f,GAAjC,EAAV,CAAPvB;AADF;;AAGC,sBAASwhB,IAAT,IAAiBne,SAASoe,eAA1B,EAA2CC,WAA3C,CAAuDN,MAAvD;AAbI,YAAP;AApbF;;AAscA,iBAASzZ,UAAT,CAAoB7R,OAApB,EAA6B;AAC3B/C,kBAAQC,GAARD,CAAY,2BAA2B+C,OAAvC/C;AAvcF;;AA0cA,YAAI4uB,kBAAJ;;AAEA,cAAMC,aAAN,CAAoB;AAiBlB,iBAAOC,YAAP,CAAoBC,KAApB,EAA2B;AACzB,gBAAI,CAACA,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACvC,qBAAO,IAAP;AAFuB;;AAMzB,gBAAI,CAACH,kBAAL,EAAyB;AACvBA,mCAAqB,IAAII,MAAJ,CACnB,QACE,UADF,GAEE,WAFF,GAGE,WAHF,GAIE,WAJF,GAKE,WALF,GAME,WANF,GAOE,YAPF,GAQE,WARF,GASE,IATF,GAUE,WAVF,GAWE,IAZiB,CAArBJ;AAPuB;;AA0BzB,kBAAMK,UAAUL,mBAAmBnB,IAAnBmB,CAAwBG,KAAxBH,CAAhB;;AACA,gBAAI,CAACK,OAAL,EAAc;AACZ,qBAAO,IAAP;AA5BuB;;AAiCzB,kBAAMC,OAAOC,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAb;AACA,gBAAIC,QAAQD,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAZ;AACAC,oBAAQA,SAAS,CAATA,IAAcA,SAAS,EAAvBA,GAA4BA,QAAQ,CAApCA,GAAwC,CAAhDA;AACA,gBAAIC,MAAMF,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAV;AACAE,kBAAMA,OAAO,CAAPA,IAAYA,OAAO,EAAnBA,GAAwBA,GAAxBA,GAA8B,CAApCA;AACA,gBAAIC,OAAOH,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAX;AACAG,mBAAOA,QAAQ,CAARA,IAAaA,QAAQ,EAArBA,GAA0BA,IAA1BA,GAAiC,CAAxCA;AACA,gBAAIC,SAASJ,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAb;AACAI,qBAASA,UAAU,CAAVA,IAAeA,UAAU,EAAzBA,GAA8BA,MAA9BA,GAAuC,CAAhDA;AACA,gBAAIjnB,SAAS6mB,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAb;AACA7mB,qBAASA,UAAU,CAAVA,IAAeA,UAAU,EAAzBA,GAA8BA,MAA9BA,GAAuC,CAAhDA;AACA,kBAAMknB,wBAAwBP,QAAQ,CAARA,KAAc,GAA5C;AACA,gBAAIQ,aAAaN,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CAAjB;AACAM,yBAAaA,cAAc,CAAdA,IAAmBA,cAAc,EAAjCA,GAAsCA,UAAtCA,GAAmD,CAAhEA;AACA,gBAAIC,eAAeP,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,KAA4B,CAA/C;AACAO,2BAAeA,gBAAgB,CAAhBA,IAAqBA,gBAAgB,EAArCA,GAA0CA,YAA1CA,GAAyD,CAAxEA;;AAMA,gBAAIF,0BAA0B,GAA9B,EAAmC;AACjCF,sBAAQG,UAARH;AACAC,wBAAUG,YAAVH;AAFF,mBAGO,IAAIC,0BAA0B,GAA9B,EAAmC;AACxCF,sBAAQG,UAARH;AACAC,wBAAUG,YAAVH;AA3DuB;;AA8DzB,mBAAO,IAAIpjB,IAAJ,CAASA,KAAKwjB,GAALxjB,CAAS+iB,IAAT/iB,EAAeijB,KAAfjjB,EAAsBkjB,GAAtBljB,EAA2BmjB,IAA3BnjB,EAAiCojB,MAAjCpjB,EAAyC7D,MAAzC6D,CAAT,CAAP;AA/EgB;;AAAA;;;;AAsFpB,iBAASyjB,kBAAT,CAA4BC,OAA5B,UAAkE;AAAA,cAA7B;AAAEhX,oBAAQ,CAAV;AAAaC,uBAAW;AAAxB,WAA6B;AAChE,gBAAM;AAAEiR,iBAAF;AAASC;AAAT,cAAoB6F,QAAQC,UAARD,CAAmBE,KAA7C;AACA,gBAAM5W,UAAU,CAAC,CAAD,EAAI,CAAJ,EAAOgW,SAASpF,KAAToF,CAAP,EAAwBA,SAASnF,MAATmF,CAAxB,CAAhB;AAEA,iBAAO,IAAIjW,YAAJ,CAAiB;AACtBC,mBADsB;AAEtBN,iBAFsB;AAGtBC;AAHsB,WAAjB,CAAP;AAtiBF;;;;;;;;;;;;;ACeA;;AAEA,cAAM8Q,iBAAN,CAAwB;AACtBlnB,wBAAc;AACZ,gBAAI,KAAKA,WAAL,KAAqBknB,iBAAzB,EAA4C;AAC1CzpB,qCAAY,sCAAZA;AAFU;AADQ;;AAOtBsF,iBAAOskB,KAAPtkB,EAAcukB,MAAdvkB,EAAsB;AACpB,gBAAIskB,SAAS,CAATA,IAAcC,UAAU,CAA5B,EAA+B;AAC7B,oBAAM,IAAI5pB,KAAJ,CAAU,qBAAV,CAAN;AAFkB;;AAIpB,kBAAMooB,SAAS,KAAKsB,aAAL,CAAmBC,KAAnB,EAA0BC,MAA1B,CAAf;;AACA,mBAAO;AACLxB,oBADK;AAELwH,uBAASxH,OAAOyH,UAAPzH,CAAkB,IAAlBA;AAFJ,aAAP;AAZoB;;AAkBtB0H,gBAAMC,gBAAND,EAAwBnG,KAAxBmG,EAA+BlG,MAA/BkG,EAAuC;AACrC,gBAAI,CAACC,iBAAiB3H,MAAtB,EAA8B;AAC5B,oBAAM,IAAIpoB,KAAJ,CAAU,yBAAV,CAAN;AAFmC;;AAIrC,gBAAI2pB,SAAS,CAATA,IAAcC,UAAU,CAA5B,EAA+B;AAC7B,oBAAM,IAAI5pB,KAAJ,CAAU,qBAAV,CAAN;AALmC;;AAOrC+vB,6BAAiB3H,MAAjB2H,CAAwBpG,KAAxBoG,GAAgCpG,KAAhCoG;AACAA,6BAAiB3H,MAAjB2H,CAAwBnG,MAAxBmG,GAAiCnG,MAAjCmG;AA1BoB;;AA6BtBhd,kBAAQgd,gBAARhd,EAA0B;AACxB,gBAAI,CAACgd,iBAAiB3H,MAAtB,EAA8B;AAC5B,oBAAM,IAAIpoB,KAAJ,CAAU,yBAAV,CAAN;AAFsB;;AAMxB+vB,6BAAiB3H,MAAjB2H,CAAwBpG,KAAxBoG,GAAgC,CAAhCA;AACAA,6BAAiB3H,MAAjB2H,CAAwBnG,MAAxBmG,GAAiC,CAAjCA;AACAA,6BAAiB3H,MAAjB2H,GAA0B,IAA1BA;AACAA,6BAAiBH,OAAjBG,GAA2B,IAA3BA;AAtCoB;;AA4CtBrG,wBAAcC,KAAdD,EAAqBE,MAArBF,EAA6B;AAC3B3pB,mCAAY,yCAAZA;AA7CoB;;AAAA;;;;AAiDxB,cAAMgrB,qBAAN,CAA4B;AAC1BzoB,8BAAsD;AAAA,gBAA1C;AAAElC,wBAAU,IAAZ;AAAkB2iB,6BAAe;AAAjC,aAA0C;;AACpD,gBAAI,KAAKzgB,WAAL,KAAqByoB,qBAAzB,EAAgD;AAC9ChrB,qCAAY,0CAAZA;AAFkD;;AAIpD,iBAAKK,OAAL,GAAeA,OAAf;AACA,iBAAK2iB,YAAL,GAAoBA,YAApB;AANwB;;AAS1B,gBAAMoD,KAAN,SAAsB;AAAA,gBAAV;AAAE9jB;AAAF,aAAU;;AACpB,gBAAI,CAAC,KAAKjC,OAAV,EAAmB;AACjB,oBAAM,IAAIJ,KAAJ,CACJ,iEACE,6DAFE,CAAN;AAFkB;;AAOpB,gBAAI,CAACqC,IAAL,EAAW;AACT,oBAAM,IAAIrC,KAAJ,CAAU,8BAAV,CAAN;AARkB;;AAUpB,kBAAMY,MAAM,KAAKR,OAAL,GAAeiC,IAAf,IAAuB,KAAK0gB,YAAL,GAAoB,QAApB,GAA+B,EAAtD,CAAZ;AACA,kBAAMkI,kBAAkB,KAAKlI,YAAL,GACpBprB,0BAAoBC,MADA,GAEpBD,0BAAoBvF,IAFxB;AAIA,mBAAO,KAAK44B,UAAL,CAAgBpqB,GAAhB,EAAqBqqB,eAArB,EAAsC/Y,KAAtC,CAA4CpF,UAAU;AAC3D,oBAAM,IAAI9M,KAAJ,CACH,kBAAiB,KAAK+iB,YAAL,GAAoB,SAApB,GAAgC,EAAG,YAAWniB,GAAhE,EADI,CAAN;AADK,cAAP;AAxBwB;;AAkC1BoqB,qBAAWpqB,GAAXoqB,EAAgBC,eAAhBD,EAAiC;AAC/BjrB,mCAAY,sCAAZA;AAnCwB;;AAAA;;;;AAuC5B,cAAMorB,2BAAN,CAAkC;AAChC7oB,8BAAgC;AAAA,gBAApB;AAAElC,wBAAU;AAAZ,aAAoB;;AAC9B,gBAAI,KAAKkC,WAAL,KAAqB6oB,2BAAzB,EAAsD;AACpDprB,qCAAY,gDAAZA;AAF4B;;AAI9B,iBAAKK,OAAL,GAAeA,OAAf;AAL8B;;AAQhC,gBAAM+lB,KAAN,SAA0B;AAAA,gBAAd;AAAEK;AAAF,aAAc;;AACxB,gBAAI,CAAC,KAAKpmB,OAAV,EAAmB;AACjB,oBAAM,IAAIJ,KAAJ,CACJ,0EACE,sDAFE,CAAN;AAFsB;;AAOxB,gBAAI,CAACwmB,QAAL,EAAe;AACb,oBAAM,IAAIxmB,KAAJ,CAAU,kCAAV,CAAN;AARsB;;AAUxB,kBAAMY,MAAM,GAAG,KAAKR,OAAR,GAAkBomB,QAAlB,EAAZ;AAEA,mBAAO,KAAKwE,UAAL,CAAgBpqB,GAAhB,EAAqBsR,KAArB,CAA2BpF,UAAU;AAC1C,oBAAM,IAAI9M,KAAJ,CAAW,gCAA+BY,GAAhC,EAAV,CAAN;AADK,cAAP;AApB8B;;AA4BhCoqB,qBAAWpqB,GAAXoqB,EAAgB;AACdjrB,mCAAY,sCAAZA;AA7B8B;;AAAA;;;;AAiClC,cAAMsrB,cAAN,CAAqB;AACnB/oB,wBAAc;AACZ,gBAAI,KAAKA,WAAL,KAAqB+oB,cAAzB,EAAyC;AACvCtrB,qCAAY,mCAAZA;AAFU;AADK;;AAOnBsF,iBAAOskB,KAAPtkB,EAAcukB,MAAdvkB,EAAsB;AACpB,gBAAIskB,SAAS,CAATA,IAAcC,UAAU,CAA5B,EAA+B;AAC7B,oBAAM,IAAI5pB,KAAJ,CAAU,wBAAV,CAAN;AAFkB;;AAIpB,kBAAMgwB,MAAM,KAAK1E,UAAL,CAAgB,SAAhB,CAAZ;;AACA0E,gBAAIC,YAAJD,CAAiB,SAAjBA,EAA4B,KAA5BA;AACAA,gBAAIC,YAAJD,CAAiB,OAAjBA,EAA0B,GAAGrG,KAAM,IAAnCqG;AACAA,gBAAIC,YAAJD,CAAiB,QAAjBA,EAA2B,GAAGpG,MAAO,IAArCoG;AACAA,gBAAIC,YAAJD,CAAiB,qBAAjBA,EAAwC,MAAxCA;AACAA,gBAAIC,YAAJD,CAAiB,SAAjBA,EAA6B,OAAMrG,KAAM,IAAGC,MAAhB,EAA5BoG;AAEA,mBAAOA,GAAP;AAlBiB;;AAqBnBnG,wBAAczc,IAAdyc,EAAoB;AAClB,gBAAI,OAAOzc,IAAP,KAAgB,QAApB,EAA8B;AAC5B,oBAAM,IAAIpN,KAAJ,CAAU,0BAAV,CAAN;AAFgB;;AAIlB,mBAAO,KAAKsrB,UAAL,CAAgBle,IAAhB,CAAP;AAzBiB;;AA+BnBke,qBAAWle,IAAXke,EAAiB;AACfvrB,mCAAY,sCAAZA;AAhCiB;;AAAA;;;;;;;;;;;;;;AC3HrB;;AAWA,cAAMmwB,cAAN,CAAqB;AACnB5tB,8BAMG;AAAA,gBANS;AACVuO,mBADU;AAEViC,kCAFU;AAGV9C,8BAAgBC,WAAWC,QAHjB;AAKV2S,6BAAe;AALL,aAMT;;AACD,gBAAI,KAAKvgB,WAAL,KAAqB4tB,cAAzB,EAAyC;AACvCnwB,qCAAY,mCAAZA;AAFD;;AAID,iBAAK8Q,KAAL,GAAaA,KAAb;AACA,iBAAK8R,qBAAL,GAA6B7P,oBAA7B;AACA,iBAAK2W,SAAL,GAAiBzZ,aAAjB;AAEA,iBAAKmgB,eAAL,GAAuB,EAAvB;AACA,iBAAKtN,YAAL,GAGM,IAHN;AAhBiB;;AAsBnBuN,4BAAkBC,cAAlBD,EAAkC;AAChC,iBAAKD,eAAL,CAAqBnsB,IAArB,CAA0BqsB,cAA1B;;AACA,iBAAK5G,SAAL,CAAe6G,KAAf,CAAqBpU,GAArB,CAAyBmU,cAAzB;AAxBiB;;AA2BnBE,qBAAWC,IAAXD,EAAiB;AACf,gBAAI1N,eAAe,KAAKA,YAAxB;;AACA,gBAAI,CAACA,YAAL,EAAmB;AACjBA,6BAAe,KAAKA,YAAL,GAAoB,KAAK4G,SAAL,CAAeI,aAAf,CAA6B,OAA7B,CAAnChH;AACAA,2BAAarN,EAAbqN,GAAmB,wBAAuB,KAAKhS,KAA7B,EAAlBgS;;AACA,mBAAK4G,SAAL,CAAe6E,eAAf,CACGmC,oBADH,CACwB,MADxB,EACgC,CADhC,EAEGlC,WAFH,CAEe1L,YAFf;AALa;;AASf,kBAAM6N,aAAa7N,aAAa8N,KAAhC;AACAD,uBAAWH,UAAXG,CAAsBF,IAAtBE,EAA4BA,WAAWE,QAAXF,CAAoBtvB,MAAhDsvB;AArCiB;;AAwCnBnS,kBAAQ;AACN,uBAAW8R,cAAX,IAA6B,KAAKF,eAAlC,EAAmD;AACjD,mBAAK1G,SAAL,CAAe6G,KAAf,CAAqB7U,MAArB,CAA4B4U,cAA5B;AAFI;;AAIN,iBAAKF,eAAL,CAAqB/uB,MAArB,GAA8B,CAA9B;;AAEA,gBAAI,KAAKyhB,YAAT,EAAuB;AAErB,mBAAKA,YAAL,CAAkBsL,MAAlB;AACA,mBAAKtL,YAAL,GAAoB,IAApB;AATI;AAxCW;;AAqDnB,gBAAMD,IAAN,CAAW3kB,IAAX,EAAiB;AAEf,gBAAIA,KAAK4yB,QAAL5yB,IAAiBA,KAAK6yB,WAA1B,EAAuC;AACrC;AAHa;;AAKf7yB,iBAAK4yB,QAAL5yB,GAAgB,IAAhBA;;AAEA,gBAAI,KAAK8yB,yBAAT,EAAoC;AAClC,oBAAMV,iBAAiBpyB,KAAK+yB,oBAAL/yB,EAAvB;;AACA,kBAAIoyB,cAAJ,EAAoB;AAClB,qBAAKD,iBAAL,CAAuBC,cAAvB;;AACA,oBAAI;AACF,wBAAMA,eAAexc,MAArB;AADF,kBAEE,OAAOtS,EAAP,EAAW;AACX,uBAAKohB,qBAAL,CAA2B;AACzByD,+BAAW1oB,2BAAqBkB;AADP,mBAA3B;;AAGAkB,kCAAM,wBAAuBuwB,eAAeY,MAAO,OAAM1vB,EAAG,IAA5DzB;AAGA7B,uBAAK6R,eAAL7R,GAAuB,IAAvBA;AACA,wBAAMsD,EAAN;AAZgB;AAFc;;AAiBlC;AAxBa;;AA4Bf,kBAAMivB,OAAOvyB,KAAKizB,kBAALjzB,EAAb;;AACA,gBAAIuyB,IAAJ,EAAU;AACR,mBAAKD,UAAL,CAAgBC,IAAhB;;AAEA,kBAAI,KAAKW,0BAAT,EAAqC;AACnC;AAJM;;AAMR,oBAAM,IAAIxkB,OAAJ,CAAYC,WAAW;AAC3B,sBAAM2d,UAAU,KAAK6G,qBAAL,CAA2BxkB,OAA3B,CAAhB;;AACA,qBAAKykB,qBAAL,CAA2B,CAACb,IAAD,CAA3B,EAAmC,CAACvyB,IAAD,CAAnC,EAA2CssB,OAA3C;AAFI,gBAAN;AAnCa;AArDE;;AAgGnB6G,gCAAsBrV,QAAtBqV,EAAgC;AAC9BrxB,mCAAY,0CAAZA;AAjGiB;;AAoGnB,cAAIgxB,yBAAJ,GAAgC;AAC9B,kBAAMO,WAAW,CAAC,CAAC,KAAK7H,SAAL,EAAgB6G,KAAnC;AAWA,mBAAO7uB,kBAAO,IAAPA,EAAa,2BAAbA,EAA0C6vB,QAA1C7vB,CAAP;AAhHiB;;AAoHnB,cAAI0vB,0BAAJ,GAAiC;AAC/BpxB,mCAAY,+CAAZA;AArHiB;;AAyHnB,cAAIwxB,aAAJ,GAAoB;AAClBxxB,mCAAY,kCAAZA;AA1HiB;;AA6HnBsxB,gCAAsBG,KAAtBH,EAA6BI,WAA7BJ,EAA0C9G,OAA1C8G,EAAmD;AACjDtxB,mCAAY,0CAAZA;AA9HiB;;AAAA;;AAkIrB,YAAI2iB,UAAJ;;AAOO;AAGLA,4CAAa,MAAMgP,iBAAN,SAAgCxB,cAAhC,CAA+C;AAC1D5tB,wBAAYoM,MAAZpM,EAAoB;AAClB,oBAAMoM,MAAN;AACA,mBAAKijB,cAAL,GAAsB;AACpBC,0BAAU,EADU;AAEpBC,+BAAe;AAFK,eAAtB;AAIA,mBAAKC,cAAL,GAAsB,CAAtB;AAPwD;;AAU1D,gBAAIX,0BAAJ,GAAiC;AAC/B,kBAAIY,YAAY,KAAhB;;AAEE,kBAAI,OAAOC,SAAP,KAAqB,WAAzB,EAAsC;AAEpCD,4BAAY,IAAZA;AAFF,qBAGO;AAGL,sBAAMjrB,IAAI,mCAAmCumB,IAAnC,CACR2E,UAAUC,SADF,CAAV;;AAGA,oBAAInrB,IAAI,CAAJA,KAAU,EAAd,EAAkB;AAChBirB,8BAAY,IAAZA;AAPG;AANsB;;AAkB/B,qBAAOtwB,kBAAO,IAAPA,EAAa,4BAAbA,EAA2CswB,SAA3CtwB,CAAP;AA5BwD;;AA+B1D2vB,kCAAsBrV,QAAtBqV,EAAgC;AAC9B,uBAASc,eAAT,GAA2B;AACzBjyB,kCAAO,CAACsqB,QAAQ5M,IAAhB1d,EAAsB,2CAAtBA;AACAsqB,wBAAQ5M,IAAR4M,GAAe,IAAfA;;AAGA,uBAAOqF,QAAQgC,QAARhC,CAAiBxuB,MAAjBwuB,GAA0B,CAA1BA,IAA+BA,QAAQgC,QAARhC,CAAiB,CAAjBA,EAAoBjS,IAA1D,EAAgE;AAC9D,wBAAMwU,eAAevC,QAAQgC,QAARhC,CAAiBwC,KAAjBxC,EAArB;AACA7Q,6BAAWoT,aAAapW,QAAxBgD,EAAkC,CAAlCA;AAPuB;AADG;;AAY9B,oBAAM6Q,UAAU,KAAK+B,cAArB;AACA,oBAAMpH,UAAU;AACd/U,oBAAK,sBAAqBoa,QAAQiC,aAARjC,EAAtB,EADU;AAEdjS,sBAAM,KAFQ;AAGdrC,0BAAU4W,eAHI;AAIdnW;AAJc,eAAhB;AAMA6T,sBAAQgC,QAARhC,CAAiB5rB,IAAjB4rB,CAAsBrF,OAAtBqF;AACA,qBAAOrF,OAAP;AAnDwD;;AAsD1D,gBAAIgH,aAAJ,GAAoB;AAClB,oBAAMc,kBAAkB,YAAY;AAGlC,uBAAOC,KACL,yEACE,sEADF,GAEE,sEAFF,GAGE,sEAHF,GAIE,sEAJF,GAKE,sEALF,GAME,sEANF,GAOE,sEAPF,GAQE,sEARF,GASE,sEATF,GAUE,sEAVF,GAWE,sEAXF,GAYE,sEAZF,GAaE,sEAbF,GAcE,sEAdF,GAeE,sEAfF,GAgBE,sEAhBF,GAiBE,sEAjBF,GAkBE,sEAlBF,GAmBE,sEAnBF,GAoBE,sEApBF,GAqBE,sEAtBGA,CAAP;AAHF;;AA4BA,qBAAO7wB,kBAAO,IAAPA,EAAa,eAAbA,EAA8B4wB,iBAA9B5wB,CAAP;AAnFwD;;AAsF1D4vB,kCAAsBG,KAAtBH,EAA6Bf,KAA7Be,EAAoC9G,OAApC8G,EAA6C;AAO3C,uBAASkB,KAAT,CAAe3tB,IAAf,EAAqB4tB,MAArB,EAA6B;AAC3B,uBACG5tB,KAAKP,UAALO,CAAgB4tB,MAAhB5tB,KAA2B,EAA3BA,GACAA,KAAKP,UAALO,CAAgB4tB,SAAS,CAAzB5tB,KAA+B,EAD/BA,GAEAA,KAAKP,UAALO,CAAgB4tB,SAAS,CAAzB5tB,KAA+B,CAF/BA,GAGAA,KAAKP,UAALO,CAAgB4tB,SAAS,CAAzB5tB,IAA8B,IAJjC;AARyC;;AAe3C,uBAAS6tB,YAAT,CAAsBC,CAAtB,EAAyBF,MAAzB,EAAiCrE,MAAjC,EAAyCwE,MAAzC,EAAiD;AAC/C,sBAAMC,SAASF,EAAEjG,SAAFiG,CAAY,CAAZA,EAAeF,MAAfE,CAAf;AACA,sBAAMG,SAASH,EAAEjG,SAAFiG,CAAYF,SAASrE,MAArBuE,CAAf;AACA,uBAAOE,SAASD,MAATC,GAAkBC,MAAzB;AAlByC;;AAoB3C,kBAAInvB,CAAJ,EAAOiH,EAAP;;AAGA,oBAAMyd,SAAS,KAAKqB,SAAL,CAAeI,aAAf,CAA6B,QAA7B,CAAf;;AACAzB,qBAAOuB,KAAPvB,GAAe,CAAfA;AACAA,qBAAOwB,MAAPxB,GAAgB,CAAhBA;AACA,oBAAM0K,MAAM1K,OAAOyH,UAAPzH,CAAkB,IAAlBA,CAAZ;AAEA,kBAAI2K,SAAS,CAAb;;AACA,uBAASC,WAAT,CAAqB3wB,IAArB,EAA2B0Z,QAA3B,EAAqC;AACnCgX;;AAEA,oBAAIA,SAAS,EAAb,EAAiB;AACfjzB,kCAAK,8BAALA;AACAic;AACA;AANiC;;AAQnC+W,oBAAI70B,IAAJ60B,GAAW,UAAUzwB,IAArBywB;AACAA,oBAAIG,QAAJH,CAAa,GAAbA,EAAkB,CAAlBA,EAAqB,EAArBA;AACA,sBAAM/M,YAAY+M,IAAII,YAAJJ,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,CAAvBA,EAA0B,CAA1BA,CAAlB;;AACA,oBAAI/M,UAAUnhB,IAAVmhB,CAAe,CAAfA,IAAoB,CAAxB,EAA2B;AACzBhK;AACA;AAbiC;;AAenCgD,2BAAWiU,YAAYpQ,IAAZoQ,CAAiB,IAAjBA,EAAuB3wB,IAAvB2wB,EAA6BjX,QAA7BiX,CAAXjU;AA5CyC;;AA+C3C,oBAAM+S,iBAAkB,KAAI/lB,KAAK2hB,GAAL3hB,EAAL,GAAkB,KAAK+lB,cAAL,EAAlB,EAAvB;AAMA,kBAAIltB,OAAO,KAAK2sB,aAAhB;AACA,oBAAM4B,iBAAiB,GAAvB;AACAvuB,qBAAO6tB,aACL7tB,IADK6tB,EAELU,cAFKV,EAGLX,eAAe1wB,MAHVqxB,EAILX,cAJKW,CAAP7tB;AAOA,oBAAMwuB,sBAAsB,EAA5B;AACA,oBAAMC,aAAa,UAAnB;AACA,kBAAIC,WAAWf,MAAM3tB,IAAN2tB,EAAYa,mBAAZb,CAAf;;AACA,mBAAK7uB,IAAI,CAAJA,EAAOiH,KAAKmnB,eAAe1wB,MAAf0wB,GAAwB,CAAzC,EAA4CpuB,IAAIiH,EAAhD,EAAoDjH,KAAK,CAAzD,EAA4D;AAC1D4vB,2BAAYA,WAAWD,UAAXC,GAAwBf,MAAMT,cAANS,EAAsB7uB,CAAtB6uB,CAAxBe,GAAoD,CAAhEA;AAlEyC;;AAoE3C,kBAAI5vB,IAAIouB,eAAe1wB,MAAvB,EAA+B;AAE7BkyB,2BACGA,WAAWD,UAAXC,GAAwBf,MAAMT,iBAAiB,KAAvBS,EAA8B7uB,CAA9B6uB,CAAxBe,GAA4D,CAD/DA;AAtEyC;;AAyE3C1uB,qBAAO6tB,aAAa7tB,IAAb6tB,EAAmBW,mBAAnBX,EAAwC,CAAxCA,EAA2CztB,oBAASsuB,QAATtuB,CAA3CytB,CAAP7tB;AAEA,oBAAMhE,MAAO,iCAAgC2yB,KAAK3uB,IAAL2uB,CAAW,IAAxD;AACA,oBAAM/C,OAAQ,4BAA2BsB,cAAe,SAAQlxB,GAAI,GAApE;AACA,mBAAK2vB,UAAL,CAAgBC,IAAhB;AAEA,oBAAMgD,QAAQ,EAAd;;AACA,yBAAWv1B,IAAX,IAAmBqyB,KAAnB,EAA0B;AACxBkD,sBAAMxvB,IAANwvB,CAAWv1B,KAAKw1B,UAAhBD;AAjFyC;;AAmF3CA,oBAAMxvB,IAANwvB,CAAW1B,cAAX0B;;AAEA,oBAAME,MAAM,KAAKjK,SAAL,CAAeI,aAAf,CAA6B,KAA7B,CAAZ;;AACA6J,kBAAI/D,KAAJ+D,CAAUC,UAAVD,GAAuB,QAAvBA;AACAA,kBAAI/D,KAAJ+D,CAAU/J,KAAV+J,GAAkBA,IAAI/D,KAAJ+D,CAAU9J,MAAV8J,GAAmB,MAArCA;AACAA,kBAAI/D,KAAJ+D,CAAUE,QAAVF,GAAqB,UAArBA;AACAA,kBAAI/D,KAAJ+D,CAAUG,GAAVH,GAAgBA,IAAI/D,KAAJ+D,CAAUI,IAAVJ,GAAiB,KAAjCA;;AAEA,yBAAWrxB,IAAX,IAAmBmxB,KAAnB,EAA0B;AACxB,sBAAMO,OAAO,KAAKtK,SAAL,CAAeI,aAAf,CAA6B,MAA7B,CAAb;;AACAkK,qBAAK7W,WAAL6W,GAAmB,IAAnBA;AACAA,qBAAKpE,KAALoE,CAAWC,UAAXD,GAAwB1xB,IAAxB0xB;AACAL,oBAAInF,WAAJmF,CAAgBK,IAAhBL;AA/FyC;;AAiG3C,mBAAKjK,SAAL,CAAewK,IAAf,CAAoB1F,WAApB,CAAgCmF,GAAhC;;AAEAV,0BAAYlB,cAAZkB,EAA4B,MAAM;AAChCU,oBAAIvF,MAAJuF;AACAnJ,wBAAQjP,QAARiP;AAFF;AAzLwD;;AAAA,WAA5D7H;AAtKF;;AAwWA,cAAMmD,cAAN,CAAqB;AACnBvjB,sBACE4xB,cADF5xB,UASE;AAAA,gBAPA;AACEuD,gCAAkB,IADpB;AAEEiK,gCAAkB,KAFpB;AAGET,6BAAe,KAHjB;AAIEyD,kCAJF;AAKE0S,6BAAe;AALjB,aAOA;AACA,iBAAK2O,cAAL,GAAsBtyB,OAAOwD,MAAPxD,CAAc,IAAdA,CAAtB;;AAEA,uBAAW6B,CAAX,IAAgBwwB,cAAhB,EAAgC;AAC9B,mBAAKxwB,CAAL,IAAUwwB,eAAexwB,CAAfwwB,CAAV;AAJF;;AAMA,iBAAKruB,eAAL,GAAuBA,oBAAoB,KAA3C;AACA,iBAAKiK,eAAL,GAAuBA,oBAAoB,IAA3C;AACA,iBAAKT,YAAL,GAAoBA,iBAAiB,IAArC;AACA,iBAAKsT,qBAAL,GAA6B7P,oBAA7B;AACA,iBAAK0S,YAAL,GAAoBA,YAApB;AApBiB;;AAuBnBwL,iCAAuB;AACrB,gBAAI,CAAC,KAAKpsB,IAAN,IAAc,KAAKkL,eAAvB,EAAwC;AACtC,qBAAO,IAAP;AAFmB;;AAIrB,gBAAIugB,cAAJ;;AACA,gBAAI,CAAC,KAAK+D,WAAV,EAAuB;AACrB/D,+BAAiB,IAAIgE,QAAJ,CAAa,KAAKZ,UAAlB,EAA8B,KAAK7uB,IAAnC,EAAyC,EAAzC,CAAjByrB;AADF,mBAEO;AACL,oBAAMiE,MAAM;AACVC,wBAAQ,KAAKH,WAAL,CAAiBI;AADf,eAAZ;;AAGA,kBAAI,KAAKJ,WAAL,CAAiBK,WAArB,EAAkC;AAChCH,oBAAI3E,KAAJ2E,GAAa,WAAU,KAAKF,WAAL,CAAiBK,WAAY,KAApDH;AALG;;AAOLjE,+BAAiB,IAAIgE,QAAJ,CACf,KAAKD,WAAL,CAAiBJ,UADF,EAEf,KAAKpvB,IAFU,EAGf0vB,GAHe,CAAjBjE;AAdmB;;AAqBrB,gBAAI,KAAK7K,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBG,YAAlB,CAA+B,IAA/B;AAtBmB;;AAwBrB,mBAAO0K,cAAP;AA/CiB;;AAkDnBa,+BAAqB;AACnB,gBAAI,CAAC,KAAKtsB,IAAN,IAAc,KAAKkL,eAAvB,EAAwC;AACtC,qBAAO,IAAP;AAFiB;;AAInB,kBAAMlL,OAAO1B,yBAAc,KAAK0B,IAAnB1B,CAAb;AAEA,kBAAMtC,MAAO,YAAW,KAAK8zB,QAAS,WAAUnB,KAAK3uB,IAAL2uB,CAAW,IAA3D;AACA,gBAAI/C,IAAJ;;AACA,gBAAI,CAAC,KAAK4D,WAAV,EAAuB;AACrB5D,qBAAQ,4BAA2B,KAAKiD,UAAW,SAAQ7yB,GAAI,GAA/D4vB;AADF,mBAEO;AACL,kBAAI8D,MAAO,gBAAe,KAAKF,WAAL,CAAiBI,UAAW,GAAtD;;AACA,kBAAI,KAAKJ,WAAL,CAAiBK,WAArB,EAAkC;AAChCH,uBAAQ,uBAAsB,KAAKF,WAAL,CAAiBK,WAAY,MAA3DH;AAHG;;AAKL9D,qBAAQ,4BAA2B,KAAK4D,WAAL,CAAiBJ,UAAW,KAAIM,GAAI,OAAM1zB,GAAI,GAAjF4vB;AAfiB;;AAkBnB,gBAAI,KAAKhL,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBG,YAAlB,CAA+B,IAA/B,EAAqC/kB,GAArC;AAnBiB;;AAqBnB,mBAAO4vB,IAAP;AAvEiB;;AA0EnBmE,2BAAiB7c,IAAjB6c,EAAuBC,SAAvBD,EAAkC;AAChC,gBAAI,KAAKR,cAAL,CAAoBS,SAApB,MAAmCxxB,SAAvC,EAAkD;AAChD,qBAAO,KAAK+wB,cAAL,CAAoBS,SAApB,CAAP;AAF8B;;AAKhC,gBAAIC,IAAJ;;AACA,gBAAI;AACFA,qBAAO/c,KAAKrL,GAALqL,CAAS,KAAK2b,UAAL,GAAkB,QAAlB,GAA6BmB,SAAtC9c,CAAP+c;AADF,cAEE,OAAOtzB,EAAP,EAAW;AACX,kBAAI,CAAC,KAAK8N,YAAV,EAAwB;AACtB,sBAAM9N,EAAN;AAFS;;AAIX,mBAAKohB,qBAAL,CAA2B;AACzByD,2BAAW1oB,2BAAqBoB;AADP,eAA3B;;AAGAgB,8BAAM,2CAA0CyB,EAAG,IAAnDzB;AAEA,qBAAQ,KAAKq0B,cAAL,CAAoBS,SAApB,IAAiC,UAAU5sB,CAAV,EAAagP,IAAb,EAAmB,CAA5D;AAjB8B;;AAuBhC,gBAAI,KAAKnR,eAAL,IAAwBE,4BAAsBnE,KAAlD,EAAyD;AACvD,oBAAMkzB,QAAQ,EAAd;;AACA,yBAAWC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1B,sBAAMG,OAAOD,QAAQC,IAARD,KAAiB3xB,SAAjB2xB,GAA6BA,QAAQC,IAARD,CAAa9wB,IAAb8wB,CAAkB,GAAlBA,CAA7BA,GAAsD,EAAnE;AACAD,sBAAM9wB,IAAN8wB,CAAW,IAAXA,EAAiBC,QAAQE,GAAzBH,EAA8B,GAA9BA,EAAmCE,IAAnCF,EAAyC,MAAzCA;AAJqD;;AAOvD,qBAAQ,KAAKX,cAAL,CAAoBS,SAApB,IAAiC,IAAI9uB,QAAJ,CACvC,GADuC,EAEvC,MAFuC,EAGvCgvB,MAAM7wB,IAAN6wB,CAAW,EAAXA,CAHuC,CAAzC;AA9B8B;;AAsChC,mBAAQ,KAAKX,cAAL,CAAoBS,SAApB,IAAiC,UAAU5sB,CAAV,EAAagP,IAAb,EAAmB;AAC1D,yBAAW+d,OAAX,IAAsBF,IAAtB,EAA4B;AAC1B,oBAAIE,QAAQE,GAARF,KAAgB,OAApB,EAA6B;AAC3BA,0BAAQC,IAARD,GAAe,CAAC/d,IAAD,EAAO,CAACA,IAAR,CAAf+d;AAFwB;;AAI1B/sB,kBAAE+sB,QAAQE,GAAVjtB,EAAexE,KAAfwE,CAAqBA,CAArBA,EAAwB+sB,QAAQC,IAAhChtB;AALwD;AAA5D;AAhHiB;;AAAA;;;;;;;;;;;;;;ACxVrB;;AAKA;;AACA;;AAEA,YAAIwF,oBAAoB,MAAM;AAC5BlL,wBAAc;AACZvC,mCAAY,oCAAZA;AAF0B;;AAAA,SAA9B;;AAMA,YAAI4N,wBAAwB,MAAM;AAChCrL,wBAAc;AACZvC,mCAAY,wCAAZA;AAF8B;;AAAA,SAAlC;;AAMA,YAAI+N,8BAA8B,MAAM;AACtCxL,wBAAc;AACZvC,mCAAY,8CAAZA;AAFoC;;AAAA,SAAxC;;;AAMA,YAAqEgN,iBAArE,EAA+E;AAC7E,gBAAM+c,YAAY,UAAUlpB,GAAV,EAAe;AAC/B,mBAAO,IAAI+L,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,oBAAMqoB,KAAK/U,OAAuBA,CAAC,IAADA,CAAlC;;AACA+U,iBAAGC,QAAHD,CAAYt0B,GAAZs0B,EAAiB,CAAC3Z,KAAD,EAAQ3W,IAAR,KAAiB;AAChC,oBAAI2W,SAAS,CAAC3W,IAAd,EAAoB;AAClBiI,yBAAO,IAAI7M,KAAJ,CAAUub,KAAV,CAAP1O;AACA;AAH8B;;AAKhCD,wBAAQ,IAAIxI,UAAJ,CAAeQ,IAAf,CAARgI;AALF;AAFK,cAAP;AADF;;AAaAY,0DAAoB,cAAcgc,+BAAd,CAAgC;AAClDE,0BAAcC,KAAdD,EAAqBE,MAArBF,EAA6B;AAC3B,oBAAM0L,SAASjV,OAAuBA,CAAC,QAADA,CAAtC;;AACA,qBAAOiV,OAAOC,YAAPD,CAAoBzL,KAApByL,EAA2BxL,MAA3BwL,CAAP;AAHgD;;AAAA,WAApD5nB;AAOAG,kEAAwB,cAAcod,mCAAd,CAAoC;AAC1DC,uBAAWpqB,GAAXoqB,EAAgBC,eAAhBD,EAAiC;AAC/B,qBAAOlB,UAAUlpB,GAAVkpB,EAAehZ,IAAfgZ,CAAoBllB,QAAQ;AACjC,uBAAO;AAAEsmB,4BAAUtmB,IAAZ;AAAkBqmB;AAAlB,iBAAP;AADK,gBAAP;AAFwD;;AAAA,WAA5Dtd;AAQAG,8EAA8B,cAAcqd,yCAAd,CAA0C;AACtEH,uBAAWpqB,GAAXoqB,EAAgB;AACd,qBAAOlB,UAAUlpB,GAAVkpB,CAAP;AAFoE;;AAAA,WAAxEhc;AAvEF;;;;;;;;;;;;;ACeA;;AAKA,cAAMyV,iBAAN,CAAwB;AACtBjhB,wBAAc;AACZ,iBAAKgzB,QAAL,GAAgB,IAAInd,GAAJ,EAAhB;AACA,iBAAKod,UAAL,GAAkBxpB,KAAK2hB,GAAL3hB,EAAlB;AACA,iBAAKypB,SAAL,GAAiB,KAAjB;AAMA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,eAAL,GAAuB,IAAvB;AAXoB;;AAuBtBC,mBAASrwB,GAATqwB,EAAcC,YAAdD,EAA4B;AAC1B,kBAAM/zB,QAAQ,KAAK0zB,QAAL,CAAc7oB,GAAd,CAAkBnH,GAAlB,CAAd;;AACA,gBAAI1D,UAAUwB,SAAd,EAAyB;AACvB,qBAAOwyB,YAAP;AAHwB;;AAM1B,mBAAO/zB,OAAO+b,MAAP/b,CAAc+zB,YAAd/zB,EAA4BD,KAA5BC,CAAP;AA7BoB;;AAwCtBg0B,mBAASvwB,GAATuwB,EAAcj0B,KAAdi0B,EAAqB;AACnB,kBAAMn0B,MAAM,KAAK4zB,QAAL,CAAc7oB,GAAd,CAAkBnH,GAAlB,CAAZ;;AACA,gBAAIwwB,WAAW,KAAf;;AACA,gBAAIp0B,QAAQ0B,SAAZ,EAAuB;AACrB,yBAAW,CAAC2yB,KAAD,EAAQC,GAAR,CAAX,IAA2Bn0B,OAAOo0B,OAAPp0B,CAAeD,KAAfC,CAA3B,EAAkD;AAChD,oBAAIH,IAAIq0B,KAAJr0B,MAAes0B,GAAnB,EAAwB;AACtBF,6BAAW,IAAXA;AACAp0B,sBAAIq0B,KAAJr0B,IAAas0B,GAAbt0B;AAH8C;AAD7B;AAAvB,mBAOO;AACLo0B,yBAAW,IAAXA;;AACA,mBAAKR,QAAL,CAAcvwB,GAAd,CAAkBO,GAAlB,EAAuB1D,KAAvB;AAZiB;;AAcnB,gBAAIk0B,QAAJ,EAAc;AACZ,mBAAKP,UAAL,GAAkBxpB,KAAK2hB,GAAL3hB,EAAlB;;AACA,mBAAKmqB,YAAL;AAhBiB;AAxCC;;AA4DtBC,mBAAS;AACP,mBAAO,KAAKb,QAAL,CAActe,IAAd,GAAqB,CAArB,GAAyB7R,yBAAc,KAAKmwB,QAAnBnwB,CAAzB,GAAwD,IAA/D;AA7DoB;;AAgEtB,cAAI6R,IAAJ,GAAW;AACT,mBAAO,KAAKse,QAAL,CAActe,IAArB;AAjEoB;;AAuEtBkf,yBAAe;AACb,gBAAI,CAAC,KAAKV,SAAV,EAAqB;AACnB,mBAAKA,SAAL,GAAiB,IAAjB;;AACA,kBAAI,OAAO,KAAKC,aAAZ,KAA8B,UAAlC,EAA8C;AAC5C,qBAAKA,aAAL;AAHiB;AADR;AAvEO;;AAgFtB7R,0BAAgB;AACd,gBAAI,KAAK4R,SAAT,EAAoB;AAClB,mBAAKA,SAAL,GAAiB,KAAjB;;AACA,kBAAI,OAAO,KAAKE,eAAZ,KAAgC,UAApC,EAAgD;AAC9C,qBAAKA,eAAL;AAHgB;AADN;AAhFM;;AA6FtB,cAAI9W,YAAJ,GAAmB;AACjB,mBAAO,KAAK0W,QAAL,CAActe,IAAd,GAAqB,CAArB,GAAyB,KAAKse,QAA9B,GAAyC,IAAhD;AA9FoB;;AAqGtB,cAAI7R,YAAJ,GAAmB;AACjB,mBAAO,KAAK8R,UAAL,CAAgBpvB,QAAhB,EAAP;AAtGoB;;AAAA;;;;;;;;;;;;;;ACLxB;;AAaA;;AAKA;;AAKA,cAAMiwB,gBAAgB,EAAtB;AAEA,cAAMC,gBAAgB,GAAtB;AACA,cAAMC,iBAAiB,IAAvB;AAIA,cAAMC,iBAAiB,EAAvB;AAEA,cAAMC,kBAAkB,EAAxB;AAEA,cAAMC,uBAAuB,IAA7B;AACA,cAAMC,sBAAsB,IAA5B;AAEA,cAAMC,oBAAoB,EAA1B;AAOA,cAAMC,yBAAyB,QAA/B;;AAgBA,iBAASC,uBAAT,CAAiC/D,GAAjC,EAAsCgE,OAAtC,EAA+C;AAC7C,cAAIhE,IAAIiE,gBAAR,EAA0B;AACxB,kBAAM,IAAI/2B,KAAJ,CAAU,2CAAV,CAAN;AAF2C;;AAI7C8yB,cAAIkE,cAAJlE,GAAqBA,IAAIt6B,IAAzBs6B;AACAA,cAAImE,iBAAJnE,GAAwBA,IAAIr6B,OAA5Bq6B;AACAA,cAAIoE,gBAAJpE,GAAuBA,IAAIza,MAA3Bya;AACAA,cAAIqE,eAAJrE,GAAsBA,IAAIra,KAA1Bqa;AACAA,cAAIsE,mBAAJtE,GAA0BA,IAAIuE,SAA9BvE;AACAA,cAAIwE,mBAAJxE,GAA0BA,IAAIp6B,SAA9Bo6B;AACAA,cAAIyE,sBAAJzE,GAA6BA,IAAI0E,YAAjC1E;AACAA,cAAI2E,wBAAJ3E,GAA+BA,IAAI4E,cAAnC5E;AACAA,cAAI6E,cAAJ7E,GAAqBA,IAAIn5B,IAAzBm5B;AACAA,cAAI8E,gBAAJ9E,GAAuBA,IAAIn6B,MAA3Bm6B;AACAA,cAAI+E,gBAAJ/E,GAAuBA,IAAIl6B,MAA3Bk6B;AACAA,cAAIgF,uBAAJhF,GAA8BA,IAAIiF,aAAlCjF;AACAA,cAAIkF,cAAJlF,GAAqBA,IAAIvqB,IAAzBuqB;AACAA,cAAImF,mBAAJnF,GAA0BA,IAAI95B,SAA9B85B;AACAA,cAAIoF,mBAAJpF,GAA0BA,IAAIqF,SAA9BrF;;AAEAA,cAAIiE,gBAAJjE,GAAuB,MAAM;AAC3BA,gBAAIt6B,IAAJs6B,GAAWA,IAAIkE,cAAflE;AACAA,gBAAIr6B,OAAJq6B,GAAcA,IAAImE,iBAAlBnE;AACAA,gBAAIza,MAAJya,GAAaA,IAAIoE,gBAAjBpE;AACAA,gBAAIra,KAAJqa,GAAYA,IAAIqE,eAAhBrE;AACAA,gBAAIuE,SAAJvE,GAAgBA,IAAIsE,mBAApBtE;AACAA,gBAAIp6B,SAAJo6B,GAAgBA,IAAIwE,mBAApBxE;AACAA,gBAAI0E,YAAJ1E,GAAmBA,IAAIyE,sBAAvBzE;AACAA,gBAAI4E,cAAJ5E,GAAqBA,IAAI2E,wBAAzB3E;AAEAA,gBAAIn5B,IAAJm5B,GAAWA,IAAI6E,cAAf7E;AACAA,gBAAIn6B,MAAJm6B,GAAaA,IAAI8E,gBAAjB9E;AACAA,gBAAIl6B,MAAJk6B,GAAaA,IAAI+E,gBAAjB/E;AACAA,gBAAIiF,aAAJjF,GAAoBA,IAAIgF,uBAAxBhF;AACAA,gBAAIvqB,IAAJuqB,GAAWA,IAAIkF,cAAflF;AACAA,gBAAI95B,SAAJ85B,GAAgBA,IAAImF,mBAApBnF;AACAA,gBAAIqF,SAAJrF,GAAgBA,IAAIoF,mBAApBpF;AACA,mBAAOA,IAAIiE,gBAAX;AAjBF;;AAoBAjE,cAAIt6B,IAAJs6B,GAAW,SAASsF,OAAT,GAAmB;AAC5BtB,oBAAQt+B,IAARs+B;;AACA,iBAAKE,cAAL;AAFF;;AAKAlE,cAAIr6B,OAAJq6B,GAAc,SAASuF,UAAT,GAAsB;AAClCvB,oBAAQr+B,OAARq+B;;AACA,iBAAKG,iBAAL;AAFF;;AAKAnE,cAAIuE,SAAJvE,GAAgB,SAASwF,YAAT,CAAsBpM,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1C2K,oBAAQO,SAARP,CAAkB5K,CAAlB4K,EAAqB3K,CAArB2K;;AACA,iBAAKM,mBAAL,CAAyBlL,CAAzB,EAA4BC,CAA5B;AAFF;;AAKA2G,cAAIra,KAAJqa,GAAY,SAASyF,QAAT,CAAkBrM,CAAlB,EAAqBC,CAArB,EAAwB;AAClC2K,oBAAQre,KAARqe,CAAc5K,CAAd4K,EAAiB3K,CAAjB2K;;AACA,iBAAKK,eAAL,CAAqBjL,CAArB,EAAwBC,CAAxB;AAFF;;AAKA2G,cAAIp6B,SAAJo6B,GAAgB,SAAS0F,YAAT,CAAsBzwB,CAAtB,EAAyBtB,CAAzB,EAA4BuB,CAA5B,EAA+Bd,CAA/B,EAAkCzG,CAAlC,EAAqCg4B,CAArC,EAAwC;AACtD3B,oBAAQp+B,SAARo+B,CAAkB/uB,CAAlB+uB,EAAqBrwB,CAArBqwB,EAAwB9uB,CAAxB8uB,EAA2B5vB,CAA3B4vB,EAA8Br2B,CAA9Bq2B,EAAiC2B,CAAjC3B;;AACA,iBAAKQ,mBAAL,CAAyBvvB,CAAzB,EAA4BtB,CAA5B,EAA+BuB,CAA/B,EAAkCd,CAAlC,EAAqCzG,CAArC,EAAwCg4B,CAAxC;AAFF;;AAKA3F,cAAI0E,YAAJ1E,GAAmB,SAAS4F,eAAT,CAAyB3wB,CAAzB,EAA4BtB,CAA5B,EAA+BuB,CAA/B,EAAkCd,CAAlC,EAAqCzG,CAArC,EAAwCg4B,CAAxC,EAA2C;AAC5D3B,oBAAQU,YAARV,CAAqB/uB,CAArB+uB,EAAwBrwB,CAAxBqwB,EAA2B9uB,CAA3B8uB,EAA8B5vB,CAA9B4vB,EAAiCr2B,CAAjCq2B,EAAoC2B,CAApC3B;;AACA,iBAAKS,sBAAL,CAA4BxvB,CAA5B,EAA+BtB,CAA/B,EAAkCuB,CAAlC,EAAqCd,CAArC,EAAwCzG,CAAxC,EAA2Cg4B,CAA3C;AAFF;;AAKA3F,cAAI4E,cAAJ5E,GAAqB,SAAS6F,iBAAT,GAA6B;AAChD7B,oBAAQY,cAARZ;;AACA,iBAAKW,wBAAL;AAFF;;AAKA3E,cAAIza,MAAJya,GAAa,SAAS8F,SAAT,CAAmBC,KAAnB,EAA0B;AACrC/B,oBAAQze,MAARye,CAAe+B,KAAf/B;;AACA,iBAAKI,gBAAL,CAAsB2B,KAAtB;AAFF;;AAKA/F,cAAIn5B,IAAJm5B,GAAW,SAAS8F,SAAT,CAAmBpI,IAAnB,EAAyB;AAClCsG,oBAAQn9B,IAARm9B,CAAatG,IAAbsG;;AACA,iBAAKa,cAAL,CAAoBnH,IAApB;AAFF;;AAKAsC,cAAIn6B,MAAJm6B,GAAa,UAAU5G,CAAV,EAAaC,CAAb,EAAgB;AAC3B2K,oBAAQn+B,MAARm+B,CAAe5K,CAAf4K,EAAkB3K,CAAlB2K;;AACA,iBAAKc,gBAAL,CAAsB1L,CAAtB,EAAyBC,CAAzB;AAFF;;AAKA2G,cAAIl6B,MAAJk6B,GAAa,UAAU5G,CAAV,EAAaC,CAAb,EAAgB;AAC3B2K,oBAAQl+B,MAARk+B,CAAe5K,CAAf4K,EAAkB3K,CAAlB2K;;AACA,iBAAKe,gBAAL,CAAsB3L,CAAtB,EAAyBC,CAAzB;AAFF;;AAKA2G,cAAIiF,aAAJjF,GAAoB,UAAUgG,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC/M,CAAlC,EAAqCC,CAArC,EAAwC;AAC1D2K,oBAAQiB,aAARjB,CAAsBgC,IAAtBhC,EAA4BiC,IAA5BjC,EAAkCkC,IAAlClC,EAAwCmC,IAAxCnC,EAA8C5K,CAA9C4K,EAAiD3K,CAAjD2K;;AACA,iBAAKgB,uBAAL,CAA6BgB,IAA7B,EAAmCC,IAAnC,EAAyCC,IAAzC,EAA+CC,IAA/C,EAAqD/M,CAArD,EAAwDC,CAAxD;AAFF;;AAKA2G,cAAIvqB,IAAJuqB,GAAW,UAAU5G,CAAV,EAAaC,CAAb,EAAgBxC,KAAhB,EAAuBC,MAAvB,EAA+B;AACxCkN,oBAAQvuB,IAARuuB,CAAa5K,CAAb4K,EAAgB3K,CAAhB2K,EAAmBnN,KAAnBmN,EAA0BlN,MAA1BkN;;AACA,iBAAKkB,cAAL,CAAoB9L,CAApB,EAAuBC,CAAvB,EAA0BxC,KAA1B,EAAiCC,MAAjC;AAFF;;AAKAkJ,cAAI95B,SAAJ85B,GAAgB,YAAY;AAC1BgE,oBAAQ99B,SAAR89B;;AACA,iBAAKmB,mBAAL;AAFF;;AAKAnF,cAAIqF,SAAJrF,GAAgB,YAAY;AAC1BgE,oBAAQqB,SAARrB;;AACA,iBAAKoB,mBAAL;AAFF;AAzLF;;AA+LA,iBAASgB,0BAAT,CAAoCpG,GAApC,EAAyC;AACvC,cAAIA,IAAIqG,eAAR,EAAyB;AAEvBrG,gBAAIqG,eAAJrG,GAAsB,EAAtBA;AAHqC;;AAMvC,cAAIA,IAAIsG,mBAAR,EAA6B;AAC3B;AAPqC;;AASvCtG,cAAIuG,aAAJvG,GAAoBA,IAAIt6B,IAAxBs6B;AACAA,cAAIwG,gBAAJxG,GAAuBA,IAAIr6B,OAA3Bq6B;AACAA,cAAIyG,eAAJzG,GAAsBA,IAAIza,MAA1Bya;AACAA,cAAI0G,cAAJ1G,GAAqBA,IAAIra,KAAzBqa;AACAA,cAAI2G,kBAAJ3G,GAAyBA,IAAIuE,SAA7BvE;AACAA,cAAI4G,kBAAJ5G,GAAyBA,IAAIp6B,SAA7Bo6B;AACAA,cAAI6G,qBAAJ7G,GAA4BA,IAAI0E,YAAhC1E;AACAA,cAAI8G,uBAAJ9G,GAA8BA,IAAI4E,cAAlC5E;AAEAA,cAAI+G,gBAAJ/G,GAAuBA,IAAI+G,gBAAJ/G,IAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAA/CA;AACAA,cAAIqG,eAAJrG,GAAsB,EAAtBA;;AAEA,cAAI;AAIF,kBAAMgH,OAAOj4B,OAAOk4B,wBAAPl4B,CACXA,OAAOm4B,cAAPn4B,CAAsBixB,GAAtBjxB,CADWA,EAEX,WAFWA,CAAb;AAKAixB,gBAAImH,aAAJnH,GAAoBgH,KAAK/0B,GAAzB+tB;AACAA,gBAAIoH,aAAJpH,GAAoBgH,KAAKrtB,GAAzBqmB;AAEAjxB,mBAAOC,cAAPD,CAAsBixB,GAAtBjxB,EAA2B,WAA3BA,EAAwC;AACtCkD,mBAAK,SAAS/M,YAAT,CAAsB2xB,KAAtB,EAA6B;AAChC,qBAAKsQ,aAAL,CAAmBtQ,QAAQiN,sBAA3B;AAFoC;AAItCnqB,mBAAK,SAAS0tB,YAAT,GAAwB;AAC3B,uBAAO,KAAKD,aAAL,EAAP;AALoC;AAAA,aAAxCr4B;AAZF,YAoBE,OAAOu4B,CAAP,EAAU,CAzC2B;;AA2CvCv4B,iBAAOC,cAAPD,CAAsBixB,GAAtBjxB,EAA2B,qBAA3BA,EAAkD;AAChD4K,iBAAK,SAAS4tB,mBAAT,GAA+B;AAClC,qBAAO,KAAKR,gBAAZ;AAF8C;AAAA,WAAlDh4B;AAMAA,iBAAOC,cAAPD,CAAsBixB,GAAtBjxB,EAA2B,4BAA3BA,EAAyD;AACvD4K,iBAAK,SAAS6tB,0BAAT,GAAsC;AAKzC,oBAAM,CAACvyB,CAAD,EAAItB,CAAJ,EAAOuB,CAAP,EAAUd,CAAV,EAAazG,CAAb,EAAgBg4B,CAAhB,IAAqB,KAAKoB,gBAAhC;AACA,oBAAMU,QAAQxyB,IAAIb,CAAJa,GAAQtB,IAAIuB,CAA1B;AACA,oBAAMwyB,QAAQ/zB,IAAIuB,CAAJvB,GAAQsB,IAAIb,CAA1B;AAEA,qBAAO,CACLA,IAAIqzB,KADC,EAEL9zB,IAAI+zB,KAFC,EAGLxyB,IAAIwyB,KAHC,EAILzyB,IAAIwyB,KAJC,EAKJ,KAAI95B,CAAJ,GAAQuH,IAAIywB,CAAZ,IAAiB+B,KALb,EAMJ,KAAI/5B,CAAJ,GAAQsH,IAAI0wB,CAAZ,IAAiB8B,KANb,CAAP;AAVqD;AAAA,WAAzD14B;;AAqBAixB,cAAIt6B,IAAJs6B,GAAW,SAASsF,OAAT,GAAmB;AAC5B,kBAAMqC,MAAM,KAAKZ,gBAAjB;;AACA,iBAAKV,eAAL,CAAqBn1B,IAArB,CAA0By2B,GAA1B;;AACA,iBAAKZ,gBAAL,GAAwBY,IAAInzB,KAAJmzB,CAAU,CAAVA,EAAa,CAAbA,CAAxB;;AAEA,iBAAKpB,aAAL;AALF;;AAQAvG,cAAIr6B,OAAJq6B,GAAc,SAASuF,UAAT,GAAsB;AAClC,gBAAI,KAAKc,eAAL,CAAqB/3B,MAArB,KAAgC,CAApC,EAAuC;AACrCtB,8BAAK,0DAALA;AAFgC;;AAIlC,kBAAM46B,OAAO,KAAKvB,eAAL,CAAqBwB,GAArB,EAAb;;AACA,gBAAID,IAAJ,EAAU;AACR,mBAAKb,gBAAL,GAAwBa,IAAxB;;AACA,mBAAKpB,gBAAL;AAPgC;AAApC;;AAWAxG,cAAIuE,SAAJvE,GAAgB,SAASwF,YAAT,CAAsBpM,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1C,kBAAMrlB,IAAI,KAAK+yB,gBAAf;AACA/yB,cAAE,CAAFA,IAAOA,EAAE,CAAFA,IAAOolB,CAAPplB,GAAWA,EAAE,CAAFA,IAAOqlB,CAAlBrlB,GAAsBA,EAAE,CAAFA,CAA7BA;AACAA,cAAE,CAAFA,IAAOA,EAAE,CAAFA,IAAOolB,CAAPplB,GAAWA,EAAE,CAAFA,IAAOqlB,CAAlBrlB,GAAsBA,EAAE,CAAFA,CAA7BA;;AAEA,iBAAK2yB,kBAAL,CAAwBvN,CAAxB,EAA2BC,CAA3B;AALF;;AAQA2G,cAAIra,KAAJqa,GAAY,SAASyF,QAAT,CAAkBrM,CAAlB,EAAqBC,CAArB,EAAwB;AAClC,kBAAMrlB,IAAI,KAAK+yB,gBAAf;AACA/yB,cAAE,CAAFA,KAAQolB,CAARplB;AACAA,cAAE,CAAFA,KAAQolB,CAARplB;AACAA,cAAE,CAAFA,KAAQqlB,CAARrlB;AACAA,cAAE,CAAFA,KAAQqlB,CAARrlB;;AAEA,iBAAK0yB,cAAL,CAAoBtN,CAApB,EAAuBC,CAAvB;AAPF;;AAUA2G,cAAIp6B,SAAJo6B,GAAgB,SAAS0F,YAAT,CAAsBzwB,CAAtB,EAAyBtB,CAAzB,EAA4BuB,CAA5B,EAA+Bd,CAA/B,EAAkCzG,CAAlC,EAAqCg4B,CAArC,EAAwC;AACtD,kBAAM3xB,IAAI,KAAK+yB,gBAAf;AACA,iBAAKA,gBAAL,GAAwB,CACtB/yB,EAAE,CAAFA,IAAOiB,CAAPjB,GAAWA,EAAE,CAAFA,IAAOL,CADI,EAEtBK,EAAE,CAAFA,IAAOiB,CAAPjB,GAAWA,EAAE,CAAFA,IAAOL,CAFI,EAGtBK,EAAE,CAAFA,IAAOkB,CAAPlB,GAAWA,EAAE,CAAFA,IAAOI,CAHI,EAItBJ,EAAE,CAAFA,IAAOkB,CAAPlB,GAAWA,EAAE,CAAFA,IAAOI,CAJI,EAKtBJ,EAAE,CAAFA,IAAOrG,CAAPqG,GAAWA,EAAE,CAAFA,IAAO2xB,CAAlB3xB,GAAsBA,EAAE,CAAFA,CALA,EAMtBA,EAAE,CAAFA,IAAOrG,CAAPqG,GAAWA,EAAE,CAAFA,IAAO2xB,CAAlB3xB,GAAsBA,EAAE,CAAFA,CANA,CAAxB;;AASAgsB,gBAAI4G,kBAAJ5G,CAAuB/qB,CAAvB+qB,EAA0BrsB,CAA1BqsB,EAA6B9qB,CAA7B8qB,EAAgC5rB,CAAhC4rB,EAAmCryB,CAAnCqyB,EAAsC2F,CAAtC3F;AAXF;;AAcAA,cAAI0E,YAAJ1E,GAAmB,SAAS4F,eAAT,CAAyB3wB,CAAzB,EAA4BtB,CAA5B,EAA+BuB,CAA/B,EAAkCd,CAAlC,EAAqCzG,CAArC,EAAwCg4B,CAAxC,EAA2C;AAC5D,iBAAKoB,gBAAL,GAAwB,CAAC9xB,CAAD,EAAItB,CAAJ,EAAOuB,CAAP,EAAUd,CAAV,EAAazG,CAAb,EAAgBg4B,CAAhB,CAAxB;;AAEA3F,gBAAI6G,qBAAJ7G,CAA0B/qB,CAA1B+qB,EAA6BrsB,CAA7BqsB,EAAgC9qB,CAAhC8qB,EAAmC5rB,CAAnC4rB,EAAsCryB,CAAtCqyB,EAAyC2F,CAAzC3F;AAHF;;AAMAA,cAAI4E,cAAJ5E,GAAqB,SAAS6F,iBAAT,GAA6B;AAChD,iBAAKkB,gBAAL,GAAwB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAxB;;AAEA/G,gBAAI8G,uBAAJ9G;AAHF;;AAMAA,cAAIza,MAAJya,GAAa,SAAS8F,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,kBAAM+B,WAAWh3B,KAAKi3B,GAALj3B,CAASi1B,KAATj1B,CAAjB;AACA,kBAAMk3B,WAAWl3B,KAAKm3B,GAALn3B,CAASi1B,KAATj1B,CAAjB;AAEA,kBAAMkD,IAAI,KAAK+yB,gBAAf;AACA,iBAAKA,gBAAL,GAAwB,CACtB/yB,EAAE,CAAFA,IAAO8zB,QAAP9zB,GAAkBA,EAAE,CAAFA,IAAOg0B,QADH,EAEtBh0B,EAAE,CAAFA,IAAO8zB,QAAP9zB,GAAkBA,EAAE,CAAFA,IAAOg0B,QAFH,EAGtBh0B,EAAE,CAAFA,IAAO,CAACg0B,QAARh0B,GAAmBA,EAAE,CAAFA,IAAO8zB,QAHJ,EAItB9zB,EAAE,CAAFA,IAAO,CAACg0B,QAARh0B,GAAmBA,EAAE,CAAFA,IAAO8zB,QAJJ,EAKtB9zB,EAAE,CAAFA,CALsB,EAMtBA,EAAE,CAAFA,CANsB,CAAxB;;AASA,iBAAKyyB,eAAL,CAAqBV,KAArB;AAdF;AApUF;;AAsVA,cAAMmC,cAAN,CAAqB;AACnB14B,sBAAY6X,aAAZ7X,EAA2B;AACzB,iBAAK6X,aAAL,GAAqBA,aAArB;AACA,iBAAK8gB,KAAL,GAAap5B,OAAOwD,MAAPxD,CAAc,IAAdA,CAAb;AAHiB;;AAMnBq5B,oBAAU1lB,EAAV0lB,EAAcvR,KAAduR,EAAqBtR,MAArBsR,EAA6BC,cAA7BD,EAA6C;AAC3C,gBAAIE,WAAJ;;AACA,gBAAI,KAAKH,KAAL,CAAWzlB,EAAX,MAAmBpS,SAAvB,EAAkC;AAChCg4B,4BAAc,KAAKH,KAAL,CAAWzlB,EAAX,CAAd4lB;AACA,mBAAKjhB,aAAL,CAAmB2V,KAAnB,CAAyBsL,WAAzB,EAAsCzR,KAAtC,EAA6CC,MAA7C;AAEAwR,0BAAYxL,OAAZwL,CAAoB5D,YAApB4D,CAAiC,CAAjCA,EAAoC,CAApCA,EAAuC,CAAvCA,EAA0C,CAA1CA,EAA6C,CAA7CA,EAAgD,CAAhDA;AAJF,mBAKO;AACLA,4BAAc,KAAKjhB,aAAL,CAAmB9U,MAAnB,CAA0BskB,KAA1B,EAAiCC,MAAjC,CAAdwR;AACA,mBAAKH,KAAL,CAAWzlB,EAAX,IAAiB4lB,WAAjB;AATyC;;AAW3C,gBAAID,cAAJ,EAAoB;AAClBjC,yCAA2BkC,YAAYxL,OAAvCsJ;AAZyC;;AAc3C,mBAAOkC,WAAP;AApBiB;;AAuBnB7c,kBAAQ;AACN,uBAAW/I,EAAX,IAAiB,KAAKylB,KAAtB,EAA6B;AAC3B,oBAAMG,cAAc,KAAKH,KAAL,CAAWzlB,EAAX,CAApB;AACA,mBAAK2E,aAAL,CAAmBpH,OAAnB,CAA2BqoB,WAA3B;AACA,qBAAO,KAAKH,KAAL,CAAWzlB,EAAX,CAAP;AAJI;AAvBW;;AAAA;;AAgCrB,iBAAS6lB,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,gBAAMC,yBAAyB,IAA/B;AACA,gBAAMC,cAAc,IAAIp3B,UAAJ,CAAe,CACjC,CADiC,EAC9B,CAD8B,EAC3B,CAD2B,EACxB,CADwB,EACrB,CADqB,EAClB,CADkB,EACf,CADe,EACZ,CADY,EACT,CADS,EACN,EADM,EACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EACU,CADV,EACa,CADb,CAAf,CAApB;AAIA,gBAAMulB,QAAQ2R,QAAQ3R,KAAtB;AAAA,gBACEC,SAAS0R,QAAQ1R,MADnB;AAAA,gBAEE6R,SAAS9R,QAAQ,CAFnB;AAGA,cAAIjmB,CAAJ,EAAOiH,EAAP,EAAWV,CAAX,EAAcyxB,EAAd;AACA,gBAAMC,SAAS,IAAIv3B,UAAJ,CAAeq3B,UAAU7R,SAAS,CAAnB6R,CAAf,CAAf;AAGA,gBAAMG,WAAYjS,QAAQ,CAARA,GAAa,CAAC,CAAhC;AAAA,gBACEkS,QAAQP,QAAQ12B,IADlB;AAEA,gBAAMA,OAAO,IAAIR,UAAJ,CAAew3B,WAAWhS,MAA1B,CAAb;AACA,cAAIjlB,MAAM,CAAV;;AACA,eAAKjB,IAAI,CAAJA,EAAOiH,KAAKkxB,MAAMz6B,MAAvB,EAA+BsC,IAAIiH,EAAnC,EAAuCjH,GAAvC,EAA4C;AAC1C,kBAAMo4B,OAAOD,MAAMn4B,CAANm4B,CAAb;AACA,gBAAIE,OAAO,GAAX;;AACA,mBAAOA,OAAO,CAAd,EAAiB;AACfn3B,mBAAKD,KAALC,IAAck3B,OAAOC,IAAPD,GAAc,CAAdA,GAAkB,GAAhCl3B;AACAm3B,uBAAS,CAATA;AALwC;AAjBV;;AAoClC,cAAIC,QAAQ,CAAZ;AACAr3B,gBAAM,CAANA;;AACA,cAAIC,KAAKD,GAALC,MAAc,CAAlB,EAAqB;AACnB+2B,mBAAO,CAAPA,IAAY,CAAZA;AACA,cAAEK,KAAF;AAxCgC;;AA0ClC,eAAK/xB,IAAI,CAAT,EAAYA,IAAI0f,KAAhB,EAAuB1f,GAAvB,EAA4B;AAC1B,gBAAIrF,KAAKD,GAALC,MAAcA,KAAKD,MAAM,CAAXC,CAAlB,EAAiC;AAC/B+2B,qBAAO1xB,CAAP0xB,IAAY/2B,KAAKD,GAALC,IAAY,CAAZA,GAAgB,CAA5B+2B;AACA,gBAAEK,KAAF;AAHwB;;AAK1Br3B;AA/CgC;;AAiDlC,cAAIC,KAAKD,GAALC,MAAc,CAAlB,EAAqB;AACnB+2B,mBAAO1xB,CAAP0xB,IAAY,CAAZA;AACA,cAAEK,KAAF;AAnDgC;;AAqDlC,eAAKt4B,IAAI,CAAT,EAAYA,IAAIkmB,MAAhB,EAAwBlmB,GAAxB,EAA6B;AAC3BiB,kBAAMjB,IAAIk4B,QAAVj3B;AACA+2B,iBAAKh4B,IAAI+3B,MAATC;;AACA,gBAAI92B,KAAKD,MAAMi3B,QAAXh3B,MAAyBA,KAAKD,GAALC,CAA7B,EAAwC;AACtC+2B,qBAAOD,EAAPC,IAAa/2B,KAAKD,GAALC,IAAY,CAAZA,GAAgB,CAA7B+2B;AACA,gBAAEK,KAAF;AALyB;;AAS3B,gBAAIC,MAAO,MAAKt3B,GAAL,IAAY,CAAZ,GAAgB,CAAhB,KAAsBC,KAAKD,MAAMi3B,QAAXh3B,IAAuB,CAAvBA,GAA2B,CAAjD,CAAX;;AACA,iBAAKqF,IAAI,CAAT,EAAYA,IAAI0f,KAAhB,EAAuB1f,GAAvB,EAA4B;AAC1BgyB,oBACG,QAAO,CAAP,KACAr3B,KAAKD,MAAM,CAAXC,IAAgB,CAAhBA,GAAoB,CADpB,KAEAA,KAAKD,MAAMi3B,QAANj3B,GAAiB,CAAtBC,IAA2B,CAA3BA,GAA+B,CAF/B,CADHq3B;;AAIA,kBAAIT,YAAYS,GAAZT,CAAJ,EAAsB;AACpBG,uBAAOD,KAAKzxB,CAAZ0xB,IAAiBH,YAAYS,GAAZT,CAAjBG;AACA,kBAAEK,KAAF;AAPwB;;AAS1Br3B;AAnByB;;AAqB3B,gBAAIC,KAAKD,MAAMi3B,QAAXh3B,MAAyBA,KAAKD,GAALC,CAA7B,EAAwC;AACtC+2B,qBAAOD,KAAKzxB,CAAZ0xB,IAAiB/2B,KAAKD,GAALC,IAAY,CAAZA,GAAgB,CAAjC+2B;AACA,gBAAEK,KAAF;AAvByB;;AA0B3B,gBAAIA,QAAQT,sBAAZ,EAAoC;AAClC,qBAAO,IAAP;AA3ByB;AArDK;;AAoFlC52B,gBAAMi3B,YAAYhS,SAAS,CAArBgS,CAANj3B;AACA+2B,eAAKh4B,IAAI+3B,MAATC;;AACA,cAAI92B,KAAKD,GAALC,MAAc,CAAlB,EAAqB;AACnB+2B,mBAAOD,EAAPC,IAAa,CAAbA;AACA,cAAEK,KAAF;AAxFgC;;AA0FlC,eAAK/xB,IAAI,CAAT,EAAYA,IAAI0f,KAAhB,EAAuB1f,GAAvB,EAA4B;AAC1B,gBAAIrF,KAAKD,GAALC,MAAcA,KAAKD,MAAM,CAAXC,CAAlB,EAAiC;AAC/B+2B,qBAAOD,KAAKzxB,CAAZ0xB,IAAiB/2B,KAAKD,GAALC,IAAY,CAAZA,GAAgB,CAAjC+2B;AACA,gBAAEK,KAAF;AAHwB;;AAK1Br3B;AA/FgC;;AAiGlC,cAAIC,KAAKD,GAALC,MAAc,CAAlB,EAAqB;AACnB+2B,mBAAOD,KAAKzxB,CAAZ0xB,IAAiB,CAAjBA;AACA,cAAEK,KAAF;AAnGgC;;AAqGlC,cAAIA,QAAQT,sBAAZ,EAAoC;AAClC,mBAAO,IAAP;AAtGgC;;AA0GlC,gBAAMW,QAAQ,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAIV,MAAJ,EAAY,CAAC,CAAb,EAAgB,CAAhB,EAAmB,CAACA,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAf,CAAd;AACA,gBAAMW,WAAW,EAAjB;;AACA,eAAK14B,IAAI,CAAT,EAAYs4B,SAASt4B,KAAKkmB,MAA1B,EAAkClmB,GAAlC,EAAuC;AACrC,gBAAImD,IAAInD,IAAI+3B,MAAZ;AACA,kBAAMtnB,MAAMtN,IAAI8iB,KAAhB;;AACA,mBAAO9iB,IAAIsN,GAAJtN,IAAW,CAAC80B,OAAO90B,CAAP80B,CAAnB,EAA8B;AAC5B90B;AAJmC;;AAMrC,gBAAIA,MAAMsN,GAAV,EAAe;AACb;AAPmC;;AASrC,kBAAMkoB,SAAS,CAACx1B,IAAI40B,MAAL,EAAa/3B,CAAb,CAAf;AAEA,kBAAM44B,KAAKz1B,CAAX;AACA,gBAAIuG,OAAOuuB,OAAO90B,CAAP80B,CAAX;;AACA,eAAG;AACD,oBAAMY,OAAOL,MAAM9uB,IAAN8uB,CAAb;;AACA,iBAAG;AACDr1B,qBAAK01B,IAAL11B;AADF,uBAES,CAAC80B,OAAO90B,CAAP80B,CAFV;;AAIA,oBAAMa,KAAKb,OAAO90B,CAAP80B,CAAX;;AACA,kBAAIa,OAAO,CAAPA,IAAYA,OAAO,EAAvB,EAA2B;AAEzBpvB,uBAAOovB,EAAPpvB;AAEAuuB,uBAAO90B,CAAP80B,IAAY,CAAZA;AAJF,qBAKO;AAGLvuB,uBAAOovB,KAAO,OAAOpvB,IAAP,IAAgB,CAA9BA;AAEAuuB,uBAAO90B,CAAP80B,KAAcvuB,QAAQ,CAARA,GAAcA,QAAQ,CAApCuuB;AAjBD;;AAoBDU,qBAAOr4B,IAAPq4B,CAAYx1B,IAAI40B,MAAhBY,EAAyBx1B,IAAI40B,MAAJ50B,GAAc,CAAvCw1B;;AAEA,kBAAI,CAACV,OAAO90B,CAAP80B,CAAL,EAAgB;AACd,kBAAEK,KAAF;AAvBD;AAAH,qBAyBSM,OAAOz1B,CAzBhB;;AA0BAu1B,qBAASp4B,IAATo4B,CAAcC,MAAdD;AACA,cAAE14B,CAAF;AApJgC;;AAuJlC,gBAAM+4B,cAAc,UAAUz0B,CAAV,EAAa;AAC/BA,cAAExP,IAAFwP;AAEAA,cAAEyQ,KAAFzQ,CAAQ,IAAI2hB,KAAZ3hB,EAAmB,CAAC,CAAD,GAAK4hB,MAAxB5hB;AACAA,cAAEqvB,SAAFrvB,CAAY,CAAZA,EAAe,CAAC4hB,MAAhB5hB;AACAA,cAAEmwB,SAAFnwB;;AACA,iBAAK,IAAI00B,IAAI,CAAR,EAAWC,KAAKP,SAASh7B,MAA9B,EAAsCs7B,IAAIC,EAA1C,EAA8CD,GAA9C,EAAmD;AACjD,oBAAME,IAAIR,SAASM,CAATN,CAAV;AACAp0B,gBAAErP,MAAFqP,CAAS40B,EAAE,CAAFA,CAAT50B,EAAe40B,EAAE,CAAFA,CAAf50B;;AACA,mBAAK,IAAI60B,IAAI,CAAR,EAAWC,KAAKF,EAAEx7B,MAAvB,EAA+By7B,IAAIC,EAAnC,EAAuCD,KAAK,CAA5C,EAA+C;AAC7C70B,kBAAEpP,MAAFoP,CAAS40B,EAAEC,CAAFD,CAAT50B,EAAe40B,EAAEC,IAAI,CAAND,CAAf50B;AAJ+C;AANpB;;AAa/BA,cAAE5O,IAAF4O;AACAA,cAAEmwB,SAAFnwB;AACAA,cAAEvP,OAAFuP;AAfF;;AAkBA,iBAAOy0B,WAAP;AA/hBF;;AAkiBA,cAAMM,gBAAN,CAAuB;AACrBz6B,sBAAYqnB,KAAZrnB,EAAmBsnB,MAAnBtnB,EAA2B;AAEzB,iBAAK06B,YAAL,GAAoB,KAApB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,aAAL,GAAqB,CAArB;AACA,iBAAKC,UAAL,GAAkB1vC,qBAAlB;AACA,iBAAK2vC,eAAL,GAAuB,CAAvB;AACA,iBAAKC,UAAL,GAAkB3vC,0BAAlB;AACA,iBAAK4vC,OAAL,GAAe,CAAf;AAEA,iBAAKpR,CAAL,GAAS,CAAT;AACA,iBAAKC,CAAL,GAAS,CAAT;AAEA,iBAAKoR,KAAL,GAAa,CAAb;AACA,iBAAKC,KAAL,GAAa,CAAb;AAEA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,UAAL,GAAkB,CAAlB;AACA,iBAAKC,iBAAL,GAAyB5uC,wBAAkBC,IAA3C;AACA,iBAAK4uC,QAAL,GAAgB,CAAhB;AAEA,iBAAKC,SAAL,GAAiB,SAAjB;AACA,iBAAKC,WAAL,GAAmB,SAAnB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;AAEA,iBAAKC,SAAL,GAAiB,CAAjB;AACA,iBAAKC,WAAL,GAAmB,CAAnB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACA,iBAAKC,YAAL,GAAoB,IAApB;AAEA,iBAAKC,sBAAL,CAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO3U,KAAP,EAAcC,MAAd,CAA5B;AAjCmB;;AAoCrBoC,kBAAQ;AACN,kBAAMA,QAAQnqB,OAAOwD,MAAPxD,CAAc,IAAdA,CAAd;AACAmqB,kBAAMuS,OAANvS,GAAgB,KAAKuS,OAAL,CAAaj3B,KAAb,EAAhB0kB;AACA,mBAAOA,KAAP;AAvCmB;;AA0CrBwS,0BAAgBtS,CAAhBsS,EAAmBrS,CAAnBqS,EAAsB;AACpB,iBAAKtS,CAAL,GAASA,CAAT;AACA,iBAAKC,CAAL,GAASA,CAAT;AA5CmB;;AA+CrBsS,2BAAiB/lC,SAAjB+lC,EAA4BvS,CAA5BuS,EAA+BtS,CAA/BsS,EAAkC;AAChC,aAACvS,CAAD,EAAIC,CAAJ,IAAS9lB,WAAKO,cAALP,CAAoB,CAAC6lB,CAAD,EAAIC,CAAJ,CAApB9lB,EAA4B3N,SAA5B2N,CAAT;AACA,iBAAKq4B,IAAL,GAAY96B,KAAKC,GAALD,CAAS,KAAK86B,IAAd96B,EAAoBsoB,CAApBtoB,CAAZ;AACA,iBAAK+6B,IAAL,GAAY/6B,KAAKC,GAALD,CAAS,KAAK+6B,IAAd/6B,EAAoBuoB,CAApBvoB,CAAZ;AACA,iBAAKg7B,IAAL,GAAYh7B,KAAK6D,GAAL7D,CAAS,KAAKg7B,IAAdh7B,EAAoBsoB,CAApBtoB,CAAZ;AACA,iBAAKi7B,IAAL,GAAYj7B,KAAK6D,GAAL7D,CAAS,KAAKi7B,IAAdj7B,EAAoBuoB,CAApBvoB,CAAZ;AApDmB;;AAuDrBk7B,gCAAsBpmC,SAAtBomC,EAAiC71B,EAAjC61B,EAAqC51B,EAArC41B,EAAyC31B,EAAzC21B,EAA6C11B,EAA7C01B,EAAiDz1B,EAAjDy1B,EAAqDx1B,EAArDw1B,EAAyDv1B,EAAzDu1B,EAA6Dt1B,EAA7Ds1B,EAAiE;AAC/D,kBAAMC,MAAM14B,WAAK2C,iBAAL3C,CAAuB4C,EAAvB5C,EAA2B6C,EAA3B7C,EAA+B8C,EAA/B9C,EAAmC+C,EAAnC/C,EAAuCgD,EAAvChD,EAA2CiD,EAA3CjD,EAA+CkD,EAA/ClD,EAAmDmD,EAAnDnD,CAAZ;;AACA,iBAAKo4B,gBAAL,CAAsB/lC,SAAtB,EAAiCqmC,IAAI,CAAJA,CAAjC,EAAyCA,IAAI,CAAJA,CAAzC;AACA,iBAAKN,gBAAL,CAAsB/lC,SAAtB,EAAiCqmC,IAAI,CAAJA,CAAjC,EAAyCA,IAAI,CAAJA,CAAzC;AA1DmB;;AA6DrBC,+BAA+D;AAAA,gBAA5CC,QAA4C,uEAAjCC,yBAASjwC,IAAwB;AAAA,gBAAlByJ,SAAkB,uEAAN,IAAM;AAC7D,kBAAMqmC,MAAM,CAAC,KAAKL,IAAN,EAAY,KAAKC,IAAjB,EAAuB,KAAKC,IAA5B,EAAkC,KAAKC,IAAvC,CAAZ;;AACA,gBAAII,aAAaC,yBAAShwC,MAA1B,EAAkC;AAChC,kBAAI,CAACwJ,SAAL,EAAgB;AACdqH,uCAAY,6CAAZA;AAF8B;;AAMhC,oBAAM0Y,QAAQpS,WAAKwB,6BAALxB,CAAmC3N,SAAnC2N,CAAd;;AACA,oBAAM84B,aAAc1mB,MAAM,CAANA,IAAW,KAAK0lB,SAAhB1lB,GAA6B,CAAjD;AACA,oBAAM2mB,aAAc3mB,MAAM,CAANA,IAAW,KAAK0lB,SAAhB1lB,GAA6B,CAAjD;AACAsmB,kBAAI,CAAJA,KAAUI,UAAVJ;AACAA,kBAAI,CAAJA,KAAUK,UAAVL;AACAA,kBAAI,CAAJA,KAAUI,UAAVJ;AACAA,kBAAI,CAAJA,KAAUK,UAAVL;AAd2D;;AAgB7D,mBAAOA,GAAP;AA7EmB;;AAgFrBM,+BAAqB;AACnB,kBAAM72B,YAAYnC,WAAKmC,SAALnC,CAAe,KAAKk4B,OAApBl4B,EAA6B,KAAK24B,kBAAL,EAA7B34B,CAAlB;;AACA,iBAAKi4B,sBAAL,CAA4B91B,aAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAzC;AAlFmB;;AAqFrB81B,iCAAuBS,GAAvBT,EAA4B;AAC1B,iBAAKC,OAAL,GAAeQ,GAAf;AACA,iBAAKL,IAAL,GAAYY,QAAZ;AACA,iBAAKX,IAAL,GAAYW,QAAZ;AACA,iBAAKV,IAAL,GAAY,CAAZ;AACA,iBAAKC,IAAL,GAAY,CAAZ;AA1FmB;;AA6FrBU,sCAAsE;AAAA,gBAA5CN,QAA4C,uEAAjCC,yBAASjwC,IAAwB;AAAA,gBAAlByJ,SAAkB,uEAAN,IAAM;AACpE,mBAAO2N,WAAKmC,SAALnC,CACL,KAAKk4B,OADAl4B,EAEL,KAAK24B,kBAAL,CAAwBC,QAAxB,EAAkCvmC,SAAlC,CAFK2N,CAAP;AA9FmB;;AAAA;;AAqGvB,iBAASm5B,kBAAT,CAA4B1M,GAA5B,EAAiCwI,OAAjC,EAA+D;AAAA,cAArB+C,YAAqB,uEAAN,IAAM;;AAC7D,cAAI,OAAOoB,SAAP,KAAqB,WAArB,IAAoCnE,mBAAmBmE,SAA3D,EAAsE;AACpE3M,gBAAI4M,YAAJ5M,CAAiBwI,OAAjBxI,EAA0B,CAA1BA,EAA6B,CAA7BA;AACA;AAH2D;;AAiB7D,gBAAMlJ,SAAS0R,QAAQ1R,MAAvB;AAAA,gBACED,QAAQ2R,QAAQ3R,KADlB;AAEA,gBAAMgW,qBAAqB/V,SAAS+M,iBAApC;AACA,gBAAMiJ,aAAc,UAASD,kBAAT,IAA+BhJ,iBAAnD;AACA,gBAAMkJ,cAAcF,uBAAuB,CAAvBA,GAA2BC,UAA3BD,GAAwCC,aAAa,CAAzE;AAEA,gBAAME,eAAehN,IAAIiN,eAAJjN,CAAoBnJ,KAApBmJ,EAA2B6D,iBAA3B7D,CAArB;AACA,cAAIkN,SAAS,CAAb;AAAA,cACEC,OADF;AAEA,gBAAM7xB,MAAMktB,QAAQ12B,IAApB;AACA,gBAAMs7B,OAAOJ,aAAal7B,IAA1B;AACA,cAAIlB,CAAJ,EAAOuG,CAAP,EAAUk2B,eAAV,EAA2BC,gBAA3B;AAEA,cAAIC,cAAJ,EAAoBC,gBAApB,EAAsCC,eAAtC,EAAuDC,eAAvD;;AACA,cAAInC,YAAJ,EAAkB;AAChB,oBAAQA,aAAaj9B,MAArB;AACE,mBAAK,CAAL;AACEi/B,iCAAiBhC,aAAa,CAAbA,CAAjBgC;AACAC,mCAAmBjC,aAAa,CAAbA,CAAnBiC;AACAC,kCAAkBlC,aAAa,CAAbA,CAAlBkC;AACAC,kCAAkBnC,aAAa,CAAbA,CAAlBmC;AACA;;AACF,mBAAK,CAAL;AACEH,iCAAiBhC,aAAa,CAAbA,CAAjBgC;AACAC,mCAAmBjC,aAAa,CAAbA,CAAnBiC;AACAC,kCAAkBlC,aAAa,CAAbA,CAAlBkC;AACAC,kCAAkBnC,aAAa,CAAbA,CAAlBmC;AACA;AAZJ;AAhC2D;;AAkD7D,cAAIlF,QAAQmF,IAARnF,KAAiB3rC,gBAAUC,cAA/B,EAA+C;AAE7C,kBAAM8wC,YAAYtyB,IAAI5J,UAAtB;AACA,kBAAMm8B,SAAS,IAAIj7B,WAAJ,CAAgBw6B,KAAKv6B,MAArB,EAA6B,CAA7B,EAAgCu6B,KAAK17B,UAAL07B,IAAmB,CAAnD,CAAf;AACA,kBAAMU,mBAAmBD,OAAOv/B,MAAhC;AACA,kBAAMy/B,cAAelX,QAAQ,CAARA,IAAc,CAAnC;AACA,gBAAImX,QAAQ,UAAZ;AACA,gBAAIC,QAAQn7B,2BAAqBhE,KAArBgE,GAA6B,UAA7BA,GAA0C,UAAtD;;AAEA,gBAAI46B,eAAJ,EAAqB;AACnB,kBAAIA,gBAAgB,CAAhBA,MAAuB,IAAvBA,IAA+BA,gBAAgB,IAAhBA,MAA0B,CAA7D,EAAgE;AAC9D,iBAACM,KAAD,EAAQC,KAAR,IAAiB,CAACA,KAAD,EAAQD,KAAR,CAAjB;AAFiB;AATwB;;AAe7C,iBAAKp9B,IAAI,CAAT,EAAYA,IAAIm8B,WAAhB,EAA6Bn8B,GAA7B,EAAkC;AAChCy8B,gCAAkBz8B,IAAIk8B,UAAJl8B,GAAiBizB,iBAAjBjzB,GAAqCi8B,kBAAvDQ;AACAF,wBAAU,CAAVA;;AACA,mBAAKh2B,IAAI,CAAT,EAAYA,IAAIk2B,eAAhB,EAAiCl2B,GAAjC,EAAsC;AACpC,sBAAM+2B,UAAUN,YAAYV,MAA5B;AACA,oBAAItD,IAAI,CAAR;AACA,sBAAMuE,OAAOD,UAAUH,WAAVG,GAAwBrX,KAAxBqX,GAAgCA,UAAU,CAAVA,GAAc,CAA3D;AACA,sBAAME,eAAeD,OAAO,CAAC,CAA7B;AACA,oBAAIlF,OAAO,CAAX;AACA,oBAAIoF,UAAU,CAAd;;AACA,uBAAOzE,IAAIwE,YAAX,EAAyBxE,KAAK,CAA9B,EAAiC;AAC/ByE,4BAAU/yB,IAAI4xB,QAAJ5xB,CAAV+yB;AACAR,yBAAOV,SAAPU,IAAoBQ,UAAU,GAAVA,GAAgBL,KAAhBK,GAAwBJ,KAA5CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,EAAVA,GAAeL,KAAfK,GAAuBJ,KAA3CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,EAAVA,GAAeL,KAAfK,GAAuBJ,KAA3CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,EAAVA,GAAeL,KAAfK,GAAuBJ,KAA3CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,CAAVA,GAAcL,KAAdK,GAAsBJ,KAA1CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,CAAVA,GAAcL,KAAdK,GAAsBJ,KAA1CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,CAAVA,GAAcL,KAAdK,GAAsBJ,KAA1CJ;AACAA,yBAAOV,SAAPU,IAAoBQ,UAAU,CAAVA,GAAcL,KAAdK,GAAsBJ,KAA1CJ;AAhBkC;;AAkBpC,uBAAOjE,IAAIuE,IAAX,EAAiBvE,GAAjB,EAAsB;AACpB,sBAAIX,SAAS,CAAb,EAAgB;AACdoF,8BAAU/yB,IAAI4xB,QAAJ5xB,CAAV+yB;AACApF,2BAAO,GAAPA;AAHkB;;AAMpB4E,yBAAOV,SAAPU,IAAoBQ,UAAUpF,IAAVoF,GAAiBL,KAAjBK,GAAyBJ,KAA7CJ;AACA5E,2BAAS,CAATA;AAzBkC;AAHN;;AAgChC,qBAAOkE,UAAUW,gBAAjB,EAAmC;AACjCD,uBAAOV,SAAPU,IAAoB,CAApBA;AAjC8B;;AAoChC7N,kBAAI4M,YAAJ5M,CAAiBgN,YAAjBhN,EAA+B,CAA/BA,EAAkCpvB,IAAIizB,iBAAtC7D;AAnD2C;AAA/C,iBAqDO,IAAIwI,QAAQmF,IAARnF,KAAiB3rC,gBAAUG,UAA/B,EAA2C;AAEhD,kBAAMsxC,kBAAkB,CAAC,EACvBf,kBACAC,gBADAD,IAEAE,eAHuB,CAAzB;AAMAt2B,gBAAI,CAAJA;AACAm2B,+BAAmBzW,QAAQgN,iBAARhN,GAA4B,CAA/CyW;;AACA,iBAAK18B,IAAI,CAAT,EAAYA,IAAIk8B,UAAhB,EAA4Bl8B,GAA5B,EAAiC;AAC/Bw8B,mBAAKn7B,GAALm7B,CAAS9xB,IAAIrK,QAAJqK,CAAa4xB,MAAb5xB,EAAqB4xB,SAASI,gBAA9BhyB,CAAT8xB;AACAF,wBAAUI,gBAAVJ;;AAEA,kBAAIoB,eAAJ,EAAqB;AACnB,qBAAK,IAAI1E,IAAI,CAAb,EAAgBA,IAAI0D,gBAApB,EAAsC1D,KAAK,CAA3C,EAA8C;AAC5C,sBAAI2D,cAAJ,EAAoB;AAClBH,yBAAKxD,IAAI,CAATwD,IAAcG,eAAeH,KAAKxD,IAAI,CAATwD,CAAfG,CAAdH;AAF0C;;AAI5C,sBAAII,gBAAJ,EAAsB;AACpBJ,yBAAKxD,IAAI,CAATwD,IAAcI,iBAAiBJ,KAAKxD,IAAI,CAATwD,CAAjBI,CAAdJ;AAL0C;;AAO5C,sBAAIK,eAAJ,EAAqB;AACnBL,yBAAKxD,IAAI,CAATwD,IAAcK,gBAAgBL,KAAKxD,IAAI,CAATwD,CAAhBK,CAAdL;AAR0C;AAD3B;AAJU;;AAkB/BpN,kBAAI4M,YAAJ5M,CAAiBgN,YAAjBhN,EAA+B,CAA/BA,EAAkC7oB,CAAlC6oB;AACA7oB,mBAAK0sB,iBAAL1sB;AA7B8C;;AA+BhD,gBAAIvG,IAAIm8B,WAAR,EAAqB;AACnBO,iCAAmBzW,QAAQgW,kBAARhW,GAA6B,CAAhDyW;AACAF,mBAAKn7B,GAALm7B,CAAS9xB,IAAIrK,QAAJqK,CAAa4xB,MAAb5xB,EAAqB4xB,SAASI,gBAA9BhyB,CAAT8xB;;AAEA,kBAAIkB,eAAJ,EAAqB;AACnB,qBAAK,IAAI1E,IAAI,CAAb,EAAgBA,IAAI0D,gBAApB,EAAsC1D,KAAK,CAA3C,EAA8C;AAC5C,sBAAI2D,cAAJ,EAAoB;AAClBH,yBAAKxD,IAAI,CAATwD,IAAcG,eAAeH,KAAKxD,IAAI,CAATwD,CAAfG,CAAdH;AAF0C;;AAI5C,sBAAII,gBAAJ,EAAsB;AACpBJ,yBAAKxD,IAAI,CAATwD,IAAcI,iBAAiBJ,KAAKxD,IAAI,CAATwD,CAAjBI,CAAdJ;AAL0C;;AAO5C,sBAAIK,eAAJ,EAAqB;AACnBL,yBAAKxD,IAAI,CAATwD,IAAcK,gBAAgBL,KAAKxD,IAAI,CAATwD,CAAhBK,CAAdL;AAR0C;AAD3B;AAJF;;AAkBnBpN,kBAAI4M,YAAJ5M,CAAiBgN,YAAjBhN,EAA+B,CAA/BA,EAAkC7oB,CAAlC6oB;AAjD8C;AAA3C,iBAmDA,IAAIwI,QAAQmF,IAARnF,KAAiB3rC,gBAAUE,SAA/B,EAA0C;AAE/C,kBAAMuxC,kBAAkB,CAAC,EACvBf,kBACAC,gBADAD,IAEAE,eAHuB,CAAzB;AAMAJ,8BAAkBxJ,iBAAlBwJ;AACAC,+BAAmBzW,QAAQwW,eAA3BC;;AACA,iBAAK18B,IAAI,CAAT,EAAYA,IAAIm8B,WAAhB,EAA6Bn8B,GAA7B,EAAkC;AAChC,kBAAIA,KAAKk8B,UAAT,EAAqB;AACnBO,kCAAkBR,kBAAlBQ;AACAC,mCAAmBzW,QAAQwW,eAA3BC;AAH8B;;AAMhCH,wBAAU,CAAVA;;AACA,mBAAKh2B,IAAIm2B,gBAAT,EAA2Bn2B,GAA3B,GAAkC;AAChCi2B,qBAAKD,SAALC,IAAkB9xB,IAAI4xB,QAAJ5xB,CAAlB8xB;AACAA,qBAAKD,SAALC,IAAkB9xB,IAAI4xB,QAAJ5xB,CAAlB8xB;AACAA,qBAAKD,SAALC,IAAkB9xB,IAAI4xB,QAAJ5xB,CAAlB8xB;AACAA,qBAAKD,SAALC,IAAkB,GAAlBA;AAX8B;;AAchC,kBAAIkB,eAAJ,EAAqB;AACnB,qBAAK,IAAI1E,IAAI,CAAb,EAAgBA,IAAIuD,OAApB,EAA6BvD,KAAK,CAAlC,EAAqC;AACnC,sBAAI2D,cAAJ,EAAoB;AAClBH,yBAAKxD,IAAI,CAATwD,IAAcG,eAAeH,KAAKxD,IAAI,CAATwD,CAAfG,CAAdH;AAFiC;;AAInC,sBAAII,gBAAJ,EAAsB;AACpBJ,yBAAKxD,IAAI,CAATwD,IAAcI,iBAAiBJ,KAAKxD,IAAI,CAATwD,CAAjBI,CAAdJ;AALiC;;AAOnC,sBAAIK,eAAJ,EAAqB;AACnBL,yBAAKxD,IAAI,CAATwD,IAAcK,gBAAgBL,KAAKxD,IAAI,CAATwD,CAAhBK,CAAdL;AARiC;AADlB;AAdW;;AA4BhCpN,kBAAI4M,YAAJ5M,CAAiBgN,YAAjBhN,EAA+B,CAA/BA,EAAkCpvB,IAAIizB,iBAAtC7D;AAtC6C;AAA1C,iBAwCA;AACL,kBAAM,IAAI9yB,KAAJ,CAAW,mBAAkBs7B,QAAQmF,IAA3B,EAAV,CAAN;AAnM2D;AAvoB/D;;AA80BA,iBAASY,kBAAT,CAA4BvO,GAA5B,EAAiCwI,OAAjC,EAA0C;AACxC,gBAAM1R,SAAS0R,QAAQ1R,MAAvB;AAAA,gBACED,QAAQ2R,QAAQ3R,KADlB;AAEA,gBAAMgW,qBAAqB/V,SAAS+M,iBAApC;AACA,gBAAMiJ,aAAc,UAASD,kBAAT,IAA+BhJ,iBAAnD;AACA,gBAAMkJ,cAAcF,uBAAuB,CAAvBA,GAA2BC,UAA3BD,GAAwCC,aAAa,CAAzE;AAEA,gBAAME,eAAehN,IAAIiN,eAAJjN,CAAoBnJ,KAApBmJ,EAA2B6D,iBAA3B7D,CAArB;AACA,cAAIkN,SAAS,CAAb;AACA,gBAAM5xB,MAAMktB,QAAQ12B,IAApB;AACA,gBAAMs7B,OAAOJ,aAAal7B,IAA1B;;AAEA,eAAK,IAAIlB,IAAI,CAAb,EAAgBA,IAAIm8B,WAApB,EAAiCn8B,GAAjC,EAAsC;AACpC,kBAAMy8B,kBACJz8B,IAAIk8B,UAAJl8B,GAAiBizB,iBAAjBjzB,GAAqCi8B,kBADvC;AAKA,gBAAIM,UAAU,CAAd;;AACA,iBAAK,IAAIh2B,IAAI,CAAb,EAAgBA,IAAIk2B,eAApB,EAAqCl2B,GAArC,EAA0C;AACxC,kBAAI6xB,IAAJ;AAAA,kBACEC,OAAO,CADT;;AAEA,mBAAK,IAAIW,IAAI,CAAb,EAAgBA,IAAI/S,KAApB,EAA2B+S,GAA3B,EAAgC;AAC9B,oBAAI,CAACX,IAAL,EAAW;AACTD,yBAAO1tB,IAAI4xB,QAAJ5xB,CAAP0tB;AACAC,yBAAO,GAAPA;AAH4B;;AAK9BmE,qBAAKD,OAALC,IAAgBpE,OAAOC,IAAPD,GAAc,CAAdA,GAAkB,GAAlCoE;AACAD,2BAAW,CAAXA;AACAlE,yBAAS,CAATA;AAVsC;AAPN;;AAoBpCjJ,gBAAI4M,YAAJ5M,CAAiBgN,YAAjBhN,EAA+B,CAA/BA,EAAkCpvB,IAAIizB,iBAAtC7D;AAhCsC;AA90B1C;;AAk3BA,iBAASwO,YAAT,CAAsBC,SAAtB,EAAiCzK,OAAjC,EAA0C;AACxC,gBAAM0K,aAAa,CACjB,aADiB,EAEjB,WAFiB,EAGjB,UAHiB,EAIjB,aAJiB,EAKjB,WALiB,EAMjB,SANiB,EAOjB,UAPiB,EAQjB,YARiB,EASjB,0BATiB,EAUjB,MAViB,CAAnB;;AAYA,eAAK,IAAI99B,IAAI,CAAR,EAAWiH,KAAK62B,WAAWpgC,MAAhC,EAAwCsC,IAAIiH,EAA5C,EAAgDjH,GAAhD,EAAqD;AACnD,kBAAM+9B,WAAWD,WAAW99B,CAAX89B,CAAjB;;AACA,gBAAID,UAAUE,QAAVF,MAAwBn+B,SAA5B,EAAuC;AACrC0zB,sBAAQ2K,QAAR3K,IAAoByK,UAAUE,QAAVF,CAApBzK;AAHiD;AAbb;;AAmBxC,cAAIyK,UAAUG,WAAVH,KAA0Bn+B,SAA9B,EAAyC;AACvC0zB,oBAAQ4K,WAAR5K,CAAoByK,UAAUI,WAAVJ,EAApBzK;AACAA,oBAAQ8K,cAAR9K,GAAyByK,UAAUK,cAAnC9K;AArBsC;AAl3B1C;;AA24BA,iBAAS+K,iBAAT,CAA2B/O,GAA3B,EAAgC;AAC9BA,cAAIgP,WAAJhP,GAAkB,SAAlBA;AACAA,cAAIiP,SAAJjP,GAAgB,SAAhBA;AACAA,cAAIkP,QAAJlP,GAAe,SAAfA;AACAA,cAAImP,WAAJnP,GAAkB,CAAlBA;AACAA,cAAIqL,SAAJrL,GAAgB,CAAhBA;AACAA,cAAIoP,OAAJpP,GAAc,MAAdA;AACAA,cAAIqP,QAAJrP,GAAe,OAAfA;AACAA,cAAIsP,UAAJtP,GAAiB,EAAjBA;AACAA,cAAIuP,wBAAJvP,GAA+B,aAA/BA;AACAA,cAAI70B,IAAJ60B,GAAW,iBAAXA;;AACA,cAAIA,IAAI4O,WAAJ5O,KAAoB1vB,SAAxB,EAAmC;AACjC0vB,gBAAI4O,WAAJ5O,CAAgB,EAAhBA;AACAA,gBAAI8O,cAAJ9O,GAAqB,CAArBA;AAb4B;AA34BhC;;AA45BA,iBAASwP,oBAAT,CAA8Bn/B,KAA9B,EAAqCo/B,EAArC,EAAyCC,EAAzC,EAA6CC,EAA7C,EAAiD;AAC/C,gBAAMrhC,SAAS+B,MAAM/B,MAArB;;AACA,eAAK,IAAIsC,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,KAAK,CAAjC,EAAoC;AAClC,kBAAMg/B,QAAQv/B,MAAMO,CAANP,CAAd;;AACA,gBAAIu/B,UAAU,CAAd,EAAiB;AACfv/B,oBAAMO,IAAI,CAAVP,IAAeo/B,EAAfp/B;AACAA,oBAAMO,IAAI,CAAVP,IAAeq/B,EAAfr/B;AACAA,oBAAMO,IAAI,CAAVP,IAAes/B,EAAft/B;AAHF,mBAIO,IAAIu/B,QAAQ,GAAZ,EAAiB;AACtB,oBAAMC,SAAS,MAAMD,KAArB;AACAv/B,oBAAMO,IAAI,CAAVP,IAAgBA,MAAMO,IAAI,CAAVP,IAAeu/B,KAAfv/B,GAAuBo/B,KAAKI,MAA5Bx/B,IAAuC,CAAvDA;AACAA,oBAAMO,IAAI,CAAVP,IAAgBA,MAAMO,IAAI,CAAVP,IAAeu/B,KAAfv/B,GAAuBq/B,KAAKG,MAA5Bx/B,IAAuC,CAAvDA;AACAA,oBAAMO,IAAI,CAAVP,IAAgBA,MAAMO,IAAI,CAAVP,IAAeu/B,KAAfv/B,GAAuBs/B,KAAKE,MAA5Bx/B,IAAuC,CAAvDA;AAVgC;AAFW;AA55BjD;;AA66BA,iBAASy/B,iBAAT,CAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,WAAhD,EAA6D;AAC3D,gBAAM3hC,SAASyhC,SAASzhC,MAAxB;AACA,gBAAMqX,QAAQ,IAAI,GAAlB;;AACA,eAAK,IAAI/U,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,KAAK,CAAjC,EAAoC;AAClC,kBAAMg/B,QAAQK,cAAcA,YAAYF,SAASn/B,CAATm/B,CAAZE,CAAdA,GAAyCF,SAASn/B,CAATm/B,CAAvD;AACAC,sBAAUp/B,CAAVo/B,IAAgBA,UAAUp/B,CAAVo/B,IAAeJ,KAAfI,GAAuBrqB,KAAvBqqB,GAAgC,CAAhDA;AALyD;AA76B7D;;AAs7BA,iBAASE,sBAAT,CAAgCH,QAAhC,EAA0CC,SAA1C,EAAqDC,WAArD,EAAkE;AAChE,gBAAM3hC,SAASyhC,SAASzhC,MAAxB;;AACA,eAAK,IAAIsC,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,KAAK,CAAjC,EAAoC;AAClC,kBAAMyoB,IACJ0W,SAASn/B,IAAI,CAAbm/B,IAAkB,EAAlBA,GACAA,SAASn/B,IAAI,CAAbm/B,IAAkB,GADlBA,GAEAA,SAASn/B,IAAI,CAAbm/B,IAAkB,EAHpB;AAIAC,sBAAUp/B,CAAVo/B,IAAeC,cACVD,UAAUp/B,CAAVo/B,IAAeC,YAAY5W,KAAK,CAAjB4W,CAAfD,IAAuC,CAD7BC,GAEVD,UAAUp/B,CAAVo/B,IAAe3W,CAAf2W,IAAqB,EAF1BA;AAP8D;AAt7BlE;;AAm8BA,iBAASG,mBAAT,CACEC,OADF,EAEEC,QAFF,EAGExZ,KAHF,EAIEC,MAJF,EAKEwZ,OALF,EAMEC,QANF,EAOEN,WAPF,EAQEO,YARF,EASEC,YATF,EAUEC,WAVF,EAWEC,WAXF,EAYE;AACA,gBAAMC,cAAc,CAAC,CAACL,QAAtB;AACA,gBAAMd,KAAKmB,cAAcL,SAAS,CAATA,CAAdK,GAA4B,CAAvC;AACA,gBAAMlB,KAAKkB,cAAcL,SAAS,CAATA,CAAdK,GAA4B,CAAvC;AACA,gBAAMjB,KAAKiB,cAAcL,SAAS,CAATA,CAAdK,GAA4B,CAAvC;AAEA,cAAIC,SAAJ;;AACA,cAAIP,YAAY,YAAhB,EAA8B;AAC5BO,wBAAYX,sBAAZW;AADF,iBAEO;AACLA,wBAAYf,iBAAZe;AAVF;;AAcA,gBAAMC,oBAAoB,OAA1B;AACA,gBAAMC,YAAYjgC,KAAKC,GAALD,CAASgmB,MAAThmB,EAAiBA,KAAKkgC,IAALlgC,CAAUggC,oBAAoBja,KAA9B/lB,CAAjBA,CAAlB;;AACA,eAAK,IAAImgC,MAAM,CAAf,EAAkBA,MAAMna,MAAxB,EAAgCma,OAAOF,SAAvC,EAAkD;AAChD,kBAAMG,cAAcpgC,KAAKC,GAALD,CAASigC,SAATjgC,EAAoBgmB,SAASma,GAA7BngC,CAApB;AACA,kBAAMi/B,WAAWK,QAAQhQ,YAARgQ,CACfI,eAAeE,WADAN,EAEfa,OAAOR,eAAeE,WAAtBM,CAFeb,EAGfvZ,KAHeuZ,EAIfc,WAJed,CAAjB;AAMA,kBAAMJ,YAAYK,SAASjQ,YAATiQ,CAChBG,YADgBH,EAEhBY,MAAMR,YAFUJ,EAGhBxZ,KAHgBwZ,EAIhBa,WAJgBb,CAAlB;;AAOA,gBAAIO,WAAJ,EAAiB;AACfpB,mCAAqBO,SAASj+B,IAA9B09B,EAAoCC,EAApCD,EAAwCE,EAAxCF,EAA4CG,EAA5CH;AAhB8C;;AAkBhDqB,sBAAUd,SAASj+B,IAAnB++B,EAAyBb,UAAUl+B,IAAnC++B,EAAyCZ,WAAzCY;AAEAR,qBAASzD,YAATyD,CAAsBL,SAAtBK,EAAiCG,YAAjCH,EAA+CY,MAAMR,YAArDJ;AApCF;AA/8BF;;AAu/BA,iBAASc,YAAT,CAAsBnR,GAAtB,EAA2B/0B,KAA3B,EAAkColC,QAAlC,EAA4Ce,QAA5C,EAAsD;AACpD,gBAAMZ,eAAeY,SAAS,CAATA,CAArB;AACA,gBAAMX,eAAeW,SAAS,CAATA,CAArB;AACA,gBAAMC,aAAaD,SAAS,CAATA,IAAcZ,YAAjC;AACA,gBAAMc,cAAcF,SAAS,CAATA,IAAcX,YAAlC;;AACA,cAAIY,eAAe,CAAfA,IAAoBC,gBAAgB,CAAxC,EAA2C;AACzC;AANkD;;AAQpDnB,8BACEllC,MAAM6xB,OADRqT,EAEEE,QAFFF,EAGEkB,UAHFlB,EAIEmB,WAJFnB,EAKEllC,MAAMqlC,OALRH,EAMEllC,MAAMslC,QANRJ,EAOEllC,MAAMglC,WAPRE,EAQEK,YARFL,EASEM,YATFN,EAUEllC,MAAM4a,OAVRsqB,EAWEllC,MAAM6a,OAXRqqB;AAaAnQ,cAAIt6B,IAAJs6B;AACAA,cAAImP,WAAJnP,GAAkB,CAAlBA;AACAA,cAAIuP,wBAAJvP,GAA+B,aAA/BA;AACAA,cAAI0E,YAAJ1E,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,CAAvBA,EAA0B,CAA1BA,EAA6B,CAA7BA,EAAgC,CAAhCA;AACAA,cAAIuR,SAAJvR,CAAcqQ,SAAS/a,MAAvB0K,EAA+B,CAA/BA,EAAkC,CAAlCA;AACAA,cAAIr6B,OAAJq6B;AAjhCF;;AAohCA,iBAASwR,wBAAT,CAAkC5rC,SAAlC,EAA6C6rC,WAA7C,EAA0D;AACxD,gBAAM9rB,QAAQpS,WAAKwB,6BAALxB,CAAmC3N,SAAnC2N,CAAd;;AAGAoS,gBAAM,CAANA,IAAW7U,KAAK4gC,MAAL5gC,CAAY6U,MAAM,CAANA,CAAZ7U,CAAX6U;AACAA,gBAAM,CAANA,IAAW7U,KAAK4gC,MAAL5gC,CAAY6U,MAAM,CAANA,CAAZ7U,CAAX6U;AACA,gBAAMgsB,cAAc7gC,KAAK4gC,MAAL5gC,CACjB,YAAW8gC,gBAAX,IAA+B,CAA/B,IAAoCtb,6BAAcG,gBADjC3lB,CAApB;;AAGA,cAAI2gC,gBAAgBnhC,SAApB,EAA+B;AAE7B,mBAAOmhC,WAAP;AAFF,iBAGO,IAAI9rB,MAAM,CAANA,KAAYgsB,WAAZhsB,IAA2BA,MAAM,CAANA,KAAYgsB,WAA3C,EAAwD;AAE7D,mBAAO,IAAP;AAdsD;;AAiBxD,iBAAO,KAAP;AAriCF;;AAwiCA,cAAME,kBAAkB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAxB;AACA,cAAMC,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAzB;AACA,cAAMC,cAAc,EAApB;AACA,cAAMC,UAAU,EAAhB;;AAEA,cAAMnc,cAAN,CAAqB;AACnBrmB,sBACEyiC,SADFziC,EAEEuV,UAFFvV,EAGEwV,IAHFxV,EAIE6X,aAJF7X,EAKE4X,UALF5X,EAME+Z,qBANF/Z,EAOEgY,mBAPFhY,EAQE;AACA,iBAAKwwB,GAAL,GAAWiS,SAAX;AACA,iBAAKhQ,OAAL,GAAe,IAAIgI,gBAAJ,CACb,KAAKjK,GAAL,CAAS1K,MAAT,CAAgBuB,KADH,EAEb,KAAKmJ,GAAL,CAAS1K,MAAT,CAAgBwB,MAFH,CAAf;AAIA,iBAAKob,UAAL,GAAkB,EAAlB;AACA,iBAAKC,WAAL,GAAmB,IAAnB;AACA,iBAAKC,aAAL,GAAqB,KAArB;AACA,iBAAKC,GAAL,GAAW,IAAX;AACA,iBAAKC,KAAL,GAAa,IAAb;AACA,iBAAKvtB,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,IAAL,GAAYA,IAAZ;AACA,iBAAKqC,aAAL,GAAqBA,aAArB;AACA,iBAAKD,UAAL,GAAkBA,UAAlB;AACA,iBAAKmrB,UAAL,GAAkB,EAAlB;AACA,iBAAKC,eAAL,GAAuB,IAAvB;AAGA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,kBAAL,GAA0B,EAA1B;AACA,iBAAKC,UAAL,GAAkB,CAAlB;AACA,iBAAKC,UAAL,GAAkB,EAAlB;AACA,iBAAKC,YAAL,GAAoB,CAApB;AACA,iBAAKC,SAAL,GAAiB,IAAjB;AACA,iBAAKC,YAAL,GAAoB,IAApB;AACA,iBAAKC,cAAL,GAAsB,IAAtB;AACA,iBAAKC,kBAAL,GAA0B,EAA1B;AACA,iBAAK1pB,qBAAL,GAA6BA,qBAA7B;AACA,iBAAK2pB,cAAL,GAAsB,IAAIhL,cAAJ,CAAmB,KAAK7gB,aAAxB,CAAtB;AACA,iBAAK8rB,cAAL,GAAsB,IAAI9tB,GAAJ,EAAtB;AACA,iBAAKmC,mBAAL,GAA2BA,mBAA3B;AACA,iBAAK4rB,aAAL,GAAqB,CAArB;AACA,iBAAKC,YAAL,GAAoB,CAApB;AACA,iBAAKC,YAAL,GAAoB,CAApB;;AACA,gBAAIrB,SAAJ,EAAe;AAGb7L,yCAA2B6L,SAA3B7L;AAtCF;;AAwCA,iBAAKmN,0BAAL,GAAkC,IAAlC;AAjDiB;;AAoDnBzd,+BAKG;AAAA,gBALU;AACXlwB,uBADW;AAEXshB,sBAFW;AAGXoC,6BAAe,KAHJ;AAIXhC,2BAAa;AAJF,aAKV;AAMD,kBAAMuP,QAAQ,KAAKmJ,GAAL,CAAS1K,MAAT,CAAgBuB,KAA9B;AACA,kBAAMC,SAAS,KAAKkJ,GAAL,CAAS1K,MAAT,CAAgBwB,MAA/B;AAEA,iBAAKkJ,GAAL,CAASt6B,IAAT;AACA,iBAAKs6B,GAAL,CAASiP,SAAT,GAAqB3nB,cAAc,oBAAnC;AACA,iBAAK0Y,GAAL,CAASwT,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB3c,KAAxB,EAA+BC,MAA/B;AACA,iBAAKkJ,GAAL,CAASr6B,OAAT;;AAEA,gBAAI2jB,YAAJ,EAAkB;AAChB,oBAAMmqB,oBAAoB,KAAKP,cAAL,CAAoB9K,SAApB,CACxB,aADwB,EAExBvR,KAFwB,EAGxBC,MAHwB,EAIxB,IAJwB,CAA1B;AAMA,mBAAK4c,YAAL,GAAoB,KAAK1T,GAAzB;AACA,mBAAKyT,iBAAL,GAAyBA,kBAAkBne,MAA3C;AACA,mBAAK0K,GAAL,GAAWyT,kBAAkB3W,OAA7B;AACA,mBAAKkD,GAAL,CAASt6B,IAAT;AAGA,mBAAKs6B,GAAL,CAASp6B,SAAT,CAAmB8K,KAAnB,CAAyB,KAAKsvB,GAA9B,EAAmC,KAAK0T,YAAL,CAAkBpN,mBAArD;AA3BD;;AA8BD,iBAAKtG,GAAL,CAASt6B,IAAT;AACAqpC,8BAAkB,KAAK/O,GAAvB+O;;AACA,gBAAInpC,SAAJ,EAAe;AACb,mBAAKo6B,GAAL,CAASp6B,SAAT,CAAmB8K,KAAnB,CAAyB,KAAKsvB,GAA9B,EAAmCp6B,SAAnC;AACA,mBAAKytC,YAAL,GAAoBztC,UAAU,CAAVA,CAApB;AACA,mBAAK0tC,YAAL,GAAoB1tC,UAAU,CAAVA,CAApB;AAnCD;;AAqCD,iBAAKo6B,GAAL,CAASp6B,SAAT,CAAmB8K,KAAnB,CAAyB,KAAKsvB,GAA9B,EAAmC9Y,SAASthB,SAA5C;AACA,iBAAKwtC,aAAL,GAAqBlsB,SAASvB,KAA9B;AAEA,iBAAK8sB,aAAL,GAAqB,KAAKzS,GAAL,CAASsG,mBAAT,CAA6B9xB,KAA7B,EAArB;AACA,iBAAKm/B,oBAAL,GAA4B7iC,KAAK8iC,KAAL9iC,CAC1B,KAAK2hC,aAAL,CAAmB,CAAnB,CAD0B3hC,EAE1B,KAAK2hC,aAAL,CAAmB,CAAnB,CAF0B3hC,CAA5B;;AAKA,gBAAI,KAAKsW,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBysB,WAAhB;AA/CD;AAzDgB;;AA4GnB3d,8BACE/N,YADF+N,EAEE4d,iBAFF5d,EAGE6d,gBAHF7d,EAIEV,OAJFU,EAKE;AACA,kBAAM7N,YAAYF,aAAaE,SAA/B;AACA,kBAAMD,UAAUD,aAAaC,OAA7B;AACA,gBAAIxX,IAAIkjC,qBAAqB,CAA7B;AACA,kBAAME,eAAe3rB,UAAU/Z,MAA/B;;AAGA,gBAAI0lC,iBAAiBpjC,CAArB,EAAwB;AACtB,qBAAOA,CAAP;AARF;;AAWA,kBAAMqjC,kBACJD,eAAepjC,CAAfojC,GAAmBtQ,eAAnBsQ,IACA,OAAOD,gBAAP,KAA4B,UAF9B;AAGA,kBAAMG,UAAUD,kBAAkBh7B,KAAK2hB,GAAL3hB,KAAawqB,cAA/BwQ,GAAgD,CAAhE;AACA,gBAAI7K,QAAQ,CAAZ;AAEA,kBAAMrkB,aAAa,KAAKA,UAAxB;AACA,kBAAMC,OAAO,KAAKA,IAAlB;AACA,gBAAImvB,IAAJ;;AAEA,mBAAO,IAAP,EAAa;AACX,kBAAI3e,YAAYllB,SAAZklB,IAAyB5kB,MAAM4kB,QAAQE,cAA3C,EAA2D;AACzDF,wBAAQ4e,OAAR5e,CAAgB5kB,CAAhB4kB,EAAmBue,gBAAnBve;AACA,uBAAO5kB,CAAP;AAHS;;AAMXujC,qBAAO/rB,QAAQxX,CAARwX,CAAP+rB;;AAEA,kBAAIA,SAASnvC,UAAIC,UAAjB,EAA6B;AAC3B,qBAAKkvC,IAAL,EAAWzjC,KAAX,CAAiB,IAAjB,EAAuB2X,UAAUzX,CAAVyX,CAAvB;AADF,qBAEO;AACL,2BAAWgsB,QAAX,IAAuBhsB,UAAUzX,CAAVyX,CAAvB,EAAqC;AACnC,wBAAMisB,WAAWD,SAASlmC,UAATkmC,CAAoB,IAApBA,IAA4BtvB,UAA5BsvB,GAAyCrvB,IAA1D;;AAIA,sBAAI,CAACsvB,SAASxmB,GAATwmB,CAAaD,QAAbC,CAAL,EAA6B;AAC3BA,6BAAS36B,GAAT26B,CAAaD,QAAbC,EAAuBP,gBAAvBO;AACA,2BAAO1jC,CAAP;AAPiC;AADhC;AAVI;;AAuBXA;;AAGA,kBAAIA,MAAMojC,YAAV,EAAwB;AACtB,uBAAOpjC,CAAP;AA3BS;;AAgCX,kBAAIqjC,mBAAmB,EAAE7K,KAAF,GAAU1F,eAAjC,EAAkD;AAChD,oBAAIzqB,KAAK2hB,GAAL3hB,KAAai7B,OAAjB,EAA0B;AACxBH;AACA,yBAAOnjC,CAAP;AAH8C;;AAKhDw4B,wBAAQ,CAARA;AArCS;AArBb;AAjHiB;;AAmLnBrT,uBAAa;AAEX,mBAAO,KAAKmc,UAAL,CAAgB5jC,MAAhB,IAA0B,KAAKimC,WAAtC,EAAmD;AACjD,mBAAK5uC,OAAL;AAHS;;AAMX,iBAAKq6B,GAAL,CAASr6B,OAAT;;AAEA,gBAAI,KAAK8tC,iBAAT,EAA4B;AAC1B,mBAAKzT,GAAL,GAAW,KAAK0T,YAAhB;AACA,mBAAK1T,GAAL,CAASt6B,IAAT;AACA,mBAAKs6B,GAAL,CAAS0E,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC;AACA,mBAAK1E,GAAL,CAASuR,SAAT,CAAmB,KAAKkC,iBAAxB,EAA2C,CAA3C,EAA8C,CAA9C;AACA,mBAAKzT,GAAL,CAASr6B,OAAT;AACA,mBAAK8tC,iBAAL,GAAyB,IAAzB;AAdS;;AAiBX,iBAAKP,cAAL,CAAoBznB,KAApB;AACA,iBAAK0nB,cAAL,CAAoB1nB,KAApB;;AAEA,gBAAI,KAAKrE,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgBotB,SAAhB;AArBS;AAnLM;;AA4MnBC,sBAAYC,GAAZD,EAAiB7/B,gBAAjB6/B,EAAmC;AAIjC,kBAAM5d,QAAQ6d,IAAI7d,KAAlB;AACA,kBAAMC,SAAS4d,IAAI5d,MAAnB;AACA,gBAAI6d,aAAa7jC,KAAK6D,GAAL7D,CACfA,KAAK8iC,KAAL9iC,CAAW8D,iBAAiB,CAAjBA,CAAX9D,EAAgC8D,iBAAiB,CAAjBA,CAAhC9D,CADeA,EAEf,CAFeA,CAAjB;AAIA,gBAAI8jC,cAAc9jC,KAAK6D,GAAL7D,CAChBA,KAAK8iC,KAAL9iC,CAAW8D,iBAAiB,CAAjBA,CAAX9D,EAAgC8D,iBAAiB,CAAjBA,CAAhC9D,CADgBA,EAEhB,CAFgBA,CAAlB;AAKA,gBAAI+jC,aAAahe,KAAjB;AAAA,gBACEie,cAAche,MADhB;AAEA,gBAAIie,cAAc,WAAlB;AACA,gBAAIC,SAAJ,EAAeC,MAAf;;AACA,mBACGN,aAAa,CAAbA,IAAkBE,aAAa,CAA/BF,IACAC,cAAc,CAAdA,IAAmBE,cAAc,CAFpC,EAGE;AACA,kBAAII,WAAWL,UAAf;AAAA,kBACEM,YAAYL,WADd;;AAEA,kBAAIH,aAAa,CAAbA,IAAkBE,aAAa,CAAnC,EAAsC;AACpCK,2BAAWpkC,KAAKkgC,IAALlgC,CAAU+jC,aAAa,CAAvB/jC,CAAXokC;AACAP,8BAAcE,aAAaK,QAA3BP;AALF;;AAOA,kBAAIC,cAAc,CAAdA,IAAmBE,cAAc,CAArC,EAAwC;AACtCK,4BAAYrkC,KAAKkgC,IAALlgC,CAAUgkC,cAAc,CAAxBhkC,CAAZqkC;AACAP,+BAAeE,cAAcK,SAA7BP;AATF;;AAWAI,0BAAY,KAAK9B,cAAL,CAAoB9K,SAApB,CACV2M,WADU,EAEVG,QAFU,EAGVC,SAHU,CAAZH;AAKAC,uBAASD,UAAUlY,OAAnBmY;AACAA,qBAAOG,SAAPH,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuBC,QAAvBD,EAAiCE,SAAjCF;AACAA,qBAAO1D,SAAP0D,CACEP,GADFO,EAEE,CAFFA,EAGE,CAHFA,EAIEJ,UAJFI,EAKEH,WALFG,EAME,CANFA,EAOE,CAPFA,EAQEC,QARFD,EASEE,SATFF;AAWAP,oBAAMM,UAAU1f,MAAhBof;AACAG,2BAAaK,QAAbL;AACAC,4BAAcK,SAAdL;AACAC,4BAAcA,gBAAgB,WAAhBA,GAA8B,WAA9BA,GAA4C,WAA1DA;AAtD+B;;AAwDjC,mBAAO;AACLL,iBADK;AAELG,wBAFK;AAGLC;AAHK,aAAP;AApQiB;;AA2QnBO,4BAAkBX,GAAlBW,EAAuB;AACrB,kBAAMrV,MAAM,KAAKA,GAAjB;AACA,kBAAMnJ,QAAQ6d,IAAI7d,KAAlB;AAAA,kBACEC,SAAS4d,IAAI5d,MADf;AAEA,kBAAMkU,YAAY,KAAK/I,OAAL,CAAa+I,SAA/B;AACA,kBAAMsK,gBAAgB,KAAKrT,OAAL,CAAaiJ,WAAnC;AACA,kBAAMqK,aAAa,KAAKrC,cAAL,CAAoB9K,SAApB,CACjB,YADiB,EAEjBvR,KAFiB,EAGjBC,MAHiB,CAAnB;AAKA,kBAAMsZ,UAAUmF,WAAWzY,OAA3B;AACAyR,+BAAmB6B,OAAnB7B,EAA4BmG,GAA5BnG;AAMA,kBAAMiH,cAAcxV,IAAIsG,mBAAxB;;AACA,gBAAImP,eAAeliC,WAAK3N,SAAL2N,CAAeiiC,WAAfjiC,EAA4B,CAC7C,IAAIsjB,KADyC,EAE7C,CAF6C,EAG7C,CAH6C,EAI7C,CAAC,CAAD,GAAKC,MAJwC,EAK7C,CAL6C,EAM7C,CAN6C,CAA5BvjB,CAAnB;;AAQAkiC,2BAAeliC,WAAK3N,SAAL2N,CAAekiC,YAAfliC,EAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAACujB,MAAjB,CAA7BvjB,CAAfkiC;;AACA,kBAAMC,QAAQniC,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAI,CAAJ,CAApBA,EAA4BkiC,YAA5BliC,CAAd;;AACA,kBAAMoiC,QAAQpiC,WAAKO,cAALP,CAAoB,CAACsjB,KAAD,EAAQC,MAAR,CAApBvjB,EAAqCkiC,YAArCliC,CAAd;;AACA,kBAAMkC,OAAOlC,WAAKiC,aAALjC,CAAmB,CAACmiC,MAAM,CAANA,CAAD,EAAWA,MAAM,CAANA,CAAX,EAAqBC,MAAM,CAANA,CAArB,EAA+BA,MAAM,CAANA,CAA/B,CAAnBpiC,CAAb;;AACA,kBAAMqiC,aAAa9kC,KAAKkgC,IAALlgC,CAAU2E,KAAK,CAALA,IAAUA,KAAK,CAALA,CAApB3E,CAAnB;AACA,kBAAM+kC,cAAc/kC,KAAKkgC,IAALlgC,CAAU2E,KAAK,CAALA,IAAUA,KAAK,CAALA,CAApB3E,CAApB;AACA,kBAAMglC,aAAa,KAAK5C,cAAL,CAAoB9K,SAApB,CACjB,YADiB,EAEjBwN,UAFiB,EAGjBC,WAHiB,EAIjB,IAJiB,CAAnB;AAMA,kBAAME,UAAUD,WAAWhZ,OAA3B;AAEA,kBAAMjX,UAAU/U,KAAKC,GAALD,CAAS4kC,MAAM,CAANA,CAAT5kC,EAAmB6kC,MAAM,CAANA,CAAnB7kC,CAAhB;AACA,kBAAMgV,UAAUhV,KAAKC,GAALD,CAAS4kC,MAAM,CAANA,CAAT5kC,EAAmB6kC,MAAM,CAANA,CAAnB7kC,CAAhB;AACAilC,oBAAQxR,SAARwR,CAAkB,CAAClwB,OAAnBkwB,EAA4B,CAACjwB,OAA7BiwB;AACAA,oBAAQnwC,SAARmwC,CAAkBrlC,KAAlBqlC,CAAwBA,OAAxBA,EAAiCN,YAAjCM;;AAEA,kBAAMC,SAAS,KAAKvB,WAAL,CACbc,WAAWjgB,MADE,EAEbygB,QAAQE,0BAFK,CAAf;;AAIAF,oBAAQG,qBAARH,GAAgCvE,yBAC9BuE,QAAQzP,mBADsBkL,EAE9BkD,IAAIjD,WAF0BD,CAAhCuE;AAIAA,oBAAQxE,SAARwE,CACEC,OAAOtB,GADTqB,EAEE,CAFFA,EAGE,CAHFA,EAIEC,OAAOtB,GAAPsB,CAAWnf,KAJbkf,EAKEC,OAAOtB,GAAPsB,CAAWlf,MALbif,EAME,CANFA,EAOE,CAPFA,EAQElf,KARFkf,EASEjf,MATFif;AAWAA,oBAAQxG,wBAARwG,GAAmC,WAAnCA;;AAEA,kBAAMI,UAAU5iC,WAAK3N,SAAL2N,CAAewiC,QAAQE,0BAAvB1iC,EAAmD,CACjE,CADiE,EAEjE,CAFiE,EAGjE,CAHiE,EAIjE,CAJiE,EAKjE,CAACsS,OALgE,EAMjE,CAACC,OANgE,CAAnDvS,CAAhB;;AAQAwiC,oBAAQ9G,SAAR8G,GAAoBT,gBAChBtK,UAAUoL,UAAVpL,CAAqBhL,GAArBgL,EAA0B,IAA1BA,EAAgCmL,OAAhCnL,EAAyCoB,yBAASjwC,IAAlD6uC,CADgBsK,GAEhBtK,SAFJ+K;AAIAA,oBAAQvC,QAARuC,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuBlf,KAAvBkf,EAA8Bjf,MAA9Bif;AAGA,mBAAO;AACLzgB,sBAAQwgB,WAAWxgB,MADd;AAELzP,uBAAS/U,KAAKulC,KAALvlC,CAAW+U,OAAX/U,CAFJ;AAGLgV,uBAAShV,KAAKulC,KAALvlC,CAAWgV,OAAXhV;AAHJ,aAAP;AA7ViB;;AAqWnB5L,uBAAa2xB,KAAb3xB,EAAoB;AAClB,iBAAK+8B,OAAL,CAAaoJ,SAAb,GAAyBxU,KAAzB;AACA,iBAAKmJ,GAAL,CAASqL,SAAT,GAAqBxU,KAArB;AAvWiB;;AA0WnB1xB,qBAAW03B,KAAX13B,EAAkB;AAChB,iBAAK66B,GAAL,CAASoP,OAAT,GAAmByC,gBAAgBhV,KAAhBgV,CAAnB;AA3WiB;;AA8WnBzsC,sBAAYy3B,KAAZz3B,EAAmB;AACjB,iBAAK46B,GAAL,CAASqP,QAAT,GAAoByC,iBAAiBjV,KAAjBiV,CAApB;AA/WiB;;AAkXnBzsC,wBAAcixC,KAAdjxC,EAAqB;AACnB,iBAAK26B,GAAL,CAASsP,UAAT,GAAsBgH,KAAtB;AAnXiB;;AAsXnBhxC,kBAAQixC,SAARjxC,EAAmBkxC,SAAnBlxC,EAA8B;AAC5B,kBAAM06B,MAAM,KAAKA,GAAjB;;AACA,gBAAIA,IAAI4O,WAAJ5O,KAAoB1vB,SAAxB,EAAmC;AACjC0vB,kBAAI4O,WAAJ5O,CAAgBuW,SAAhBvW;AACAA,kBAAI8O,cAAJ9O,GAAqBwW,SAArBxW;AAJ0B;AAtXX;;AA8XnBz6B,6BAAmB4gB,MAAnB5gB,EAA2B,CA9XR;;AAkYnBC,sBAAYixC,QAAZjxC,EAAsB,CAlYH;;AAsYnBC,oBAAUixC,MAAVjxC,EAAkB;AAChB,iBAAK,IAAImL,IAAI,CAAR,EAAWiH,KAAK6+B,OAAOpoC,MAA5B,EAAoCsC,IAAIiH,EAAxC,EAA4CjH,GAA5C,EAAiD;AAC/C,oBAAM+lC,QAAQD,OAAO9lC,CAAP8lC,CAAd;AACA,oBAAMlkC,MAAMmkC,MAAM,CAANA,CAAZ;AACA,oBAAM7nC,QAAQ6nC,MAAM,CAANA,CAAd;;AAEA,sBAAQnkC,GAAR;AACE,qBAAK,IAAL;AACE,uBAAKtN,YAAL,CAAkB4J,KAAlB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAK3J,UAAL,CAAgB2J,KAAhB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAK1J,WAAL,CAAiB0J,KAAjB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAKzJ,aAAL,CAAmByJ,KAAnB;AACA;;AACF,qBAAK,GAAL;AACE,uBAAKxJ,OAAL,CAAawJ,MAAM,CAANA,CAAb,EAAuBA,MAAM,CAANA,CAAvB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAKvJ,kBAAL,CAAwBuJ,KAAxB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAKtJ,WAAL,CAAiBsJ,KAAjB;AACA;;AACF,qBAAK,MAAL;AACE,uBAAKzH,OAAL,CAAayH,MAAM,CAANA,CAAb,EAAuBA,MAAM,CAANA,CAAvB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAKmzB,OAAL,CAAamJ,WAAb,GAA2BuL,MAAM,CAANA,CAA3B;AACA;;AACF,qBAAK,IAAL;AACE,uBAAK1U,OAAL,CAAakJ,SAAb,GAAyBwL,MAAM,CAANA,CAAzB;AACA,uBAAK3W,GAAL,CAASmP,WAAT,GAAuBwH,MAAM,CAANA,CAAvB;AACA;;AACF,qBAAK,IAAL;AACE,uBAAK3W,GAAL,CAASuP,wBAAT,GAAoCzgC,KAApC;AACA;;AACF,qBAAK,OAAL;AACE,uBAAKmzB,OAAL,CAAaqJ,WAAb,GAA2Bx8B,QAAQ,KAAKgkC,SAAbhkC,GAAyB,IAApD;AACA,uBAAKgkC,SAAL,GAAiB,IAAjB;AACA,uBAAK8D,eAAL;AACA;;AACF,qBAAK,IAAL;AACE,uBAAK3U,OAAL,CAAasJ,YAAb,GAA4Bz8B,KAA5B;AAzCJ;AANc;AAtYC;;AA0bnB,cAAIylC,WAAJ,GAAkB;AAChB,mBAAO,CAAC,CAAC,KAAKxB,YAAd;AA3biB;;AA8bnB6D,4BAAkB;AAChB,kBAAMrC,cAAc,KAAKA,WAAzB;;AACA,gBAAI,KAAKtS,OAAL,CAAaqJ,WAAb,IAA4B,CAACiJ,WAAjC,EAA8C;AAC5C,mBAAKsC,cAAL;AADF,mBAEO,IAAI,CAAC,KAAK5U,OAAL,CAAaqJ,WAAd,IAA6BiJ,WAAjC,EAA8C;AACnD,mBAAKuC,YAAL;AALc;AA9bC;;AAidnBD,2BAAiB;AACf,gBAAI,KAAKtC,WAAT,EAAsB;AACpB,oBAAM,IAAIrnC,KAAJ,CAAU,mDAAV,CAAN;AAFa;;AAIf,kBAAM0oC,aAAa,KAAK5V,GAAL,CAAS1K,MAAT,CAAgBuB,KAAnC;AACA,kBAAMgf,cAAc,KAAK7V,GAAL,CAAS1K,MAAT,CAAgBwB,MAApC;AACA,kBAAMigB,UAAU,iBAAiB,KAAKpE,UAAtC;AACA,kBAAMqE,gBAAgB,KAAK9D,cAAL,CAAoB9K,SAApB,CACpB2O,OADoB,EAEpBnB,UAFoB,EAGpBC,WAHoB,EAIpB,IAJoB,CAAtB;AAMA,iBAAK9C,YAAL,GAAoB,KAAK/S,GAAzB;AACA,iBAAKA,GAAL,GAAWgX,cAAcla,OAAzB;AACA,kBAAMkD,MAAM,KAAKA,GAAjB;AACAA,gBAAI0E,YAAJ1E,CAAiBtvB,KAAjBsvB,CAAuBA,GAAvBA,EAA4B,KAAK+S,YAAL,CAAkBzM,mBAA9CtG;AACAwO,yBAAa,KAAKuE,YAAlBvE,EAAgCxO,GAAhCwO;AACAzK,oCAAwB/D,GAAxB+D,EAA6B,KAAKgP,YAAlChP;AAEA,iBAAKt+B,SAAL,CAAe,CACb,CAAC,IAAD,EAAO,aAAP,CADa,EAEb,CAAC,IAAD,EAAO,CAAP,CAFa,EAGb,CAAC,IAAD,EAAO,CAAP,CAHa,CAAf;AAreiB;;AA4enBqxC,yBAAe;AACb,gBAAI,CAAC,KAAKvC,WAAV,EAAuB;AACrB,oBAAM,IAAIrnC,KAAJ,CAAU,6CAAV,CAAN;AAFW;;AAMb,iBAAK8yB,GAAL,CAASiE,gBAAT;;AACAuK,yBAAa,KAAKxO,GAAlBwO,EAAuB,KAAKuE,YAA5BvE;AACA,iBAAKxO,GAAL,GAAW,KAAK+S,YAAhB;AAEA,iBAAKA,YAAL,GAAoB,IAApB;AAtfiB;;AAyfnBkE,kBAAQC,QAARD,EAAkB;AAChB,gBAAI,CAAC,KAAKhV,OAAL,CAAaqJ,WAAlB,EAA+B;AAC7B;AAFc;;AAKhB,gBAAI,CAAC4L,QAAL,EAAe;AACbA,yBAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAKlX,GAAL,CAAS1K,MAAT,CAAgBuB,KAAvB,EAA8B,KAAKmJ,GAAL,CAAS1K,MAAT,CAAgBwB,MAA9C,CAAXogB;AADF,mBAEO;AACLA,uBAAS,CAATA,IAAcpmC,KAAKqmC,KAALrmC,CAAWomC,SAAS,CAATA,CAAXpmC,CAAdomC;AACAA,uBAAS,CAATA,IAAcpmC,KAAKqmC,KAALrmC,CAAWomC,SAAS,CAATA,CAAXpmC,CAAdomC;AACAA,uBAAS,CAATA,IAAcpmC,KAAKkgC,IAALlgC,CAAUomC,SAAS,CAATA,CAAVpmC,CAAdomC;AACAA,uBAAS,CAATA,IAAcpmC,KAAKkgC,IAALlgC,CAAUomC,SAAS,CAATA,CAAVpmC,CAAdomC;AAXc;;AAahB,kBAAMjsC,QAAQ,KAAKg3B,OAAL,CAAaqJ,WAA3B;AACA,kBAAMyH,eAAe,KAAKA,YAA1B;AAEA5B,yBAAa4B,YAAb5B,EAA2BlmC,KAA3BkmC,EAAkC,KAAKnR,GAAvCmR,EAA4C+F,QAA5C/F;AAGA,iBAAKnR,GAAL,CAASt6B,IAAT;AACA,iBAAKs6B,GAAL,CAAS0E,YAAT,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC;AACA,iBAAK1E,GAAL,CAASoV,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKpV,GAAL,CAAS1K,MAAT,CAAgBuB,KAAzC,EAAgD,KAAKmJ,GAAL,CAAS1K,MAAT,CAAgBwB,MAAhE;AACA,iBAAKkJ,GAAL,CAASr6B,OAAT;AA/gBiB;;AAkhBnBD,iBAAO;AACL,gBAAI,KAAK6uC,WAAT,EAAsB;AAIpB/F,2BAAa,KAAKxO,GAAlBwO,EAAuB,KAAKuE,YAA5BvE;AAGA,mBAAKuE,YAAL,CAAkBrtC,IAAlB;AAPF,mBAQO;AACL,mBAAKs6B,GAAL,CAASt6B,IAAT;AAVG;;AAYL,kBAAMiiC,MAAM,KAAK1F,OAAjB;AACA,iBAAKiQ,UAAL,CAAgBhhC,IAAhB,CAAqBy2B,GAArB;AACA,iBAAK1F,OAAL,GAAe0F,IAAIzO,KAAJyO,EAAf;AAhiBiB;;AAmiBnBhiC,oBAAU;AACR,gBAAI,KAAKusC,UAAL,CAAgB5jC,MAAhB,KAA2B,CAA3B,IAAgC,KAAKimC,WAAzC,EAAsD;AACpD,mBAAKuC,YAAL;AAFM;;AAIR,gBAAI,KAAK5E,UAAL,CAAgB5jC,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,mBAAK2zB,OAAL,GAAe,KAAKiQ,UAAL,CAAgBrK,GAAhB,EAAf;;AACA,kBAAI,KAAK0M,WAAT,EAAsB;AAGpB,qBAAKxB,YAAL,CAAkBptC,OAAlB;AACA6oC,6BAAa,KAAKuE,YAAlBvE,EAAgC,KAAKxO,GAArCwO;AAJF,qBAKO;AACL,qBAAKxO,GAAL,CAASr6B,OAAT;AAR8B;;AAUhC,mBAAKixC,eAAL;AAGA,mBAAKzE,WAAL,GAAmB,IAAnB;AAEA,mBAAKoB,0BAAL,GAAkC,IAAlC;AAnBM;AAniBS;;AA0jBnB3tC,oBAAUqP,CAAVrP,EAAa+N,CAAb/N,EAAgBsP,CAAhBtP,EAAmBwO,CAAnBxO,EAAsB+H,CAAtB/H,EAAyB+/B,CAAzB//B,EAA4B;AAC1B,iBAAKo6B,GAAL,CAASp6B,SAAT,CAAmBqP,CAAnB,EAAsBtB,CAAtB,EAAyBuB,CAAzB,EAA4Bd,CAA5B,EAA+BzG,CAA/B,EAAkCg4B,CAAlC;AAEA,iBAAK4N,0BAAL,GAAkC,IAAlC;AA7jBiB;;AAikBnB5oC,wBAAcysC,GAAdzsC,EAAmBu3B,IAAnBv3B,EAAyB;AACvB,kBAAMq1B,MAAM,KAAKA,GAAjB;AACA,kBAAMiC,UAAU,KAAKA,OAArB;AACA,gBAAI7I,IAAI6I,QAAQ7I,CAAhB;AAAA,gBACEC,IAAI4I,QAAQ5I,CADd;AAEA,gBAAIge,MAAJ,EAAYC,MAAZ;;AACA,iBAAK,IAAI1mC,IAAI,CAAR,EAAWuG,IAAI,CAAf,EAAkBU,KAAKu/B,IAAI9oC,MAAhC,EAAwCsC,IAAIiH,EAA5C,EAAgDjH,GAAhD,EAAqD;AACnD,sBAAQwmC,IAAIxmC,CAAJwmC,IAAS,CAAjB;AACE,qBAAKpyC,UAAImB,SAAT;AACEizB,sBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACA,wBAAMxC,QAAQqL,KAAK/qB,GAAL+qB,CAAd;AACA,wBAAMpL,SAASoL,KAAK/qB,GAAL+qB,CAAf;AAEA,wBAAMqV,KAAKne,IAAIvC,KAAf;AACA,wBAAM2gB,KAAKne,IAAIvC,MAAf;AACAkJ,sBAAIn6B,MAAJm6B,CAAW5G,CAAX4G,EAAc3G,CAAd2G;;AACA,sBAAInJ,UAAU,CAAVA,IAAeC,WAAW,CAA9B,EAAiC;AAC/BkJ,wBAAIl6B,MAAJk6B,CAAWuX,EAAXvX,EAAewX,EAAfxX;AADF,yBAEO;AACLA,wBAAIl6B,MAAJk6B,CAAWuX,EAAXvX,EAAe3G,CAAf2G;AACAA,wBAAIl6B,MAAJk6B,CAAWuX,EAAXvX,EAAewX,EAAfxX;AACAA,wBAAIl6B,MAAJk6B,CAAW5G,CAAX4G,EAAcwX,EAAdxX;AAdJ;;AAgBEiC,0BAAQ0J,gBAAR1J,CAAyBjC,IAAIsG,mBAA7BrE,EAAkD7I,CAAlD6I,EAAqD5I,CAArD4I;AACAA,0BAAQ0J,gBAAR1J,CAAyBjC,IAAIsG,mBAA7BrE,EAAkDsV,EAAlDtV,EAAsDuV,EAAtDvV;AACAjC,sBAAI95B,SAAJ85B;AACA;;AACF,qBAAKh7B,UAAIa,MAAT;AACEuzB,sBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACA2G,sBAAIn6B,MAAJm6B,CAAW5G,CAAX4G,EAAc3G,CAAd2G;AACAiC,0BAAQ0J,gBAAR1J,CAAyBjC,IAAIsG,mBAA7BrE,EAAkD7I,CAAlD6I,EAAqD5I,CAArD4I;AACA;;AACF,qBAAKj9B,UAAIc,MAAT;AACEszB,sBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACA2G,sBAAIl6B,MAAJk6B,CAAW5G,CAAX4G,EAAc3G,CAAd2G;AACAiC,0BAAQ0J,gBAAR1J,CAAyBjC,IAAIsG,mBAA7BrE,EAAkD7I,CAAlD6I,EAAqD5I,CAArD4I;AACA;;AACF,qBAAKj9B,UAAIe,OAAT;AACEsxC,2BAASje,CAATie;AACAC,2BAASje,CAATie;AACAle,sBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACA2G,sBAAIiF,aAAJjF,CACEkC,KAAK/qB,CAAL+qB,CADFlC,EAEEkC,KAAK/qB,IAAI,CAAT+qB,CAFFlC,EAGEkC,KAAK/qB,IAAI,CAAT+qB,CAHFlC,EAIEkC,KAAK/qB,IAAI,CAAT+qB,CAJFlC,EAKE5G,CALF4G,EAME3G,CANF2G;AAQAiC,0BAAQ+J,qBAAR/J,CACEjC,IAAIsG,mBADNrE,EAEEoV,MAFFpV,EAGEqV,MAHFrV,EAIEC,KAAK/qB,CAAL+qB,CAJFD,EAKEC,KAAK/qB,IAAI,CAAT+qB,CALFD,EAMEC,KAAK/qB,IAAI,CAAT+qB,CANFD,EAOEC,KAAK/qB,IAAI,CAAT+qB,CAPFD,EAQE7I,CARF6I,EASE5I,CATF4I;AAWA9qB,uBAAK,CAALA;AACA;;AACF,qBAAKnS,UAAIgB,QAAT;AACEqxC,2BAASje,CAATie;AACAC,2BAASje,CAATie;AACAtX,sBAAIiF,aAAJjF,CACE5G,CADF4G,EAEE3G,CAFF2G,EAGEkC,KAAK/qB,CAAL+qB,CAHFlC,EAIEkC,KAAK/qB,IAAI,CAAT+qB,CAJFlC,EAKEkC,KAAK/qB,IAAI,CAAT+qB,CALFlC,EAMEkC,KAAK/qB,IAAI,CAAT+qB,CANFlC;AAQAiC,0BAAQ+J,qBAAR/J,CACEjC,IAAIsG,mBADNrE,EAEEoV,MAFFpV,EAGEqV,MAHFrV,EAIE7I,CAJF6I,EAKE5I,CALF4I,EAMEC,KAAK/qB,CAAL+qB,CANFD,EAOEC,KAAK/qB,IAAI,CAAT+qB,CAPFD,EAQEC,KAAK/qB,IAAI,CAAT+qB,CARFD,EASEC,KAAK/qB,IAAI,CAAT+qB,CATFD;AAWA7I,sBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACAliB,uBAAK,CAALA;AACA;;AACF,qBAAKnS,UAAIiB,QAAT;AACEoxC,2BAASje,CAATie;AACAC,2BAASje,CAATie;AACAle,sBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,sBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACA2G,sBAAIiF,aAAJjF,CAAkBkC,KAAK/qB,CAAL+qB,CAAlBlC,EAA2BkC,KAAK/qB,IAAI,CAAT+qB,CAA3BlC,EAAwC5G,CAAxC4G,EAA2C3G,CAA3C2G,EAA8C5G,CAA9C4G,EAAiD3G,CAAjD2G;AACAiC,0BAAQ+J,qBAAR/J,CACEjC,IAAIsG,mBADNrE,EAEEoV,MAFFpV,EAGEqV,MAHFrV,EAIEC,KAAK/qB,CAAL+qB,CAJFD,EAKEC,KAAK/qB,IAAI,CAAT+qB,CALFD,EAME7I,CANF6I,EAOE5I,CAPF4I,EAQE7I,CARF6I,EASE5I,CATF4I;AAWA9qB,uBAAK,CAALA;AACA;;AACF,qBAAKnS,UAAIkB,SAAT;AACE85B,sBAAI95B,SAAJ85B;AACA;AA1GJ;AAPqB;;AAoHvBiC,oBAAQyJ,eAARzJ,CAAwB7I,CAAxB6I,EAA2B5I,CAA3B4I;AArrBiB;;AAwrBnB/7B,sBAAY;AACV,iBAAK85B,GAAL,CAAS95B,SAAT;AAzrBiB;;AA4rBnBE,iBAAOqxC,WAAPrxC,EAAoB;AAClBqxC,0BAAc,OAAOA,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmD,IAAjEA;AACA,kBAAMzX,MAAM,KAAKA,GAAjB;AACA,kBAAMiL,cAAc,KAAKhJ,OAAL,CAAagJ,WAAjC;AAGAjL,gBAAImP,WAAJnP,GAAkB,KAAKiC,OAAL,CAAamJ,WAA/BpL;;AACA,gBAAI,KAAKgT,cAAT,EAAyB;AACvB,kBAAI,OAAO/H,WAAP,KAAuB,QAAvB,IAAmCA,aAAamL,UAApD,EAAgE;AAC9D,sBAAM/K,YAAY,KAAKqM,mBAAL,EAAlB;AACA1X,oBAAIt6B,IAAJs6B;AACAA,oBAAIgP,WAAJhP,GAAkBiL,YAAYmL,UAAZnL,CAChBjL,GADgBiL,EAEhB,IAFgBA,EAGhBjL,IAAIiW,0BAHYhL,EAIhBmB,yBAAShwC,MAJO6uC,CAAlBjL;AAOAA,oBAAIqL,SAAJrL,GAAgBlvB,KAAK6D,GAAL7D,CAASu6B,SAATv6B,EAAoB,KAAKmxB,OAAL,CAAaoJ,SAAjCv6B,CAAhBkvB;AACAA,oBAAI55B,MAAJ45B;AACAA,oBAAIr6B,OAAJq6B;AAZF,qBAaO;AACL,sBAAMqL,YAAY,KAAKqM,mBAAL,EAAlB;;AACA,oBAAIrM,YAAY,CAAZA,IAAiB,CAACA,SAAD,IAAc,KAAKpJ,OAAL,CAAaoJ,SAAhD,EAA2D;AAGzDrL,sBAAIt6B,IAAJs6B;AACAA,sBAAI4E,cAAJ5E;AACAA,sBAAIqL,SAAJrL,GAAgBlvB,KAAKqmC,KAALrmC,CAAW,KAAK6iC,oBAAhB7iC,CAAhBkvB;AACAA,sBAAI55B,MAAJ45B;AACAA,sBAAIr6B,OAAJq6B;AAPF,uBAQO;AAELA,sBAAIqL,SAAJrL,GAAgBlvB,KAAK6D,GAAL7D,CAASu6B,SAATv6B,EAAoB,KAAKmxB,OAAL,CAAaoJ,SAAjCv6B,CAAhBkvB;AACAA,sBAAI55B,MAAJ45B;AAbG;AAdgB;AAPP;;AAsClB,gBAAIyX,WAAJ,EAAiB;AACf,mBAAKA,WAAL,CAAiB,KAAKxV,OAAL,CAAawK,yBAAb,EAAjB;AAvCgB;;AA0ClBzM,gBAAImP,WAAJnP,GAAkB,KAAKiC,OAAL,CAAakJ,SAA/BnL;AAtuBiB;;AAyuBnB35B,wBAAc;AACZ,iBAAKH,SAAL;AACA,iBAAKE,MAAL;AA3uBiB;;AA8uBnBE,eAAKmxC,WAALnxC,EAAkB;AAChBmxC,0BAAc,OAAOA,WAAP,KAAuB,WAAvB,GAAqCA,WAArC,GAAmD,IAAjEA;AACA,kBAAMzX,MAAM,KAAKA,GAAjB;AACA,kBAAMgL,YAAY,KAAK/I,OAAL,CAAa+I,SAA/B;AACA,kBAAMsK,gBAAgB,KAAKrT,OAAL,CAAaiJ,WAAnC;AACA,gBAAIyM,cAAc,KAAlB;;AAEA,gBAAIrC,aAAJ,EAAmB;AACjBtV,kBAAIt6B,IAAJs6B;AACAA,kBAAIiP,SAAJjP,GAAgBgL,UAAUoL,UAAVpL,CACdhL,GADcgL,EAEd,IAFcA,EAGdhL,IAAIiW,0BAHUjL,EAIdoB,yBAASjwC,IAJK6uC,CAAhBhL;AAMA2X,4BAAc,IAAdA;AAfc;;AAkBhB,kBAAMjiC,YAAY,KAAKusB,OAAL,CAAawK,yBAAb,EAAlB;;AACA,gBAAI,KAAKuG,cAAL,IAAuBt9B,cAAc,IAAzC,EAA+C;AAC7C,kBAAI,KAAK08B,aAAT,EAAwB;AACtBpS,oBAAI15B,IAAJ05B,CAAS,SAATA;AACA,qBAAKoS,aAAL,GAAqB,KAArB;AAFF,qBAGO;AACLpS,oBAAI15B,IAAJ05B;AAL2C;AAnB/B;;AA4BhB,gBAAI2X,WAAJ,EAAiB;AACf3X,kBAAIr6B,OAAJq6B;AA7Bc;;AA+BhB,gBAAIyX,WAAJ,EAAiB;AACf,mBAAKA,WAAL,CAAiB/hC,SAAjB;AAhCc;AA9uBC;;AAkxBnBnP,mBAAS;AACP,iBAAK6rC,aAAL,GAAqB,IAArB;AACA,iBAAK9rC,IAAL;AApxBiB;;AAuxBnBE,uBAAa;AACX,iBAAKF,IAAL,CAAU,KAAV;AACA,iBAAKF,MAAL,CAAY,KAAZ;AAEA,iBAAKqxC,WAAL;AA3xBiB;;AA8xBnBhxC,yBAAe;AACb,iBAAK2rC,aAAL,GAAqB,IAArB;AACA,iBAAK5rC,UAAL;AAhyBiB;;AAmyBnBE,4BAAkB;AAChB,iBAAKR,SAAL;AACA,iBAAKM,UAAL;AAryBiB;;AAwyBnBG,8BAAoB;AAClB,iBAAKyrC,aAAL,GAAqB,IAArB;AACA,iBAAKlsC,SAAL;AACA,iBAAKM,UAAL;AA3yBiB;;AA8yBnBI,oBAAU;AACR,iBAAK6wC,WAAL;AA/yBiB;;AAmzBnB5wC,iBAAO;AACL,iBAAKsrC,WAAL,GAAmBJ,WAAnB;AApzBiB;;AAuzBnBjrC,mBAAS;AACP,iBAAKqrC,WAAL,GAAmBH,OAAnB;AAxzBiB;;AA4zBnBjrC,sBAAY;AACV,iBAAKk7B,OAAL,CAAaoI,UAAb,GAA0B1vC,qBAA1B;AACA,iBAAKsnC,OAAL,CAAaqI,eAAb,GAA+B,CAA/B;AACA,iBAAKrI,OAAL,CAAa7I,CAAb,GAAiB,KAAK6I,OAAL,CAAawI,KAAb,GAAqB,CAAtC;AACA,iBAAKxI,OAAL,CAAa5I,CAAb,GAAiB,KAAK4I,OAAL,CAAayI,KAAb,GAAqB,CAAtC;AAh0BiB;;AAm0BnB1jC,oBAAU;AACR,kBAAM4wC,QAAQ,KAAKC,gBAAnB;AACA,kBAAM7X,MAAM,KAAKA,GAAjB;;AACA,gBAAI4X,UAAUtnC,SAAd,EAAyB;AACvB0vB,kBAAIqF,SAAJrF;AACA;AALM;;AAQRA,gBAAIt6B,IAAJs6B;AACAA,gBAAIqF,SAAJrF;;AACA,iBAAK,IAAIpvB,IAAI,CAAb,EAAgBA,IAAIgnC,MAAMtpC,MAA1B,EAAkCsC,GAAlC,EAAuC;AACrC,oBAAMknC,OAAOF,MAAMhnC,CAANgnC,CAAb;AACA5X,kBAAI0E,YAAJ1E,CAAiBtvB,KAAjBsvB,CAAuBA,GAAvBA,EAA4B8X,KAAKlyC,SAAjCo6B;AACAA,kBAAIuE,SAAJvE,CAAc8X,KAAK1e,CAAnB4G,EAAsB8X,KAAKze,CAA3B2G;AACA8X,mBAAKC,SAALD,CAAe9X,GAAf8X,EAAoBA,KAAK3N,QAAzB2N;AAdM;;AAgBR9X,gBAAIr6B,OAAJq6B;AACAA,gBAAIn5B,IAAJm5B;AACAA,gBAAIqF,SAAJrF;AACA,mBAAO,KAAK6X,gBAAZ;AAt1BiB;;AAy1BnB5wC,yBAAe+wC,OAAf/wC,EAAwB;AACtB,iBAAKg7B,OAAL,CAAa0I,WAAb,GAA2BqN,OAA3B;AA11BiB;;AA61BnB9wC,yBAAe8wC,OAAf9wC,EAAwB;AACtB,iBAAK+6B,OAAL,CAAa2I,WAAb,GAA2BoN,OAA3B;AA91BiB;;AAi2BnB7wC,oBAAUwe,KAAVxe,EAAiB;AACf,iBAAK86B,OAAL,CAAa4I,UAAb,GAA0BllB,QAAQ,GAAlC;AAl2BiB;;AAq2BnBve,qBAAWojC,OAAXpjC,EAAoB;AAClB,iBAAK66B,OAAL,CAAauI,OAAb,GAAuB,CAACA,OAAxB;AAt2BiB;;AAy2BnBnjC,kBAAQ4wC,WAAR5wC,EAAqB6c,IAArB7c,EAA2B;AACzB,kBAAM6wC,UAAU,KAAKnzB,UAAL,CAAgBpL,GAAhB,CAAoBs+B,WAApB,CAAhB;AACA,kBAAMhW,UAAU,KAAKA,OAArB;;AAEA,gBAAI,CAACiW,OAAL,EAAc;AACZ,oBAAM,IAAIhrC,KAAJ,CAAW,uBAAsB+qC,WAAvB,EAAV,CAAN;AALuB;;AAOzBhW,oBAAQsI,UAARtI,GAAqBiW,QAAQ3N,UAAR2N,IAAsBt9C,0BAA3CqnC;;AAIA,gBAAIA,QAAQsI,UAARtI,CAAmB,CAAnBA,MAA0B,CAA1BA,IAA+BA,QAAQsI,UAARtI,CAAmB,CAAnBA,MAA0B,CAA7D,EAAgE;AAC9Dj1B,8BAAK,kCAAkCirC,WAAvCjrC;AAZuB;;AAiBzB,gBAAIkX,OAAO,CAAX,EAAc;AACZA,qBAAO,CAACA,IAARA;AACA+d,sBAAQkW,aAARlW,GAAwB,CAAC,CAAzBA;AAFF,mBAGO;AACLA,sBAAQkW,aAARlW,GAAwB,CAAxBA;AArBuB;;AAwBzB,iBAAKA,OAAL,CAAa92B,IAAb,GAAoB+sC,OAApB;AACA,iBAAKjW,OAAL,CAAakI,QAAb,GAAwBjmB,IAAxB;;AAEA,gBAAIg0B,QAAQE,WAAZ,EAAyB;AACvB;AA5BuB;;AA+BzB,kBAAM7oC,OAAO2oC,QAAQvX,UAARuX,IAAsB,YAAnC;AAEA,gBAAIG,OAAO,QAAX;;AACA,gBAAIH,QAAQjK,KAAZ,EAAmB;AACjBoK,qBAAO,KAAPA;AADF,mBAEO,IAAIH,QAAQG,IAAZ,EAAkB;AACvBA,qBAAO,MAAPA;AArCuB;;AAuCzB,kBAAMC,SAASJ,QAAQI,MAARJ,GAAiB,QAAjBA,GAA4B,QAA3C;AACA,kBAAMK,WAAY,IAAGhpC,IAAK,MAAK2oC,QAAQM,YAAtB,EAAjB;AAMA,gBAAIC,kBAAkBv0B,IAAtB;;AACA,gBAAIA,OAAOof,aAAX,EAA0B;AACxBmV,gCAAkBnV,aAAlBmV;AADF,mBAEO,IAAIv0B,OAAOqf,aAAX,EAA0B;AAC/BkV,gCAAkBlV,aAAlBkV;AAlDuB;;AAoDzB,iBAAKxW,OAAL,CAAamI,aAAb,GAA6BlmB,OAAOu0B,eAApC;AAEA,iBAAKzY,GAAL,CAAS70B,IAAT,GAAgB,GAAGmtC,MAAO,IAAGD,IAAK,IAAGI,eAAgB,MAAKF,QAA1C,EAAhB;AA/5BiB;;AAk6BnBjxC,+BAAqBoxC,IAArBpxC,EAA2B;AACzB,iBAAK26B,OAAL,CAAa6I,iBAAb,GAAiC4N,IAAjC;AAn6BiB;;AAs6BnBnxC,sBAAYoxC,IAAZpxC,EAAkB;AAChB,iBAAK06B,OAAL,CAAa8I,QAAb,GAAwB4N,IAAxB;AAv6BiB;;AA06BnBnxC,mBAAS4xB,CAAT5xB,EAAY6xB,CAAZ7xB,EAAe;AACb,iBAAKy6B,OAAL,CAAa7I,CAAb,GAAiB,KAAK6I,OAAL,CAAawI,KAAb,IAAsBrR,CAAvC;AACA,iBAAK6I,OAAL,CAAa5I,CAAb,GAAiB,KAAK4I,OAAL,CAAayI,KAAb,IAAsBrR,CAAvC;AA56BiB;;AA+6BnB5xB,6BAAmB2xB,CAAnB3xB,EAAsB4xB,CAAtB5xB,EAAyB;AACvB,iBAAKL,UAAL,CAAgB,CAACiyB,CAAjB;AACA,iBAAK7xB,QAAL,CAAc4xB,CAAd,EAAiBC,CAAjB;AAj7BiB;;AAo7BnB3xB,wBAAcuN,CAAdvN,EAAiBiM,CAAjBjM,EAAoBwN,CAApBxN,EAAuB0M,CAAvB1M,EAA0BiG,CAA1BjG,EAA6Bi+B,CAA7Bj+B,EAAgC;AAC9B,iBAAKu6B,OAAL,CAAaoI,UAAb,GAA0B,CAACp1B,CAAD,EAAItB,CAAJ,EAAOuB,CAAP,EAAUd,CAAV,EAAazG,CAAb,EAAgBg4B,CAAhB,CAA1B;AACA,iBAAK1D,OAAL,CAAaqI,eAAb,GAA+Bx5B,KAAK8iC,KAAL9iC,CAAWmE,CAAXnE,EAAc6C,CAAd7C,CAA/B;AAEA,iBAAKmxB,OAAL,CAAa7I,CAAb,GAAiB,KAAK6I,OAAL,CAAawI,KAAb,GAAqB,CAAtC;AACA,iBAAKxI,OAAL,CAAa5I,CAAb,GAAiB,KAAK4I,OAAL,CAAayI,KAAb,GAAqB,CAAtC;AAz7BiB;;AA47BnB/iC,qBAAW;AACT,iBAAKH,QAAL,CAAc,CAAd,EAAiB,KAAKy6B,OAAL,CAAauI,OAA9B;AA77BiB;;AAg8BnBoO,oBAAU9W,SAAV8W,EAAqBxf,CAArBwf,EAAwBvf,CAAxBuf,EAA2BC,gBAA3BD,EAA6CE,mBAA7CF,EAAkE;AAChE,kBAAM5Y,MAAM,KAAKA,GAAjB;AACA,kBAAMiC,UAAU,KAAKA,OAArB;AACA,kBAAM92B,OAAO82B,QAAQ92B,IAArB;AACA,kBAAM2/B,oBAAoB7I,QAAQ6I,iBAAlC;AACA,kBAAMX,WAAWlI,QAAQkI,QAARlI,GAAmBA,QAAQmI,aAA5C;AACA,kBAAM2O,iBACJjO,oBAAoB5uC,wBAAkBS,gBADxC;AAEA,kBAAMq8C,iBAAiB,CAAC,EACtBlO,oBAAoB5uC,wBAAkBU,gBADhB,CAAxB;AAGA,kBAAMsuC,cAAcjJ,QAAQiJ,WAARjJ,IAAuB,CAAC92B,KAAK6yB,WAAjD;AAEA,gBAAI+Z,SAAJ;;AACA,gBAAI5sC,KAAK6R,eAAL7R,IAAwB6tC,cAAxB7tC,IAA0C+/B,WAA9C,EAA2D;AACzD6M,0BAAY5sC,KAAK02B,gBAAL12B,CAAsB,KAAK4Z,UAA3B5Z,EAAuC22B,SAAvC32B,CAAZ4sC;AAf8D;;AAkBhE,gBAAI5sC,KAAK6R,eAAL7R,IAAwB+/B,WAA5B,EAAyC;AACvClL,kBAAIt6B,IAAJs6B;AACAA,kBAAIuE,SAAJvE,CAAc5G,CAAd4G,EAAiB3G,CAAjB2G;AACAA,kBAAIqF,SAAJrF;AACA+X,wBAAU/X,GAAV+X,EAAe5N,QAAf4N;;AACA,kBAAIc,gBAAJ,EAAsB;AACpB7Y,oBAAI0E,YAAJ1E,CAAiBtvB,KAAjBsvB,CAAuBA,GAAvBA,EAA4B6Y,gBAA5B7Y;AANqC;;AAQvC,kBACE+Y,mBAAmB78C,wBAAkBC,IAArC48C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA2jC,oBAAI15B,IAAJ05B;AAZqC;;AAcvC,kBACE+Y,mBAAmB78C,wBAAkBE,MAArC28C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA,oBAAIy8C,mBAAJ,EAAyB;AACvB9Y,sBAAI4E,cAAJ5E;AACAA,sBAAIqL,SAAJrL,GAAgBlvB,KAAKqmC,KAALrmC,CAAW,KAAK6iC,oBAAhB7iC,CAAhBkvB;AAHF;;AAKAA,oBAAI55B,MAAJ45B;AAtBqC;;AAwBvCA,kBAAIr6B,OAAJq6B;AAxBF,mBAyBO;AACL,kBACE+Y,mBAAmB78C,wBAAkBC,IAArC48C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA2jC,oBAAIG,QAAJH,CAAa8B,SAAb9B,EAAwB5G,CAAxB4G,EAA2B3G,CAA3B2G;AALG;;AAOL,kBACE+Y,mBAAmB78C,wBAAkBE,MAArC28C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA,oBAAIy8C,mBAAJ,EAAyB;AACvB9Y,sBAAIt6B,IAAJs6B;AACAA,sBAAIn6B,MAAJm6B,CAAW5G,CAAX4G,EAAc3G,CAAd2G;AACAA,sBAAI4E,cAAJ5E;AACAA,sBAAIqL,SAAJrL,GAAgBlvB,KAAKqmC,KAALrmC,CAAW,KAAK6iC,oBAAhB7iC,CAAhBkvB;AACAA,sBAAIiZ,UAAJjZ,CAAe8B,SAAf9B,EAA0B,CAA1BA,EAA6B,CAA7BA;AACAA,sBAAIr6B,OAAJq6B;AANF,uBAOO;AACLA,sBAAIiZ,UAAJjZ,CAAe8B,SAAf9B,EAA0B5G,CAA1B4G,EAA6B3G,CAA7B2G;AATF;AAVG;AA3CyD;;AAmEhE,gBAAIgZ,cAAJ,EAAoB;AAClB,oBAAMpB,QAAQ,KAAKC,gBAAL,KAA0B,KAAKA,gBAAL,GAAwB,EAAlD,CAAd;AACAD,oBAAM1mC,IAAN0mC,CAAW;AACThyC,2BAAWo6B,IAAIsG,mBADN;AAETlN,iBAFS;AAGTC,iBAHS;AAIT8Q,wBAJS;AAKT4N;AALS,eAAXH;AArE8D;AAh8B/C;;AA+gCnB,cAAIsB,uBAAJ,GAA8B;AAG5B,kBAAM;AAAEpc,uBAASkD;AAAX,gBAAmB,KAAKkT,cAAL,CAAoB9K,SAApB,CACvB,yBADuB,EAEvB,EAFuB,EAGvB,EAHuB,CAAzB;AAKApI,gBAAIra,KAAJqa,CAAU,GAAVA,EAAe,CAAfA;AACAA,gBAAIG,QAAJH,CAAa,GAAbA,EAAkB,CAAlBA,EAAqB,EAArBA;AACA,kBAAMluB,OAAOkuB,IAAII,YAAJJ,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,EAAvBA,EAA2B,EAA3BA,EAA+BluB,IAA5C;AACA,gBAAI8gB,UAAU,KAAd;;AACA,iBAAK,IAAIhiB,IAAI,CAAb,EAAgBA,IAAIkB,KAAKxD,MAAzB,EAAiCsC,KAAK,CAAtC,EAAyC;AACvC,kBAAIkB,KAAKlB,CAALkB,IAAU,CAAVA,IAAeA,KAAKlB,CAALkB,IAAU,GAA7B,EAAkC;AAChC8gB,0BAAU,IAAVA;AACA;AAHqC;AAZb;;AAkB5B,mBAAOjkB,kBAAO,IAAPA,EAAa,yBAAbA,EAAwCikB,OAAxCjkB,CAAP;AAjiCiB;;AAoiCnB/G,mBAASuxC,MAATvxC,EAAiB;AACf,kBAAMq6B,UAAU,KAAKA,OAArB;AACA,kBAAM92B,OAAO82B,QAAQ92B,IAArB;;AACA,gBAAIA,KAAKitC,WAAT,EAAsB;AACpB,qBAAO,KAAKgB,aAAL,CAAmBD,MAAnB,CAAP;AAJa;;AAOf,kBAAMhP,WAAWlI,QAAQkI,QAAzB;;AACA,gBAAIA,aAAa,CAAjB,EAAoB;AAClB,qBAAO75B,SAAP;AATa;;AAYf,kBAAM0vB,MAAM,KAAKA,GAAjB;AACA,kBAAMoK,gBAAgBnI,QAAQmI,aAA9B;AACA,kBAAMO,cAAc1I,QAAQ0I,WAA5B;AACA,kBAAMC,cAAc3I,QAAQ2I,WAA5B;AACA,kBAAMuN,gBAAgBlW,QAAQkW,aAA9B;AACA,kBAAMtN,aAAa5I,QAAQ4I,UAAR5I,GAAqBkW,aAAxC;AACA,kBAAMkB,eAAeF,OAAO7qC,MAA5B;AACA,kBAAMgrC,WAAWnuC,KAAKmuC,QAAtB;AACA,kBAAMC,aAAaD,WAAW,CAAXA,GAAe,CAAC,CAAnC;AACA,kBAAME,kBAAkBruC,KAAKquC,eAA7B;AACA,kBAAMC,oBAAoBtP,WAAWlI,QAAQsI,UAARtI,CAAmB,CAAnBA,CAArC;AAEA,kBAAMyX,iBACJzX,QAAQ6I,iBAAR7I,KAA8B/lC,wBAAkBC,IAAhD8lC,IACA,CAAC92B,KAAK6R,eADNilB,IAEA,CAACA,QAAQiJ,WAHX;AAKAlL,gBAAIt6B,IAAJs6B;AACAA,gBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyBiC,QAAQoI,UAAjCrK;AACAA,gBAAIuE,SAAJvE,CAAciC,QAAQ7I,CAAtB4G,EAAyBiC,QAAQ5I,CAAR4I,GAAYA,QAAQ8I,QAA7C/K;;AAEA,gBAAImY,gBAAgB,CAApB,EAAuB;AACrBnY,kBAAIra,KAAJqa,CAAU6K,UAAV7K,EAAsB,CAAC,CAAvBA;AADF,mBAEO;AACLA,kBAAIra,KAAJqa,CAAU6K,UAAV7K,EAAsB,CAAtBA;AApCa;;AAuCf,gBAAI6Y,gBAAJ;;AACA,gBAAI5W,QAAQiJ,WAAZ,EAAyB;AACvBlL,kBAAIt6B,IAAJs6B;AACA,oBAAM2Z,UAAU1X,QAAQ+I,SAAR/I,CAAkBmU,UAAlBnU,CACdjC,GADciC,EAEd,IAFcA,EAGdjC,IAAIiW,0BAHUhU,EAIdmK,yBAASjwC,IAJK8lC,CAAhB;AAMA4W,iCAAmB7Y,IAAIsG,mBAAvBuS;AACA7Y,kBAAIr6B,OAAJq6B;AACAA,kBAAIiP,SAAJjP,GAAgB2Z,OAAhB3Z;AAlDa;;AAqDf,gBAAIqL,YAAYpJ,QAAQoJ,SAAxB;AACA,gBAAIyN,sBAAsB,KAA1B;AACA,kBAAMnzB,QAAQsc,QAAQqI,eAAtB;;AACA,gBAAI3kB,UAAU,CAAVA,IAAe0lB,cAAc,CAAjC,EAAoC;AAClC,oBAAM0N,iBACJ9W,QAAQ6I,iBAAR7I,GAA4B/lC,wBAAkBS,gBADhD;;AAEA,kBACEo8C,mBAAmB78C,wBAAkBE,MAArC28C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA,qBAAKk3C,0BAAL,GAAkC,IAAlC;AACAlI,4BAAY,KAAKqM,mBAAL,EAAZrM;AACAyN,sCAAsBzN,YAAY,CAAlCyN;AATgC;AAApC,mBAWO;AACLzN,2BAAa1lB,KAAb0lB;AApEa;;AAuEf,gBAAIjB,kBAAkB,GAAtB,EAA2B;AACzBpK,kBAAIra,KAAJqa,CAAUoK,aAAVpK,EAAyBoK,aAAzBpK;AACAqL,2BAAajB,aAAbiB;AAzEa;;AA4EfrL,gBAAIqL,SAAJrL,GAAgBqL,SAAhBrL;AAEA,gBAAI5G,IAAI,CAAR;AAAA,gBACExoB,CADF;;AAEA,iBAAKA,IAAI,CAAT,EAAYA,IAAIyoC,YAAhB,EAA8B,EAAEzoC,CAAhC,EAAmC;AACjC,oBAAMgpC,QAAQT,OAAOvoC,CAAPuoC,CAAd;;AACA,kBAAI,OAAOS,KAAP,KAAiB,QAArB,EAA+B;AAC7BxgB,qBAAMmgB,aAAaK,KAAbL,GAAqBpP,QAArBoP,GAAiC,IAAvCngB;AACA;AAJ+B;;AAOjC,kBAAIygB,gBAAgB,KAApB;AACA,oBAAM7B,UAAW,OAAM8B,OAAN,GAAgBlP,WAAhB,GAA8B,CAA9B,IAAmCD,WAApD;AACA,oBAAM7I,YAAY8X,MAAMG,QAAxB;AACA,oBAAMC,SAASJ,MAAMI,MAArB;AACA,kBAAIC,OAAJ,EAAaC,OAAb;AACA,kBAAIrjB,QAAQ+iB,MAAM/iB,KAAlB;;AACA,kBAAIyiB,QAAJ,EAAc;AACZ,sBAAMa,UAAUP,MAAMO,OAANP,IAAiBJ,eAAjC;AACA,sBAAMY,KACJ,EAAER,MAAMO,OAANP,GAAgBO,QAAQ,CAARA,CAAhBP,GAA6B/iB,QAAQ,GAAvC,IAA8C4iB,iBADhD;AAEA,sBAAMY,KAAKF,QAAQ,CAARA,IAAaV,iBAAxB;AAEA5iB,wBAAQsjB,UAAU,CAACA,QAAQ,CAARA,CAAXA,GAAwBtjB,KAAhCA;AACAojB,0BAAUG,KAAKhQ,aAAf6P;AACAC,0BAAW,KAAIG,EAAJ,IAAUjQ,aAArB8P;AARF,qBASO;AACLD,0BAAU7gB,IAAIgR,aAAd6P;AACAC,0BAAU,CAAVA;AAxB+B;;AA2BjC,kBAAI/uC,KAAKmvC,SAALnvC,IAAkB0rB,QAAQ,CAA9B,EAAiC;AAI/B,sBAAM0jB,gBACFva,IAAIwa,WAAJxa,CAAgB8B,SAAhB9B,EAA2BnJ,KAA3BmJ,GAAmC,IAAnCA,GAA2CmK,QAA3CnK,GACFoK,aAFF;;AAGA,oBAAIvT,QAAQ0jB,aAAR1jB,IAAyB,KAAKqiB,uBAAlC,EAA2D;AACzD,wBAAMuB,kBAAkB5jB,QAAQ0jB,aAAhC;AACAV,kCAAgB,IAAhBA;AACA7Z,sBAAIt6B,IAAJs6B;AACAA,sBAAIra,KAAJqa,CAAUya,eAAVza,EAA2B,CAA3BA;AACAia,6BAAWQ,eAAXR;AALF,uBAMO,IAAIpjB,UAAU0jB,aAAd,EAA6B;AAClCN,6BACK,SAAQM,aAAR,IAAyB,IAAzB,GAAiCpQ,QAAjC,GAA6CC,aADlD6P;AAd6B;AA3BA;;AAgDjC,kBAAI,KAAKjH,cAAL,KAAwB4G,MAAMc,QAANd,IAAkBzuC,KAAK6yB,WAA/C,CAAJ,EAAiE;AAC/D,oBAAI0b,kBAAkB,CAACM,MAAvB,EAA+B;AAE7Bha,sBAAIG,QAAJH,CAAa8B,SAAb9B,EAAwBia,OAAxBja,EAAiCka,OAAjCla;AAFF,uBAGO;AACL,uBAAK4Y,SAAL,CACE9W,SADF,EAEEmY,OAFF,EAGEC,OAHF,EAIErB,gBAJF,EAKEC,mBALF;;AAOA,sBAAIkB,MAAJ,EAAY;AACV,0BAAMW,gBACJV,UAAW9P,WAAW6P,OAAOta,MAAPsa,CAAc5gB,CAAzB+Q,GAA8BC,aAD3C;AAEA,0BAAMwQ,gBACJV,UAAW/P,WAAW6P,OAAOta,MAAPsa,CAAc3gB,CAAzB8Q,GAA8BC,aAD3C;AAEA,yBAAKwO,SAAL,CACEoB,OAAOD,QADT,EAEEY,aAFF,EAGEC,aAHF,EAIE/B,gBAJF,EAKEC,mBALF;AAbG;AAJwD;AAhDhC;;AA4EjC,kBAAI+B,SAAJ;;AACA,kBAAIvB,QAAJ,EAAc;AACZuB,4BAAYhkB,QAAQ4iB,iBAAR5iB,GAA4BmhB,UAAUG,aAAlD0C;AADF,qBAEO;AACLA,4BAAYhkB,QAAQ4iB,iBAAR5iB,GAA4BmhB,UAAUG,aAAlD0C;AAhF+B;;AAkFjCzhB,mBAAKyhB,SAALzhB;;AAEA,kBAAIygB,aAAJ,EAAmB;AACjB7Z,oBAAIr6B,OAAJq6B;AArF+B;AAhFpB;;AAwKf,gBAAIsZ,QAAJ,EAAc;AACZrX,sBAAQ5I,CAAR4I,IAAa7I,CAAb6I;AADF,mBAEO;AACLA,sBAAQ7I,CAAR6I,IAAa7I,IAAIyR,UAAjB5I;AA3Ka;;AA6KfjC,gBAAIr6B,OAAJq6B;AACA,iBAAKiX,OAAL;AACA,mBAAO3mC,SAAP;AAntCiB;;AAstCnB8oC,wBAAcD,MAAdC,EAAsB;AAEpB,kBAAMpZ,MAAM,KAAKA,GAAjB;AACA,kBAAMiC,UAAU,KAAKA,OAArB;AACA,kBAAM92B,OAAO82B,QAAQ92B,IAArB;AACA,kBAAMg/B,WAAWlI,QAAQkI,QAAzB;AACA,kBAAMgO,gBAAgBlW,QAAQkW,aAA9B;AACA,kBAAMoB,aAAapuC,KAAKmuC,QAALnuC,GAAgB,CAAhBA,GAAoB,CAAC,CAAxC;AACA,kBAAMw/B,cAAc1I,QAAQ0I,WAA5B;AACA,kBAAMC,cAAc3I,QAAQ2I,WAA5B;AACA,kBAAMC,aAAa5I,QAAQ4I,UAAR5I,GAAqBkW,aAAxC;AACA,kBAAM5N,aAAatI,QAAQsI,UAARtI,IAAsBrnC,0BAAzC;AACA,kBAAMy+C,eAAeF,OAAO7qC,MAA5B;AACA,kBAAMwsC,kBACJ7Y,QAAQ6I,iBAAR7I,KAA8B/lC,wBAAkBI,SADlD;AAEA,gBAAIsU,CAAJ,EAAOgpC,KAAP,EAAc/iB,KAAd,EAAqBkkB,aAArB;;AAEA,gBAAID,mBAAmB3Q,aAAa,CAApC,EAAuC;AACrC;AAlBkB;;AAoBpB,iBAAKoJ,0BAAL,GAAkC,IAAlC;AAEAvT,gBAAIt6B,IAAJs6B;AACAA,gBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyBiC,QAAQoI,UAAjCrK;AACAA,gBAAIuE,SAAJvE,CAAciC,QAAQ7I,CAAtB4G,EAAyBiC,QAAQ5I,CAAjC2G;AAEAA,gBAAIra,KAAJqa,CAAU6K,UAAV7K,EAAsBmY,aAAtBnY;;AAEA,iBAAKpvB,IAAI,CAAT,EAAYA,IAAIyoC,YAAhB,EAA8B,EAAEzoC,CAAhC,EAAmC;AACjCgpC,sBAAQT,OAAOvoC,CAAPuoC,CAARS;;AACA,kBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BmB,gCAAiBxB,aAAaK,KAAbL,GAAqBpP,QAArBoP,GAAiC,IAAlDwB;AACA,qBAAK/a,GAAL,CAASuE,SAAT,CAAmBwW,aAAnB,EAAkC,CAAlC;AACA9Y,wBAAQ7I,CAAR6I,IAAa8Y,gBAAgBlQ,UAA7B5I;AACA;AAN+B;;AASjC,oBAAM+V,UAAW,OAAM8B,OAAN,GAAgBlP,WAAhB,GAA8B,CAA9B,IAAmCD,WAApD;AACA,oBAAMxiB,eAAehd,KAAK6vC,oBAAL7vC,CAA0ByuC,MAAMqB,cAAhC9vC,CAArB;;AACA,kBAAI,CAACgd,YAAL,EAAmB;AACjBnb,gCAAM,oBAAmB4sC,MAAMqB,cAAe,qBAA9CjuC;AACA;AAb+B;;AAejC,kBAAI,KAAKgmC,cAAT,EAAyB;AACvB,qBAAKR,eAAL,GAAuBoH,KAAvB;AACA,qBAAKl0C,IAAL;AACAs6B,oBAAIra,KAAJqa,CAAUmK,QAAVnK,EAAoBmK,QAApBnK;AACAA,oBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyBuK,UAAzBvK;AACA,qBAAK9J,mBAAL,CAAyB/N,YAAzB;AACA,qBAAKxiB,OAAL;AArB+B;;AAwBjC,oBAAMu1C,cAAc3nC,WAAKO,cAALP,CAAoB,CAACqmC,MAAM/iB,KAAP,EAAc,CAAd,CAApBtjB,EAAsCg3B,UAAtCh3B,CAApB;;AACAsjB,sBAAQqkB,YAAY,CAAZA,IAAiB/Q,QAAjB+Q,GAA4BlD,OAApCnhB;AAEAmJ,kBAAIuE,SAAJvE,CAAcnJ,KAAdmJ,EAAqB,CAArBA;AACAiC,sBAAQ7I,CAAR6I,IAAapL,QAAQgU,UAArB5I;AAxDkB;;AA0DpBjC,gBAAIr6B,OAAJq6B;AACA,iBAAKwS,eAAL,GAAuB,IAAvB;AAjxCiB;;AAqxCnBxqC,uBAAamzC,MAAbnzC,EAAqBozC,MAArBpzC,EAA6B,CArxCV;;AA0xCnBC,gCAAsBkzC,MAAtBlzC,EAA8BmzC,MAA9BnzC,EAAsCozC,GAAtCpzC,EAA2CqzC,GAA3CrzC,EAAgDszC,GAAhDtzC,EAAqDuzC,GAArDvzC,EAA0D;AAGxD,iBAAK+3B,GAAL,CAASvqB,IAAT,CAAc4lC,GAAd,EAAmBC,GAAnB,EAAwBC,MAAMF,GAA9B,EAAmCG,MAAMF,GAAzC;AACA,iBAAKz0C,IAAL;AACA,iBAAKD,OAAL;AA/xCiB;;AAmyCnB60C,4BAAkBC,EAAlBD,EAAsB;AACpB,gBAAI9B,OAAJ;;AACA,gBAAI+B,GAAG,CAAHA,MAAU,eAAd,EAA+B;AAC7B,oBAAMC,QAAQD,GAAG,CAAHA,CAAd;AACA,oBAAMjJ,gBACJ,KAAKA,aAAL,IAAsB,KAAKzS,GAAL,CAASsG,mBAAT,CAA6B9xB,KAA7B,EADxB;AAEA,oBAAMonC,wBAAwB;AAC5BC,sCAAsB7b,OAAO;AAC3B,yBAAO,IAAInK,cAAJ,CACLmK,GADK,EAEL,KAAKjb,UAFA,EAGL,KAAKC,IAHA,EAIL,KAAKqC,aAJA,CAAP;AAF0B;AAAA,eAA9B;AAUAsyB,wBAAU,IAAImC,6BAAJ,CACRJ,EADQ,EAERC,KAFQ,EAGR,KAAK3b,GAHG,EAIR4b,qBAJQ,EAKRnJ,aALQ,CAAVkH;AAdF,mBAqBO;AACLA,wBAAU,KAAKoC,WAAL,CAAiBL,GAAG,CAAHA,CAAjB,EAAwBA,GAAG,CAAHA,CAAxB,CAAV/B;AAxBkB;;AA0BpB,mBAAOA,OAAP;AA7zCiB;;AAg0CnBtxC,4BAAkB;AAChB,iBAAK45B,OAAL,CAAagJ,WAAb,GAA2B,KAAKwQ,iBAAL,CAAuBh0B,SAAvB,CAA3B;AAj0CiB;;AAo0CnBlf,0BAAgB;AACd,iBAAK05B,OAAL,CAAa+I,SAAb,GAAyB,KAAKyQ,iBAAL,CAAuBh0B,SAAvB,CAAzB;AACA,iBAAKwa,OAAL,CAAaiJ,WAAb,GAA2B,IAA3B;AAt0CiB;;AAy0CnBxiC,4BAAkB+K,CAAlB/K,EAAqBgL,CAArBhL,EAAwBiL,CAAxBjL,EAA2B;AACzB,kBAAMizC,QAAQpoC,WAAKC,YAALD,CAAkBE,CAAlBF,EAAqBG,CAArBH,EAAwBI,CAAxBJ,CAAd;;AACA,iBAAKysB,GAAL,CAASgP,WAAT,GAAuB2M,KAAvB;AACA,iBAAK1Z,OAAL,CAAagJ,WAAb,GAA2B0Q,KAA3B;AA50CiB;;AA+0CnBhzC,0BAAgB8K,CAAhB9K,EAAmB+K,CAAnB/K,EAAsBgL,CAAtBhL,EAAyB;AACvB,kBAAMgzC,QAAQpoC,WAAKC,YAALD,CAAkBE,CAAlBF,EAAqBG,CAArBH,EAAwBI,CAAxBJ,CAAd;;AACA,iBAAKysB,GAAL,CAASiP,SAAT,GAAqB0M,KAArB;AACA,iBAAK1Z,OAAL,CAAa+I,SAAb,GAAyB2Q,KAAzB;AACA,iBAAK1Z,OAAL,CAAaiJ,WAAb,GAA2B,KAA3B;AAn1CiB;;AAs1CnB6Q,sBAAY9nB,KAAZ8nB,EAAkC;AAAA,gBAAfC,MAAe,uEAAN,IAAM;AAChC,gBAAIrC,OAAJ;;AACA,gBAAI,KAAKxG,cAAL,CAAoBrlB,GAApB,CAAwBmG,KAAxB,CAAJ,EAAoC;AAClC0lB,wBAAU,KAAKxG,cAAL,CAAoBx5B,GAApB,CAAwBsa,KAAxB,CAAV0lB;AADF,mBAEO;AACLA,wBAAUsC,uCAAkB,KAAKj3B,IAAL,CAAUrL,GAAV,CAAcsa,KAAd,CAAlBgoB,CAAVtC;AACA,mBAAKxG,cAAL,CAAoBlhC,GAApB,CAAwBgiB,KAAxB,EAA+B0lB,OAA/B;AAN8B;;AAQhC,gBAAIqC,MAAJ,EAAY;AACVrC,sBAAQqC,MAARrC,GAAiBqC,MAAjBrC;AAT8B;;AAWhC,mBAAOA,OAAP;AAj2CiB;;AAo2CnB7wC,sBAAYmrB,KAAZnrB,EAAmB;AACjB,gBAAI,CAAC,KAAKkqC,cAAV,EAA0B;AACxB;AAFe;;AAIjB,kBAAMhT,MAAM,KAAKA,GAAjB;AAEA,iBAAKt6B,IAAL;;AACA,kBAAMi0C,UAAU,KAAKoC,WAAL,CAAiB9nB,KAAjB,CAAhB;;AACA+L,gBAAIiP,SAAJjP,GAAgB2Z,QAAQvD,UAARuD,CACd3Z,GADc2Z,EAEd,IAFcA,EAGd3Z,IAAIiW,0BAHU0D,EAIdvN,yBAAS8P,OAJKvC,CAAhB3Z;AAOA,kBAAMmc,MAAMnc,IAAIiW,0BAAhB;;AACA,gBAAIkG,GAAJ,EAAS;AACP,oBAAM7mB,SAAS0K,IAAI1K,MAAnB;AACA,oBAAMuB,QAAQvB,OAAOuB,KAArB;AACA,oBAAMC,SAASxB,OAAOwB,MAAtB;;AAEA,oBAAMslB,KAAK7oC,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAI,CAAJ,CAApBA,EAA4B4oC,GAA5B5oC,CAAX;;AACA,oBAAM8oC,KAAK9oC,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAIujB,MAAJ,CAApBvjB,EAAiC4oC,GAAjC5oC,CAAX;;AACA,oBAAM+oC,KAAK/oC,WAAKO,cAALP,CAAoB,CAACsjB,KAAD,EAAQ,CAAR,CAApBtjB,EAAgC4oC,GAAhC5oC,CAAX;;AACA,oBAAMgpC,KAAKhpC,WAAKO,cAALP,CAAoB,CAACsjB,KAAD,EAAQC,MAAR,CAApBvjB,EAAqC4oC,GAArC5oC,CAAX;;AAEA,oBAAM4C,KAAKrF,KAAKC,GAALD,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMsF,KAAKtF,KAAKC,GAALD,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMuF,KAAKvF,KAAK6D,GAAL7D,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMwF,KAAKxF,KAAK6D,GAAL7D,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AAEA,mBAAKkvB,GAAL,CAASwT,QAAT,CAAkBr9B,EAAlB,EAAsBC,EAAtB,EAA0BC,KAAKF,EAA/B,EAAmCG,KAAKF,EAAxC;AAfF,mBAgBO;AAOL,mBAAK4pB,GAAL,CAASwT,QAAT,CAAkB,CAAC,IAAnB,EAAyB,CAAC,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC;AAvCe;;AA0CjB,iBAAKyD,OAAL,CAAa,KAAKhV,OAAL,CAAawK,yBAAb,EAAb;AACA,iBAAK9mC,OAAL;AA/4CiB;;AAm5CnBoD,6BAAmB;AACjBkE,mCAAY,kCAAZA;AAp5CiB;;AAu5CnBjE,2BAAiB;AACfiE,mCAAY,gCAAZA;AAx5CiB;;AA25CnBvD,gCAAsBsyC,MAAtBtyC,EAA8B8yC,IAA9B9yC,EAAoC;AAClC,gBAAI,CAAC,KAAKspC,cAAV,EAA0B;AACxB;AAFgC;;AAIlC,iBAAKttC,IAAL;AACA,iBAAKgtC,kBAAL,CAAwBxhC,IAAxB,CAA6B,KAAKuhC,aAAlC;;AAEA,gBAAIt/B,MAAMspC,OAANtpC,CAAc6oC,MAAd7oC,KAAyB6oC,OAAO1tC,MAAP0tC,KAAkB,CAA/C,EAAkD;AAChD,mBAAKp2C,SAAL,CAAe8K,KAAf,CAAqB,IAArB,EAA2BsrC,MAA3B;AARgC;;AAWlC,iBAAKvJ,aAAL,GAAqB,KAAKzS,GAAL,CAASsG,mBAA9B;;AAEA,gBAAIkW,IAAJ,EAAU;AACR,oBAAM3lB,QAAQ2lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAxB;AACA,oBAAM1lB,SAAS0lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAzB;AACA,mBAAKxc,GAAL,CAASvqB,IAAT,CAAc+mC,KAAK,CAALA,CAAd,EAAuBA,KAAK,CAALA,CAAvB,EAAgC3lB,KAAhC,EAAuCC,MAAvC;AACA,mBAAKmL,OAAL,CAAa0J,gBAAb,CACE,KAAK3L,GAAL,CAASsG,mBADX,EAEEkW,KAAK,CAALA,CAFF,EAGEA,KAAK,CAALA,CAHF;AAKA,mBAAKva,OAAL,CAAa0J,gBAAb,CACE,KAAK3L,GAAL,CAASsG,mBADX,EAEEkW,KAAK,CAALA,CAFF,EAGEA,KAAK,CAALA,CAHF;AAKA,mBAAK31C,IAAL;AACA,mBAAKD,OAAL;AA5BgC;AA35CjB;;AA27CnB+C,gCAAsB;AACpB,gBAAI,CAAC,KAAKqpC,cAAV,EAA0B;AACxB;AAFkB;;AAIpB,iBAAKrtC,OAAL;AACA,iBAAK8sC,aAAL,GAAqB,KAAKC,kBAAL,CAAwB7K,GAAxB,EAArB;AAh8CiB;;AAm8CnBj+B,qBAAW8yC,KAAX9yC,EAAkB;AAChB,gBAAI,CAAC,KAAKopC,cAAV,EAA0B;AACxB;AAFc;;AAKhB,iBAAKttC,IAAL;;AAGA,gBAAI,KAAK6uC,WAAT,EAAsB;AACpB,mBAAKuC,YAAL;AACA,mBAAK7U,OAAL,CAAaqJ,WAAb,GAA2B,IAA3B;AAVc;;AAahB,kBAAMqR,aAAa,KAAK3c,GAAxB;;AAcA,gBAAI,CAAC0c,MAAME,QAAX,EAAqB;AACnBhwC,8BAAK,oCAALA;AA5Bc;;AAiChB,gBAAI8vC,MAAMG,QAAV,EAAoB;AAClB7vC,8BAAK,gCAALA;AAlCc;;AAqChB,kBAAM8vC,mBAAmBH,WAAWrW,mBAApC;;AACA,gBAAIoW,MAAMV,MAAV,EAAkB;AAChBW,yBAAW/2C,SAAX+2C,CAAqBjsC,KAArBisC,CAA2BA,UAA3BA,EAAuCD,MAAMV,MAA7CW;AAvCc;;AAyChB,gBAAI,CAACD,MAAMF,IAAX,EAAiB;AACf,oBAAM,IAAItvC,KAAJ,CAAU,2BAAV,CAAN;AA1Cc;;AA+ChB,gBAAI0J,SAASrD,WAAKc,0BAALd,CACXmpC,MAAMF,IADKjpC,EAEXopC,WAAWrW,mBAFA/yB,CAAb;;AAKA,kBAAMwpC,eAAe,CACnB,CADmB,EAEnB,CAFmB,EAGnBJ,WAAWrnB,MAAXqnB,CAAkB9lB,KAHC,EAInB8lB,WAAWrnB,MAAXqnB,CAAkB7lB,MAJC,CAArB;AAMAlgB,qBAASrD,WAAKmC,SAALnC,CAAeqD,MAAfrD,EAAuBwpC,YAAvBxpC,KAAwC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjDqD;AAGA,kBAAMiP,UAAU/U,KAAKqmC,KAALrmC,CAAW8F,OAAO,CAAPA,CAAX9F,CAAhB;AACA,kBAAMgV,UAAUhV,KAAKqmC,KAALrmC,CAAW8F,OAAO,CAAPA,CAAX9F,CAAhB;AACA,gBAAI8kC,aAAa9kC,KAAK6D,GAAL7D,CAASA,KAAKkgC,IAALlgC,CAAU8F,OAAO,CAAPA,CAAV9F,IAAuB+U,OAAhC/U,EAAyC,CAAzCA,CAAjB;AACA,gBAAI+kC,cAAc/kC,KAAK6D,GAAL7D,CAASA,KAAKkgC,IAALlgC,CAAU8F,OAAO,CAAPA,CAAV9F,IAAuBgV,OAAhChV,EAAyC,CAAzCA,CAAlB;AACA,gBAAIksC,SAAS,CAAb;AAAA,gBACEC,SAAS,CADX;;AAEA,gBAAIrH,aAAapS,cAAjB,EAAiC;AAC/BwZ,uBAASpH,aAAapS,cAAtBwZ;AACApH,2BAAapS,cAAboS;AArEc;;AAuEhB,gBAAIC,cAAcrS,cAAlB,EAAkC;AAChCyZ,uBAASpH,cAAcrS,cAAvByZ;AACApH,4BAAcrS,cAAdqS;AAzEc;;AA4EhB,iBAAK5T,OAAL,CAAauJ,sBAAb,CAAoC,CAAC,CAAD,EAAI,CAAJ,EAAOoK,UAAP,EAAmBC,WAAnB,CAApC;AAEA,gBAAIkB,UAAU,YAAY,KAAKpE,UAA/B;;AACA,gBAAI+J,MAAMzxC,KAAV,EAAiB;AAEf8rC,yBAAW,YAAa,KAAKlE,YAAL,KAAsB,CAA9CkE;AAjFc;;AAmFhB,kBAAMC,gBAAgB,KAAK9D,cAAL,CAAoB9K,SAApB,CACpB2O,OADoB,EAEpBnB,UAFoB,EAGpBC,WAHoB,EAIpB,IAJoB,CAAtB;AAMA,kBAAMqH,WAAWlG,cAAcla,OAA/B;AAIAogB,qBAASv3B,KAATu3B,CAAe,IAAIF,MAAnBE,EAA2B,IAAID,MAA/BC;AACAA,qBAAS3Y,SAAT2Y,CAAmB,CAACr3B,OAApBq3B,EAA6B,CAACp3B,OAA9Bo3B;AACAA,qBAASt3C,SAATs3C,CAAmBxsC,KAAnBwsC,CAAyBA,QAAzBA,EAAmCJ,gBAAnCI;;AAEA,gBAAIR,MAAMzxC,KAAV,EAAiB;AAEf,mBAAK2nC,UAAL,CAAgB1hC,IAAhB,CAAqB;AACnBokB,wBAAQ0hB,cAAc1hB,MADH;AAEnBwH,yBAASogB,QAFU;AAGnBr3B,uBAHmB;AAInBC,uBAJmB;AAKnBk3B,sBALmB;AAMnBC,sBANmB;AAOnB3M,yBAASoM,MAAMzxC,KAANyxC,CAAYpM,OAPF;AAQnBC,0BAAUmM,MAAMzxC,KAANyxC,CAAYnM,QARH;AASnBN,6BAAayM,MAAMzxC,KAANyxC,CAAYzM,WAAZyM,IAA2B,IATrB;AAUnBS,uCAAuB;AAVJ,eAArB;AAFF,mBAcO;AAGLR,yBAAWjY,YAAXiY,CAAwB,CAAxBA,EAA2B,CAA3BA,EAA8B,CAA9BA,EAAiC,CAAjCA,EAAoC,CAApCA,EAAuC,CAAvCA;AACAA,yBAAWpY,SAAXoY,CAAqB92B,OAArB82B,EAA8B72B,OAA9B62B;AACAA,yBAAWh3B,KAAXg3B,CAAiBK,MAAjBL,EAAyBM,MAAzBN;AACAA,yBAAWj3C,IAAXi3C;AArHc;;AAyHhBnO,yBAAamO,UAAbnO,EAAyB0O,QAAzB1O;AACA,iBAAKxO,GAAL,GAAWkd,QAAX;AACA,iBAAKz3C,SAAL,CAAe,CACb,CAAC,IAAD,EAAO,aAAP,CADa,EAEb,CAAC,IAAD,EAAO,CAAP,CAFa,EAGb,CAAC,IAAD,EAAO,CAAP,CAHa,CAAf;AAKA,iBAAK8sC,UAAL,CAAgBrhC,IAAhB,CAAqByrC,UAArB;AACA,iBAAKhK,UAAL;AApkDiB;;AAukDnB9oC,mBAAS6yC,KAAT7yC,EAAgB;AACd,gBAAI,CAAC,KAAKmpC,cAAV,EAA0B;AACxB;AAFY;;AAId,iBAAKL,UAAL;AACA,kBAAMuK,WAAW,KAAKld,GAAtB;AACA,kBAAMA,MAAM,KAAKuS,UAAL,CAAgB1K,GAAhB,EAAZ;AACA,iBAAK7H,GAAL,GAAWA,GAAX;AAGA,iBAAKA,GAAL,CAASkW,qBAAT,GAAiC,KAAjC;;AAEA,gBAAIwG,MAAMzxC,KAAV,EAAiB;AACf,mBAAK6nC,SAAL,GAAiB,KAAKF,UAAL,CAAgB/K,GAAhB,EAAjB;AACA,mBAAKliC,OAAL;AAFF,mBAGO;AACL,mBAAKq6B,GAAL,CAASr6B,OAAT;AACA,oBAAMy3C,aAAa,KAAKpd,GAAL,CAASsG,mBAA5B;AACA,mBAAK3gC,OAAL;AACA,mBAAKq6B,GAAL,CAASt6B,IAAT;AACA,mBAAKs6B,GAAL,CAAS0E,YAAT,CAAsBh0B,KAAtB,CAA4B,KAAKsvB,GAAjC,EAAsCod,UAAtC;;AACA,oBAAMlG,WAAW3jC,WAAKc,0BAALd,CACf,CAAC,CAAD,EAAI,CAAJ,EAAO2pC,SAAS5nB,MAAT4nB,CAAgBrmB,KAAvB,EAA8BqmB,SAAS5nB,MAAT4nB,CAAgBpmB,MAA9C,CADevjB,EAEf6pC,UAFe7pC,CAAjB;;AAIA,mBAAKysB,GAAL,CAASuR,SAAT,CAAmB2L,SAAS5nB,MAA5B,EAAoC,CAApC,EAAuC,CAAvC;AACA,mBAAK0K,GAAL,CAASr6B,OAAT;AACA,mBAAKsxC,OAAL,CAAaC,QAAb;AA3BY;AAvkDG;;AAsmDnBptC,6BAAmB;AACjB,iBAAKpE,IAAL;;AACA,gBAAI,KAAK+sC,aAAT,EAAwB;AACtB,mBAAKzS,GAAL,CAAS0E,YAAT,CAAsBh0B,KAAtB,CAA4B,KAAKsvB,GAAjC,EAAsC,KAAKyS,aAA3C;AAHe;AAtmDA;;AA6mDnB1oC,2BAAiB;AACf,iBAAKpE,OAAL;AA9mDiB;;AAinDnBqE,0BAAgB0Y,EAAhB1Y,EAAoByL,IAApBzL,EAA0BpE,SAA1BoE,EAAqCgyC,MAArChyC,EAA6CqzC,YAA7CrzC,EAA2D;AACzD,iBAAKtE,IAAL;;AAEA,gBAAIyN,MAAMspC,OAANtpC,CAAcsC,IAAdtC,KAAuBsC,KAAKnH,MAALmH,KAAgB,CAA3C,EAA8C;AAC5C,oBAAMohB,QAAQphB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAxB;AACA,oBAAMqhB,SAASrhB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAzB;;AAEA,kBAAI4nC,gBAAgB,KAAK71B,mBAAzB,EAA8C;AAC5C5hB,4BAAYA,UAAU4O,KAAV5O,EAAZA;AACAA,0BAAU,CAAVA,KAAgB6P,KAAK,CAALA,CAAhB7P;AACAA,0BAAU,CAAVA,KAAgB6P,KAAK,CAALA,CAAhB7P;AAEA6P,uBAAOA,KAAKjB,KAALiB,EAAPA;AACAA,qBAAK,CAALA,IAAUA,KAAK,CAALA,IAAU,CAApBA;AACAA,qBAAK,CAALA,IAAUohB,KAAVphB;AACAA,qBAAK,CAALA,IAAUqhB,MAAVrhB;;AAEA,sBAAM,CAACunC,MAAD,EAASC,MAAT,IAAmB1pC,WAAKwB,6BAALxB,CACvB,KAAKysB,GAAL,CAASsG,mBADc/yB,CAAzB;;AAGA,sBAAM;AAAE6/B;AAAF,oBAAoB,IAA1B;AACA,sBAAMkK,cAAcxsC,KAAKkgC,IAALlgC,CAClB+lB,QAAQ,KAAKwc,YAAbxc,GAA4Buc,aADVtiC,CAApB;AAGA,sBAAMysC,eAAezsC,KAAKkgC,IAALlgC,CACnBgmB,SAAS,KAAKwc,YAAdxc,GAA6Bsc,aADVtiC,CAArB;AAIA,qBAAK0sC,gBAAL,GAAwB,KAAKn2B,aAAL,CAAmB9U,MAAnB,CACtB+qC,WADsB,EAEtBC,YAFsB,CAAxB;AAIA,sBAAM;AAAEjoB,wBAAF;AAAUwH;AAAV,oBAAsB,KAAK0gB,gBAAjC;AACAloB,uBAAOuH,KAAPvH,CAAauB,KAAbvB,GAAsB,QAAOuB,KAAM,oCAAnCvB;AACAA,uBAAOuH,KAAPvH,CAAawB,MAAbxB,GAAuB,QAAOwB,MAAO,oCAArCxB;AACA,qBAAK9N,mBAAL,CAAyBvV,GAAzB,CAA6ByQ,EAA7B,EAAiC4S,MAAjC;AACA,qBAAKkoB,gBAAL,CAAsBC,QAAtB,GAAiC,KAAKzd,GAAtC;AACA,qBAAKA,GAAL,GAAWlD,OAAX;AACA,qBAAKkD,GAAL,CAAS0E,YAAT,CAAsBsY,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAACC,MAArC,EAA6C,CAA7C,EAAgDnmB,SAASmmB,MAAzD;AACA7W,2CAA2B,KAAKpG,GAAhCoG;AAEA2I,kCAAkB,KAAK/O,GAAvB+O;AAlCF,qBAmCO;AACLA,kCAAkB,KAAK/O,GAAvB+O;AAEA,qBAAK/O,GAAL,CAASvqB,IAAT,CAAcA,KAAK,CAALA,CAAd,EAAuBA,KAAK,CAALA,CAAvB,EAAgCohB,KAAhC,EAAuCC,MAAvC;AACA,qBAAKjwB,IAAL;AACA,qBAAKD,OAAL;AA5C0C;AAHW;;AAmDzD,iBAAKq7B,OAAL,GAAe,IAAIgI,gBAAJ,CACb,KAAKjK,GAAL,CAAS1K,MAAT,CAAgBuB,KADH,EAEb,KAAKmJ,GAAL,CAAS1K,MAAT,CAAgBwB,MAFH,CAAf;AAKA,iBAAKlxB,SAAL,CAAe8K,KAAf,CAAqB,IAArB,EAA2B9K,SAA3B;AACA,iBAAKA,SAAL,CAAe8K,KAAf,CAAqB,IAArB,EAA2BsrC,MAA3B;AA1qDiB;;AA6qDnB/xC,0BAAgB;AACd,gBAAI,KAAKuzC,gBAAT,EAA2B;AACzB,mBAAKxd,GAAL,GAAW,KAAKwd,gBAAL,CAAsBC,QAAjC;AACA,qBAAO,KAAKD,gBAAL,CAAsBC,QAA7B;AACA,qBAAO,KAAKD,gBAAZ;AAJY;;AAMd,iBAAK73C,OAAL;AAnrDiB;;AAsrDnBwE,gCAAsBuqC,GAAtBvqC,EAA2B;AACzB,gBAAI,CAAC,KAAK6oC,cAAV,EAA0B;AACxB;AAFuB;;AAIzB,kBAAMhT,MAAM,KAAKA,GAAjB;AACA,kBAAMnJ,QAAQ6d,IAAI7d,KAAlB;AAAA,kBACEC,SAAS4d,IAAI5d,MADf;AAGA,kBAAM8iB,QAAQ,KAAKpH,eAAnB;;AAEA,gBAAI7O,wBAAwBiW,KAAxBjW,IAAiCiW,MAAM8D,QAAN9D,KAAmBtpC,SAAxD,EAAmE;AACjE,kBAAIumB,SAAS+M,mBAAT/M,IAAgCC,UAAU8M,mBAA9C,EAAmE;AACjEgW,sBAAM8D,QAAN9D,GAAiBrR,kBAAkB;AAAEz2B,wBAAM4iC,IAAI5iC,IAAZ;AAAkB+kB,uBAAlB;AAAyBC;AAAzB,iBAAlByR,CAAjBqR;AADF,qBAEO;AACLA,sBAAM8D,QAAN9D,GAAiB,IAAjBA;AAJ+D;AAV1C;;AAkBzB,gBAAIA,OAAO8D,QAAX,EAAqB;AACnB9D,oBAAM8D,QAAN9D,CAAe5Z,GAAf4Z;AACA;AApBuB;;AAsBzB,kBAAM3Q,OAAO,KAAKoM,iBAAL,CAAuBX,GAAvB,CAAb;;AACA,kBAAMa,aAAatM,KAAK3T,MAAxB;AAEA0K,gBAAIt6B,IAAJs6B;AAGAA,gBAAI0E,YAAJ1E,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,CAAvBA,EAA0B,CAA1BA,EAA6B,CAA7BA,EAAgC,CAAhCA;AACAA,gBAAIuR,SAAJvR,CAAcuV,UAAdvV,EAA0BiJ,KAAKpjB,OAA/Bma,EAAwCiJ,KAAKnjB,OAA7Cka;AACAA,gBAAIr6B,OAAJq6B;AACA,iBAAKiX,OAAL;AArtDiB;;AAwtDnBxsC,sCACE+9B,OADF/9B,EAEEuyC,MAFFvyC,EAOE;AAAA,gBAJAkzC,KAIA,uEAJQ,CAIR;AAAA,gBAHAC,KAGA,uEAHQ,CAGR;AAAA,gBAFAX,MAEA;AAAA,gBADAY,SACA;;AACA,gBAAI,CAAC,KAAK7K,cAAV,EAA0B;AACxB;AAFF;;AAIA,kBAAMhT,MAAM,KAAKA,GAAjB;AACAA,gBAAIt6B,IAAJs6B;AACA,kBAAM8c,mBAAmB9c,IAAIsG,mBAA7B;AACAtG,gBAAIp6B,SAAJo6B,CAAcgd,MAAdhd,EAAsB2d,KAAtB3d,EAA6B4d,KAA7B5d,EAAoCid,MAApCjd,EAA4C,CAA5CA,EAA+C,CAA/CA;;AACA,kBAAMiJ,OAAO,KAAKoM,iBAAL,CAAuB7M,OAAvB,CAAb;;AAEAxI,gBAAI0E,YAAJ1E,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuB,CAAvBA,EAA0B,CAA1BA,EAA6B,CAA7BA,EAAgC,CAAhCA;;AACA,iBAAK,IAAIpvB,IAAI,CAAR,EAAWiH,KAAKgmC,UAAUvvC,MAA/B,EAAuCsC,IAAIiH,EAA3C,EAA+CjH,KAAK,CAApD,EAAuD;AACrD,oBAAMktC,QAAQvqC,WAAK3N,SAAL2N,CAAeupC,gBAAfvpC,EAAiC,CAC7CypC,MAD6C,EAE7CW,KAF6C,EAG7CC,KAH6C,EAI7CX,MAJ6C,EAK7CY,UAAUjtC,CAAVitC,CAL6C,EAM7CA,UAAUjtC,IAAI,CAAditC,CAN6C,CAAjCtqC,CAAd;;AASA,oBAAM,CAAC6lB,CAAD,EAAIC,CAAJ,IAAS9lB,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAI,CAAJ,CAApBA,EAA4BuqC,KAA5BvqC,CAAf;;AACAysB,kBAAIuR,SAAJvR,CAAciJ,KAAK3T,MAAnB0K,EAA2B5G,CAA3B4G,EAA8B3G,CAA9B2G;AAtBF;;AAwBAA,gBAAIr6B,OAAJq6B;AACA,iBAAKiX,OAAL;AAxvDiB;;AA2vDnB7sC,qCAA2B2zC,MAA3B3zC,EAAmC;AACjC,gBAAI,CAAC,KAAK4oC,cAAV,EAA0B;AACxB;AAF+B;;AAIjC,kBAAMhT,MAAM,KAAKA,GAAjB;AAEA,kBAAMgL,YAAY,KAAK/I,OAAL,CAAa+I,SAA/B;AACA,kBAAMsK,gBAAgB,KAAKrT,OAAL,CAAaiJ,WAAnC;;AACA,iBAAK,IAAIt6B,IAAI,CAAR,EAAWiH,KAAKkmC,OAAOzvC,MAA5B,EAAoCsC,IAAIiH,EAAxC,EAA4CjH,GAA5C,EAAiD;AAC/C,oBAAMotC,QAAQD,OAAOntC,CAAPmtC,CAAd;AACA,oBAAMlnB,QAAQmnB,MAAMnnB,KAApB;AAAA,oBACEC,SAASknB,MAAMlnB,MADjB;AAGA,oBAAMye,aAAa,KAAKrC,cAAL,CAAoB9K,SAApB,CACjB,YADiB,EAEjBvR,KAFiB,EAGjBC,MAHiB,CAAnB;AAKA,oBAAMsZ,UAAUmF,WAAWzY,OAA3B;AACAsT,sBAAQ1qC,IAAR0qC;AAEA7B,iCAAmB6B,OAAnB7B,EAA4ByP,KAA5BzP;AAEA6B,sBAAQb,wBAARa,GAAmC,WAAnCA;AAEAA,sBAAQnB,SAARmB,GAAoBkF,gBAChBtK,UAAUoL,UAAVpL,CACEoF,OADFpF,EAEE,IAFFA,EAGEhL,IAAIiW,0BAHNjL,EAIEoB,yBAASjwC,IAJX6uC,CADgBsK,GAOhBtK,SAPJoF;AAQAA,sBAAQoD,QAARpD,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuBvZ,KAAvBuZ,EAA8BtZ,MAA9BsZ;AAEAA,sBAAQzqC,OAARyqC;AAEApQ,kBAAIt6B,IAAJs6B;AACAA,kBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyBge,MAAMp4C,SAA/Bo6B;AACAA,kBAAIra,KAAJqa,CAAU,CAAVA,EAAa,CAAC,CAAdA;AACAA,kBAAIuR,SAAJvR,CAAcuV,WAAWjgB,MAAzB0K,EAAiC,CAAjCA,EAAoC,CAApCA,EAAuCnJ,KAAvCmJ,EAA8ClJ,MAA9CkJ,EAAsD,CAAtDA,EAAyD,CAAC,CAA1DA,EAA6D,CAA7DA,EAAgE,CAAhEA;AACAA,kBAAIr6B,OAAJq6B;AAzC+B;;AA2CjC,iBAAKiX,OAAL;AAtyDiB;;AAyyDnB5sC,4BAAkB4pB,KAAlB5pB,EAAyB;AACvB,gBAAI,CAAC,KAAK2oC,cAAV,EAA0B;AACxB;AAFqB;;AAIvB,kBAAMxK,UAAUvU,MAAM9lB,UAAN8lB,CAAiB,IAAjBA,IACZ,KAAKlP,UAAL,CAAgBpL,GAAhB,CAAoBsa,KAApB,CADYA,GAEZ,KAAKjP,IAAL,CAAUrL,GAAV,CAAcsa,KAAd,CAFJ;;AAGA,gBAAI,CAACuU,OAAL,EAAc;AACZx7B,8BAAK,iCAALA;AACA;AATqB;;AAYvB,iBAAK1C,uBAAL,CAA6Bk+B,OAA7B;AArzDiB;;AAwzDnBh+B,kCAAwBypB,KAAxBzpB,EAA+BwyC,MAA/BxyC,EAAuCyyC,MAAvCzyC,EAA+CqzC,SAA/CrzC,EAA0D;AACxD,gBAAI,CAAC,KAAKwoC,cAAV,EAA0B;AACxB;AAFsD;;AAIxD,kBAAMxK,UAAUvU,MAAM9lB,UAAN8lB,CAAiB,IAAjBA,IACZ,KAAKlP,UAAL,CAAgBpL,GAAhB,CAAoBsa,KAApB,CADYA,GAEZ,KAAKjP,IAAL,CAAUrL,GAAV,CAAcsa,KAAd,CAFJ;;AAGA,gBAAI,CAACuU,OAAL,EAAc;AACZx7B,8BAAK,iCAALA;AACA;AATsD;;AAYxD,kBAAM6pB,QAAQ2R,QAAQ3R,KAAtB;AACA,kBAAMC,SAAS0R,QAAQ1R,MAAvB;AACA,kBAAMxkB,MAAM,EAAZ;;AACA,iBAAK,IAAI1B,IAAI,CAAR,EAAWiH,KAAKgmC,UAAUvvC,MAA/B,EAAuCsC,IAAIiH,EAA3C,EAA+CjH,KAAK,CAApD,EAAuD;AACrD0B,kBAAIpB,IAAJoB,CAAS;AACP1M,2BAAW,CAACo3C,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAeC,MAAf,EAAuBY,UAAUjtC,CAAVitC,CAAvB,EAAqCA,UAAUjtC,IAAI,CAAditC,CAArC,CADJ;AAEPzkB,mBAAG,CAFI;AAGPC,mBAAG,CAHI;AAIP4kB,mBAAGpnB,KAJI;AAKPqnB,mBAAGpnB;AALI,eAATxkB;AAhBsD;;AAwBxD,iBAAK/H,4BAAL,CAAkCi+B,OAAlC,EAA2Cl2B,GAA3C;AAh1DiB;;AAm1DnBhI,kCAAwBk+B,OAAxBl+B,EAAiC;AAC/B,gBAAI,CAAC,KAAK0oC,cAAV,EAA0B;AACxB;AAF6B;;AAI/B,kBAAMnc,QAAQ2R,QAAQ3R,KAAtB;AACA,kBAAMC,SAAS0R,QAAQ1R,MAAvB;AACA,kBAAMkJ,MAAM,KAAKA,GAAjB;AAEA,iBAAKt6B,IAAL;AAEAs6B,gBAAIra,KAAJqa,CAAU,IAAInJ,KAAdmJ,EAAqB,CAAC,CAAD,GAAKlJ,MAA1BkJ;AAEA,gBAAIme,UAAJ;;AAEA,gBACG,OAAOC,WAAP,KAAuB,UAAvB,IAAqC5V,mBAAmB4V,WAAxD,IACD,CAAC5V,QAAQ12B,IAFX,EAGE;AACAqsC,2BAAa3V,OAAb2V;AAJF,mBAKO;AACL,oBAAMnJ,YAAY,KAAK9B,cAAL,CAAoB9K,SAApB,CAChB,aADgB,EAEhBvR,KAFgB,EAGhBC,MAHgB,CAAlB;AAKA,oBAAMme,SAASD,UAAUlY,OAAzB;AACA4P,iCAAmBuI,MAAnBvI,EAA2BlE,OAA3BkE,EAAoC,KAAKzK,OAAL,CAAasJ,YAAjDmB;AACAyR,2BAAanJ,UAAU1f,MAAvB6oB;AA3B6B;;AA8B/B,kBAAMnI,SAAS,KAAKvB,WAAL,CAAiB0J,UAAjB,EAA6Bne,IAAIiW,0BAAjC,CAAf;;AACAjW,gBAAIkW,qBAAJlW,GAA4BwR,yBAC1BxR,IAAIsG,mBADsBkL,EAE1BhJ,QAAQiJ,WAFkBD,CAA5BxR;AAIAA,gBAAIuR,SAAJvR,CACEgW,OAAOtB,GADT1U,EAEE,CAFFA,EAGE,CAHFA,EAIEgW,OAAOnB,UAJT7U,EAKEgW,OAAOlB,WALT9U,EAME,CANFA,EAOE,CAAClJ,MAPHkJ,EAQEnJ,KARFmJ,EASElJ,MATFkJ;;AAYA,gBAAI,KAAK5Y,UAAT,EAAqB;AACnB,oBAAM0Z,WAAW,KAAKud,iBAAL,CAAuB,CAAvB,EAA0B,CAACvnB,MAA3B,CAAjB;AACA,mBAAK1P,UAAL,CAAgBk3B,WAAhB,CAA4B;AAC1B9V,uBAD0B;AAE1BxH,sBAAMF,SAAS,CAATA,CAFoB;AAG1BC,qBAAKD,SAAS,CAATA,CAHqB;AAI1BjK,uBAAOA,QAAQmJ,IAAIiW,0BAAJjW,CAA+B,CAA/BA,CAJW;AAK1BlJ,wBAAQA,SAASkJ,IAAIiW,0BAAJjW,CAA+B,CAA/BA;AALS,eAA5B;AAjD6B;;AAyD/B,iBAAKiX,OAAL;AACA,iBAAKtxC,OAAL;AA74DiB;;AAg5DnB4E,uCAA6Bi+B,OAA7Bj+B,EAAsC+H,GAAtC/H,EAA2C;AACzC,gBAAI,CAAC,KAAKyoC,cAAV,EAA0B;AACxB;AAFuC;;AAIzC,kBAAMhT,MAAM,KAAKA,GAAjB;AACA,kBAAMie,IAAIzV,QAAQ3R,KAAlB;AACA,kBAAMqnB,IAAI1V,QAAQ1R,MAAlB;AAEA,kBAAMke,YAAY,KAAK9B,cAAL,CAAoB9K,SAApB,CAA8B,aAA9B,EAA6C6V,CAA7C,EAAgDC,CAAhD,CAAlB;AACA,kBAAMjJ,SAASD,UAAUlY,OAAzB;AACA4P,+BAAmBuI,MAAnBvI,EAA2BlE,OAA3BkE,EAAoC,KAAKzK,OAAL,CAAasJ,YAAjDmB;;AAEA,iBAAK,IAAI97B,IAAI,CAAR,EAAWiH,KAAKvF,IAAIhE,MAAzB,EAAiCsC,IAAIiH,EAArC,EAAyCjH,GAAzC,EAA8C;AAC5C,oBAAMqyB,QAAQ3wB,IAAI1B,CAAJ0B,CAAd;AACA0tB,kBAAIt6B,IAAJs6B;AACAA,kBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyBiD,MAAMr9B,SAA/Bo6B;AACAA,kBAAIra,KAAJqa,CAAU,CAAVA,EAAa,CAAC,CAAdA;AACAA,kBAAIuR,SAAJvR,CACEgV,UAAU1f,MADZ0K,EAEEiD,MAAM7J,CAFR4G,EAGEiD,MAAM5J,CAHR2G,EAIEiD,MAAMgb,CAJRje,EAKEiD,MAAMib,CALRle,EAME,CANFA,EAOE,CAAC,CAPHA,EAQE,CARFA,EASE,CATFA;;AAWA,kBAAI,KAAK5Y,UAAT,EAAqB;AACnB,sBAAM0Z,WAAW,KAAKud,iBAAL,CAAuBpb,MAAM7J,CAA7B,EAAgC6J,MAAM5J,CAAtC,CAAjB;AACA,qBAAKjS,UAAL,CAAgBk3B,WAAhB,CAA4B;AAC1B9V,yBAD0B;AAE1BxH,wBAAMF,SAAS,CAATA,CAFoB;AAG1BC,uBAAKD,SAAS,CAATA,CAHqB;AAI1BjK,yBAAOonB,CAJmB;AAK1BnnB,0BAAQonB;AALkB,iBAA5B;AAlB0C;;AA0B5Cle,kBAAIr6B,OAAJq6B;AAtCuC;;AAwCzC,iBAAKiX,OAAL;AAx7DiB;;AA27DnBvsC,qCAA2B;AACzB,gBAAI,CAAC,KAAKsoC,cAAV,EAA0B;AACxB;AAFuB;;AAIzB,iBAAKhT,GAAL,CAASwT,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACA,iBAAKyD,OAAL;AAh8DiB;;AAq8DnB9tC,oBAAUo1C,GAAVp1C,EAAe,CAr8DI;;AAy8DnBC,yBAAem1C,GAAfn1C,EAAoBslC,UAApBtlC,EAAgC,CAz8Db;;AA68DnBC,6BAAmBk1C,GAAnBl1C,EAAwB;AACtB,iBAAK4pC,kBAAL,CAAwB/hC,IAAxB,CAA6B;AAC3BstC,uBAAS;AADkB,aAA7B;AA98DiB;;AAm9DnBl1C,kCAAwBi1C,GAAxBj1C,EAA6BolC,UAA7BplC,EAAyC;AACvC,gBAAIi1C,QAAQ,IAAZ,EAAkB;AAChB,mBAAKtL,kBAAL,CAAwB/hC,IAAxB,CAA6B;AAC3BstC,yBAAS,KAAKj1B,qBAAL,CAA2Bk1B,SAA3B,CAAqC/P,UAArC;AADkB,eAA7B;AADF,mBAIO;AACL,mBAAKuE,kBAAL,CAAwB/hC,IAAxB,CAA6B;AAC3BstC,yBAAS;AADkB,eAA7B;AANqC;;AAUvC,iBAAKxL,cAAL,GAAsB,KAAK0L,gBAAL,EAAtB;AA79DiB;;AAg+DnBn1C,6BAAmB;AACjB,iBAAK0pC,kBAAL,CAAwBpL,GAAxB;AACA,iBAAKmL,cAAL,GAAsB,KAAK0L,gBAAL,EAAtB;AAl+DiB;;AAu+DnBl1C,wBAAc,CAv+DK;;AA2+DnBC,sBAAY,CA3+DO;;AAi/DnBguC,sBAAYhM,OAAZgM,EAAqB;AACnB,gBAAI,KAAKtF,WAAT,EAAsB;AACpB,mBAAKlQ,OAAL,CAAasK,kBAAb;AAFiB;;AAInB,gBAAI,CAAC,KAAK4F,WAAV,EAAuB;AACrB,mBAAK8E,OAAL,CAAaxL,OAAb;AALiB;;AAOnB,kBAAMzL,MAAM,KAAKA,GAAjB;;AACA,gBAAI,KAAKmS,WAAT,EAAsB;AACpB,kBAAI,KAAKA,WAAL,KAAqBH,OAAzB,EAAkC;AAChChS,oBAAIn5B,IAAJm5B,CAAS,SAATA;AADF,qBAEO;AACLA,oBAAIn5B,IAAJm5B;AAJkB;;AAMpB,mBAAKmS,WAAL,GAAmB,IAAnB;AAdiB;;AAgBnB,iBAAKlQ,OAAL,CAAauJ,sBAAb,CAAoC,KAAKvJ,OAAL,CAAawJ,OAAjD;AACAzL,gBAAIqF,SAAJrF;AAlgEiB;;AAqgEnB0X,gCAAsB;AACpB,gBAAI,KAAKnE,0BAAL,KAAoC,IAAxC,EAA8C;AAY5C,oBAAMv/B,IAAI,KAAKgsB,GAAL,CAASsG,mBAAnB;AAEA,oBAAMqY,SAAS7tC,KAAKoG,GAALpG,CAASkD,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAAPA,GAAcA,EAAE,CAAFA,IAAOA,EAAE,CAAFA,CAA9BlD,CAAf;AACA,oBAAM8tC,UAAU5qC,EAAE,CAAFA,KAAQ,CAARA,GAAYA,EAAE,CAAFA,KAAQ,CAApC;AACA,oBAAM6qC,UAAU7qC,EAAE,CAAFA,KAAQ,CAARA,GAAYA,EAAE,CAAFA,KAAQ,CAApC;AACA,oBAAM8qC,cAAchuC,KAAKuE,IAALvE,CAAUA,KAAK6D,GAAL7D,CAAS8tC,OAAT9tC,EAAkB+tC,OAAlB/tC,CAAVA,IAAwC6tC,MAA5D;;AACA,kBAAIC,YAAYC,OAAZD,IAAuB,KAAKjL,oBAAL,GAA4BmL,WAA5B,GAA0C,CAArE,EAAwE;AAUtE,qBAAKvL,0BAAL,GAAkC,EAChC,KAAKI,oBAAL,GAA4BmL,WADI,CAAlC;AAVF,qBAaO,IAAIH,SAASlyC,OAAOsyC,OAApB,EAA6B;AAClC,qBAAKxL,0BAAL,GAAkCuL,WAAlC;AADK,qBAEA;AAEL,qBAAKvL,0BAAL,GAAkC,CAAlC;AAnC0C;AAD1B;;AAwCpB,mBAAO,KAAKA,0BAAZ;AA7iEiB;;AAgjEnB8K,4BAAkBjlB,CAAlBilB,EAAqBhlB,CAArBglB,EAAwB;AACtB,kBAAMz4C,YAAY,KAAKo6B,GAAL,CAASsG,mBAA3B;AACA,mBAAO,CACL1gC,UAAU,CAAVA,IAAewzB,CAAfxzB,GAAmBA,UAAU,CAAVA,IAAeyzB,CAAlCzzB,GAAsCA,UAAU,CAAVA,CADjC,EAELA,UAAU,CAAVA,IAAewzB,CAAfxzB,GAAmBA,UAAU,CAAVA,IAAeyzB,CAAlCzzB,GAAsCA,UAAU,CAAVA,CAFjC,CAAP;AAljEiB;;AAwjEnB84C,6BAAmB;AACjB,iBAAK,IAAI9tC,IAAI,KAAKqiC,kBAAL,CAAwB3kC,MAAxB,GAAiC,CAA9C,EAAiDsC,KAAK,CAAtD,EAAyDA,GAAzD,EAA8D;AAC5D,kBAAI,CAAC,KAAKqiC,kBAAL,CAAwBriC,CAAxB,EAA2B4tC,OAAhC,EAAyC;AACvC,uBAAO,KAAP;AAF0D;AAD7C;;AAMjB,mBAAO,IAAP;AA9jEiB;;AAAA;;;;AAkkErB,mBAAWQ,EAAX,IAAiBh6C,SAAjB,EAAsB;AACpB,cAAI6wB,eAAepmB,SAAfomB,CAAyBmpB,EAAzBnpB,MAAiCvlB,SAArC,EAAgD;AAC9CulB,2BAAepmB,SAAfomB,CAAyB7wB,UAAIg6C,EAAJh6C,CAAzB6wB,IAAoCA,eAAepmB,SAAfomB,CAAyBmpB,EAAzBnpB,CAApCA;AAFkB;AA/mGtB;;;;;;;;;;;;;;ACeA;;AASA,cAAMuW,WAAW;AACfjwC,gBAAM,MADS;AAEfC,kBAAQ,QAFO;AAGf8/C,mBAAS;AAHM,SAAjB;;;AAMA,iBAAS+C,gBAAT,CAA0Bjf,GAA1B,EAA+Bwc,IAA/B,EAAqC;AACnC,cAAI,CAACA,IAAD,IAAS,OAAO0C,MAAP,KAAkB,WAA/B,EAA4C;AAC1C;AAFiC;;AAInC,gBAAMroB,QAAQ2lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAxB;AACA,gBAAM1lB,SAAS0lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAzB;AACA,gBAAM2C,SAAS,IAAID,MAAJ,EAAf;AACAC,iBAAO1pC,IAAP0pC,CAAY3C,KAAK,CAALA,CAAZ2C,EAAqB3C,KAAK,CAALA,CAArB2C,EAA8BtoB,KAA9BsoB,EAAqCroB,MAArCqoB;AACAnf,cAAIn5B,IAAJm5B,CAASmf,MAATnf;AAtCF;;AAyCA,cAAMof,kBAAN,CAAyB;AACvB5vC,wBAAc;AACZ,gBAAI,KAAKA,WAAL,KAAqB4vC,kBAAzB,EAA6C;AAC3CnyC,qCAAY,uCAAZA;AAFU;AADS;;AAOvBmpC,uBAAa;AACXnpC,mCAAY,sCAAZA;AARqB;;AAAA;;AAYzB,cAAMoyC,yBAAN,SAAwCD,kBAAxC,CAA2D;AACzD5vC,sBAAYksC,EAAZlsC,EAAgB;AACd;AACA,iBAAK8vC,KAAL,GAAa5D,GAAG,CAAHA,CAAb;AACA,iBAAK6D,KAAL,GAAa7D,GAAG,CAAHA,CAAb;AACA,iBAAK8D,WAAL,GAAmB9D,GAAG,CAAHA,CAAnB;AACA,iBAAK+D,GAAL,GAAW/D,GAAG,CAAHA,CAAX;AACA,iBAAKgE,GAAL,GAAWhE,GAAG,CAAHA,CAAX;AACA,iBAAKiE,GAAL,GAAWjE,GAAG,CAAHA,CAAX;AACA,iBAAKkE,GAAL,GAAWlE,GAAG,CAAHA,CAAX;AACA,iBAAKM,MAAL,GAAc,IAAd;AAVuD;;AAazD6D,0BAAgB7f,GAAhB6f,EAAqB;AACnB,gBAAIC,IAAJ;;AACA,gBAAI,KAAKR,KAAL,KAAe,OAAnB,EAA4B;AAC1BQ,qBAAO9f,IAAI+f,oBAAJ/f,CACL,KAAKyf,GAAL,CAAS,CAAT,CADKzf,EAEL,KAAKyf,GAAL,CAAS,CAAT,CAFKzf,EAGL,KAAK0f,GAAL,CAAS,CAAT,CAHK1f,EAIL,KAAK0f,GAAL,CAAS,CAAT,CAJK1f,CAAP8f;AADF,mBAOO,IAAI,KAAKR,KAAL,KAAe,QAAnB,EAA6B;AAClCQ,qBAAO9f,IAAIggB,oBAAJhgB,CACL,KAAKyf,GAAL,CAAS,CAAT,CADKzf,EAEL,KAAKyf,GAAL,CAAS,CAAT,CAFKzf,EAGL,KAAK2f,GAHA3f,EAIL,KAAK0f,GAAL,CAAS,CAAT,CAJK1f,EAKL,KAAK0f,GAAL,CAAS,CAAT,CALK1f,EAML,KAAK4f,GANA5f,CAAP8f;AAViB;;AAoBnB,uBAAWG,SAAX,IAAwB,KAAKT,WAA7B,EAA0C;AACxCM,mBAAKI,YAALJ,CAAkBG,UAAU,CAAVA,CAAlBH,EAAgCG,UAAU,CAAVA,CAAhCH;AArBiB;;AAuBnB,mBAAOA,IAAP;AApCuD;;AAuCzD1J,qBAAWpW,GAAXoW,EAAgB+J,KAAhB/J,EAAuBD,OAAvBC,EAAgCjK,QAAhCiK,EAA0C;AACxC,gBAAIuD,OAAJ;;AACA,gBAAIxN,aAAaC,SAAShwC,MAAtB+vC,IAAgCA,aAAaC,SAASjwC,IAA1D,EAAgE;AAC9D,oBAAMikD,YAAYD,MAAMle,OAANke,CAAc1T,yBAAd0T,CAChBhU,QADgBgU,EAEhBngB,IAAIsG,mBAFY6Z,KAGb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHL;AAOA,oBAAMtpB,QAAQ/lB,KAAKkgC,IAALlgC,CAAUsvC,UAAU,CAAVA,IAAeA,UAAU,CAAVA,CAAzBtvC,KAA0C,CAAxD;AACA,oBAAMgmB,SAAShmB,KAAKkgC,IAALlgC,CAAUsvC,UAAU,CAAVA,IAAeA,UAAU,CAAVA,CAAzBtvC,KAA0C,CAAzD;AAEA,oBAAMkkC,YAAYmL,MAAMjN,cAANiN,CAAqB/X,SAArB+X,CAChB,SADgBA,EAEhBtpB,KAFgBspB,EAGhBrpB,MAHgBqpB,EAIhB,IAJgBA,CAAlB;AAOA,oBAAMlL,SAASD,UAAUlY,OAAzB;AACAmY,qBAAOG,SAAPH,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuBA,OAAO3f,MAAP2f,CAAcpe,KAArCoe,EAA4CA,OAAO3f,MAAP2f,CAAcne,MAA1Dme;AACAA,qBAAO5P,SAAP4P;AACAA,qBAAOx/B,IAAPw/B,CAAY,CAAZA,EAAe,CAAfA,EAAkBA,OAAO3f,MAAP2f,CAAcpe,KAAhCoe,EAAuCA,OAAO3f,MAAP2f,CAAcne,MAArDme;AAIAA,qBAAO1Q,SAAP0Q,CAAiB,CAACmL,UAAU,CAAVA,CAAlBnL,EAAgC,CAACmL,UAAU,CAAVA,CAAjCnL;AACAkB,wBAAU5iC,WAAK3N,SAAL2N,CAAe4iC,OAAf5iC,EAAwB,CAChC,CADgC,EAEhC,CAFgC,EAGhC,CAHgC,EAIhC,CAJgC,EAKhC6sC,UAAU,CAAVA,CALgC,EAMhCA,UAAU,CAAVA,CANgC,CAAxB7sC,CAAV4iC;AASAlB,qBAAOrvC,SAAPqvC,CAAiBvkC,KAAjBukC,CAAuBA,MAAvBA,EAA+BkL,MAAM1N,aAArCwC;;AACA,kBAAI,KAAK+G,MAAT,EAAiB;AACf/G,uBAAOrvC,SAAPqvC,CAAiBvkC,KAAjBukC,CAAuBA,MAAvBA,EAA+B,KAAK+G,MAApC/G;AArC4D;;AAuC9DgK,+BAAiBhK,MAAjBgK,EAAyB,KAAKM,KAA9BN;AAEAhK,qBAAOhG,SAAPgG,GAAmB,KAAK4K,eAAL,CAAqB5K,MAArB,CAAnBA;AACAA,qBAAO3uC,IAAP2uC;AAEA0E,wBAAU3Z,IAAIqgB,aAAJrgB,CAAkBgV,UAAU1f,MAA5B0K,EAAoC,WAApCA,CAAV2Z;AACA,oBAAM2G,YAAY,IAAIC,SAAJ,CAAcpK,OAAd,CAAlB;;AACA,kBAAI;AACFwD,wBAAQjV,YAARiV,CAAqB2G,SAArB3G;AADF,gBAEE,OAAOlrC,EAAP,EAAW;AAGXzB,gCAAM,0CAAyCyB,IAAIa,OAAQ,IAA3DtC;AAnD4D;AAAhE,mBAqDO;AAILiyC,+BAAiBjf,GAAjBif,EAAsB,KAAKM,KAA3BN;AACAtF,wBAAU,KAAKkG,eAAL,CAAqB7f,GAArB,CAAV2Z;AA5DsC;;AA8DxC,mBAAOA,OAAP;AArGuD;;AAAA;;AAyG3D,iBAAS6G,YAAT,CAAsB1uC,IAAtB,EAA4BgrB,OAA5B,EAAqCxoB,EAArC,EAAyCC,EAAzC,EAA6CE,EAA7C,EAAiDgsC,EAAjD,EAAqDC,EAArD,EAAyDC,EAAzD,EAA6D;AAE3D,gBAAMpX,SAASzM,QAAQyM,MAAvB;AAAA,gBACEqX,SAAS9jB,QAAQ8jB,MADnB;AAEA,gBAAMvwC,QAAQyB,KAAKA,IAAnB;AAAA,gBACE+uC,UAAU/uC,KAAK+kB,KAAL/kB,GAAa,CADzB;AAEA,cAAIgvC,GAAJ;;AACA,cAAIvX,OAAOj1B,KAAK,CAAZi1B,IAAiBA,OAAOh1B,KAAK,CAAZg1B,CAArB,EAAqC;AACnCuX,kBAAMxsC,EAANwsC;AACAxsC,iBAAKC,EAALD;AACAC,iBAAKusC,GAALvsC;AACAusC,kBAAML,EAANK;AACAL,iBAAKC,EAALD;AACAC,iBAAKI,GAALJ;AAbyD;;AAe3D,cAAInX,OAAOh1B,KAAK,CAAZg1B,IAAiBA,OAAO90B,KAAK,CAAZ80B,CAArB,EAAqC;AACnCuX,kBAAMvsC,EAANusC;AACAvsC,iBAAKE,EAALF;AACAE,iBAAKqsC,GAALrsC;AACAqsC,kBAAMJ,EAANI;AACAJ,iBAAKC,EAALD;AACAC,iBAAKG,GAALH;AArByD;;AAuB3D,cAAIpX,OAAOj1B,KAAK,CAAZi1B,IAAiBA,OAAOh1B,KAAK,CAAZg1B,CAArB,EAAqC;AACnCuX,kBAAMxsC,EAANwsC;AACAxsC,iBAAKC,EAALD;AACAC,iBAAKusC,GAALvsC;AACAusC,kBAAML,EAANK;AACAL,iBAAKC,EAALD;AACAC,iBAAKI,GAALJ;AA7ByD;;AA+B3D,gBAAMrqC,KAAM,QAAO/B,EAAP,IAAawoB,QAAQjX,OAArB,IAAgCiX,QAAQkgB,MAApD;AACA,gBAAM1mC,KAAM,QAAOhC,KAAK,CAAZ,IAAiBwoB,QAAQhX,OAAzB,IAAoCgX,QAAQmgB,MAAxD;AACA,gBAAM1mC,KAAM,QAAOhC,EAAP,IAAauoB,QAAQjX,OAArB,IAAgCiX,QAAQkgB,MAApD;AACA,gBAAMxmC,KAAM,QAAOjC,KAAK,CAAZ,IAAiBuoB,QAAQhX,OAAzB,IAAoCgX,QAAQmgB,MAAxD;AACA,gBAAMxmC,KAAM,QAAOhC,EAAP,IAAaqoB,QAAQjX,OAArB,IAAgCiX,QAAQkgB,MAApD;AACA,gBAAMtmC,KAAM,QAAOjC,KAAK,CAAZ,IAAiBqoB,QAAQhX,OAAzB,IAAoCgX,QAAQmgB,MAAxD;;AACA,cAAI3mC,MAAMI,EAAV,EAAc;AACZ;AAtCyD;;AAwC3D,gBAAMqqC,MAAMH,OAAOH,EAAPG,CAAZ;AAAA,gBACEI,MAAMJ,OAAOH,KAAK,CAAZG,CADR;AAAA,gBAEEK,MAAML,OAAOH,KAAK,CAAZG,CAFR;AAGA,gBAAMM,MAAMN,OAAOF,EAAPE,CAAZ;AAAA,gBACEO,MAAMP,OAAOF,KAAK,CAAZE,CADR;AAAA,gBAEEQ,MAAMR,OAAOF,KAAK,CAAZE,CAFR;AAGA,gBAAMS,MAAMT,OAAOD,EAAPC,CAAZ;AAAA,gBACEU,MAAMV,OAAOD,KAAK,CAAZC,CADR;AAAA,gBAEEW,MAAMX,OAAOD,KAAK,CAAZC,CAFR;AAIA,gBAAM/U,OAAO/6B,KAAKulC,KAALvlC,CAAWwF,EAAXxF,CAAb;AAAA,gBACEi7B,OAAOj7B,KAAKulC,KAALvlC,CAAW4F,EAAX5F,CADT;AAEA,cAAI0wC,EAAJ,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,GAAlB;AACA,cAAIC,EAAJ,EAAQC,GAAR,EAAaC,GAAb,EAAkBC,GAAlB;;AACA,eAAK,IAAI1oB,IAAIwS,IAAb,EAAmBxS,KAAK0S,IAAxB,EAA8B1S,GAA9B,EAAmC;AACjC,gBAAIA,IAAI7iB,EAAR,EAAY;AACV,kBAAIozB,CAAJ;;AACA,kBAAIvQ,IAAI/iB,EAAR,EAAY;AACVszB,oBAAI,CAAJA;AADF,qBAEO;AACLA,oBAAK,MAAKvQ,CAAL,KAAW/iB,KAAKE,EAAhB,CAALozB;AALQ;;AAOV4X,mBAAKnrC,KAAM,MAAKE,EAAL,IAAWqzB,CAAtB4X;AACAC,oBAAMV,MAAO,OAAMG,GAAN,IAAatX,CAA1B6X;AACAC,oBAAMV,MAAO,OAAMG,GAAN,IAAavX,CAA1B8X;AACAC,oBAAMV,MAAO,OAAMG,GAAN,IAAaxX,CAA1B+X;AAVF,mBAWO;AACL,kBAAI/X,CAAJ;;AACA,kBAAIvQ,IAAI3iB,EAAR,EAAY;AACVkzB,oBAAI,CAAJA;AADF,qBAEO,IAAIpzB,OAAOE,EAAX,EAAe;AACpBkzB,oBAAI,CAAJA;AADK,qBAEA;AACLA,oBAAK,MAAKvQ,CAAL,KAAW7iB,KAAKE,EAAhB,CAALkzB;AAPG;;AASL4X,mBAAKjrC,KAAM,MAAKE,EAAL,IAAWmzB,CAAtB4X;AACAC,oBAAMP,MAAO,OAAMG,GAAN,IAAazX,CAA1B6X;AACAC,oBAAMP,MAAO,OAAMG,GAAN,IAAa1X,CAA1B8X;AACAC,oBAAMP,MAAO,OAAMG,GAAN,IAAa3X,CAA1B+X;AAxB+B;;AA2BjC,gBAAI/X,CAAJ;;AACA,gBAAIvQ,IAAI/iB,EAAR,EAAY;AACVszB,kBAAI,CAAJA;AADF,mBAEO,IAAIvQ,IAAI3iB,EAAR,EAAY;AACjBkzB,kBAAI,CAAJA;AADK,mBAEA;AACLA,kBAAK,MAAKvQ,CAAL,KAAW/iB,KAAKI,EAAhB,CAALkzB;AAjC+B;;AAmCjCgY,iBAAKvrC,KAAM,MAAKI,EAAL,IAAWmzB,CAAtBgY;AACAC,kBAAMd,MAAO,OAAMM,GAAN,IAAazX,CAA1BiY;AACAC,kBAAMd,MAAO,OAAMM,GAAN,IAAa1X,CAA1BkY;AACAC,kBAAMd,MAAO,OAAMM,GAAN,IAAa3X,CAA1BmY;AACA,kBAAMC,MAAMlxC,KAAKulC,KAALvlC,CAAWA,KAAKC,GAALD,CAAS0wC,EAAT1wC,EAAa8wC,EAAb9wC,CAAXA,CAAZ;AACA,kBAAMmxC,MAAMnxC,KAAKulC,KAALvlC,CAAWA,KAAK6D,GAAL7D,CAAS0wC,EAAT1wC,EAAa8wC,EAAb9wC,CAAXA,CAAZ;AACA,gBAAIqG,IAAI0pC,UAAUxnB,CAAVwnB,GAAcmB,MAAM,CAA5B;;AACA,iBAAK,IAAI5oB,IAAI4oB,GAAb,EAAkB5oB,KAAK6oB,GAAvB,EAA4B7oB,GAA5B,EAAiC;AAC/BwQ,kBAAK,MAAKxQ,CAAL,KAAWooB,KAAKI,EAAhB,CAALhY;;AACA,kBAAIA,IAAI,CAAR,EAAW;AACTA,oBAAI,CAAJA;AADF,qBAEO,IAAIA,IAAI,CAAR,EAAW;AAChBA,oBAAI,CAAJA;AAL6B;;AAO/Bv5B,oBAAM8G,GAAN9G,IAAcoxC,MAAO,OAAMI,GAAN,IAAajY,CAApB6X,GAAyB,CAAvCpxC;AACAA,oBAAM8G,GAAN9G,IAAcqxC,MAAO,OAAMI,GAAN,IAAalY,CAApB8X,GAAyB,CAAvCrxC;AACAA,oBAAM8G,GAAN9G,IAAcsxC,MAAO,OAAMI,GAAN,IAAanY,CAApB+X,GAAyB,CAAvCtxC;AACAA,oBAAM8G,GAAN9G,IAAa,GAAbA;AApD+B;AAtDwB;AA9J7D;;AA6QA,iBAAS6xC,UAAT,CAAoBpwC,IAApB,EAA0BqwC,MAA1B,EAAkCrlB,OAAlC,EAA2C;AACzC,gBAAMslB,KAAKD,OAAO5Y,MAAlB;AACA,gBAAM8Y,KAAKF,OAAOvB,MAAlB;AACA,cAAIhwC,CAAJ,EAAOiH,EAAP;;AACA,kBAAQsqC,OAAO7nC,IAAf;AACE,iBAAK,SAAL;AACE,oBAAMgoC,iBAAiBH,OAAOG,cAA9B;AACA,oBAAMC,OAAOzxC,KAAKqmC,KAALrmC,CAAWsxC,GAAG9zC,MAAH8zC,GAAYE,cAAvBxxC,IAAyC,CAAtD;AACA,oBAAM0xC,OAAOF,iBAAiB,CAA9B;;AACA,mBAAK1xC,IAAI,CAAT,EAAYA,IAAI2xC,IAAhB,EAAsB3xC,GAAtB,EAA2B;AACzB,oBAAI6xC,IAAI7xC,IAAI0xC,cAAZ;;AACA,qBAAK,IAAInrC,IAAI,CAAb,EAAgBA,IAAIqrC,IAApB,EAA0BrrC,KAAKsrC,GAA/B,EAAoC;AAClCjC,+BACE1uC,IADF0uC,EAEE1jB,OAFF0jB,EAGE4B,GAAGK,CAAHL,CAHF5B,EAIE4B,GAAGK,IAAI,CAAPL,CAJF5B,EAKE4B,GAAGK,IAAIH,cAAPF,CALF5B,EAME6B,GAAGI,CAAHJ,CANF7B,EAOE6B,GAAGI,IAAI,CAAPJ,CAPF7B,EAQE6B,GAAGI,IAAIH,cAAPD,CARF7B;AAUAA,+BACE1uC,IADF0uC,EAEE1jB,OAFF0jB,EAGE4B,GAAGK,IAAIH,cAAJG,GAAqB,CAAxBL,CAHF5B,EAIE4B,GAAGK,IAAI,CAAPL,CAJF5B,EAKE4B,GAAGK,IAAIH,cAAPF,CALF5B,EAME6B,GAAGI,IAAIH,cAAJG,GAAqB,CAAxBJ,CANF7B,EAOE6B,GAAGI,IAAI,CAAPJ,CAPF7B,EAQE6B,GAAGI,IAAIH,cAAPD,CARF7B;AAbuB;AAJ7B;;AA6BE;;AACF,iBAAK,WAAL;AACE,mBAAK5vC,IAAI,CAAJA,EAAOiH,KAAKuqC,GAAG9zC,MAApB,EAA4BsC,IAAIiH,EAAhC,EAAoCjH,KAAK,CAAzC,EAA4C;AAC1C4vC,6BACE1uC,IADF0uC,EAEE1jB,OAFF0jB,EAGE4B,GAAGxxC,CAAHwxC,CAHF5B,EAIE4B,GAAGxxC,IAAI,CAAPwxC,CAJF5B,EAKE4B,GAAGxxC,IAAI,CAAPwxC,CALF5B,EAME6B,GAAGzxC,CAAHyxC,CANF7B,EAOE6B,GAAGzxC,IAAI,CAAPyxC,CAPF7B,EAQE6B,GAAGzxC,IAAI,CAAPyxC,CARF7B;AAFJ;;AAaE;;AACF;AACE,oBAAM,IAAItzC,KAAJ,CAAU,gBAAV,CAAN;AA9CJ;AAjRF;;AAmUA,cAAMw1C,kBAAN,SAAiCtD,kBAAjC,CAAoD;AAClD5vC,sBAAYksC,EAAZlsC,EAAgB;AACd;AACA,iBAAKmzC,OAAL,GAAejH,GAAG,CAAHA,CAAf;AACA,iBAAKkH,OAAL,GAAelH,GAAG,CAAHA,CAAf;AACA,iBAAKmH,QAAL,GAAgBnH,GAAG,CAAHA,CAAhB;AACA,iBAAKoH,OAAL,GAAepH,GAAG,CAAHA,CAAf;AACA,iBAAK6D,KAAL,GAAa7D,GAAG,CAAHA,CAAb;AACA,iBAAKqH,WAAL,GAAmBrH,GAAG,CAAHA,CAAnB;AACA,iBAAKM,MAAL,GAAc,IAAd;AATgD;;AAYlDgH,4BAAkBC,aAAlBD,EAAiCE,eAAjCF,EAAkD9P,cAAlD8P,EAAkE;AAGhE,kBAAMG,iBAAiB,GAAvB;AAEA,kBAAMC,mBAAmB,IAAzB;AAGA,kBAAMC,cAAc,CAApB;AAEA,kBAAMx9B,UAAU/U,KAAKqmC,KAALrmC,CAAW,KAAKgyC,OAAL,CAAa,CAAb,CAAXhyC,CAAhB;AACA,kBAAMgV,UAAUhV,KAAKqmC,KAALrmC,CAAW,KAAKgyC,OAAL,CAAa,CAAb,CAAXhyC,CAAhB;AACA,kBAAMwyC,cAAcxyC,KAAKkgC,IAALlgC,CAAU,KAAKgyC,OAAL,CAAa,CAAb,CAAVhyC,IAA6B+U,OAAjD;AACA,kBAAM09B,eAAezyC,KAAKkgC,IAALlgC,CAAU,KAAKgyC,OAAL,CAAa,CAAb,CAAVhyC,IAA6BgV,OAAlD;AAEA,kBAAM+Q,QAAQ/lB,KAAKC,GAALD,CACZA,KAAKkgC,IAALlgC,CAAUA,KAAKoG,GAALpG,CAASwyC,cAAcL,cAAc,CAAdA,CAAdK,GAAiCH,cAA1CryC,CAAVA,CADYA,EAEZsyC,gBAFYtyC,CAAd;AAIA,kBAAMgmB,SAAShmB,KAAKC,GAALD,CACbA,KAAKkgC,IAALlgC,CAAUA,KAAKoG,GAALpG,CAASyyC,eAAeN,cAAc,CAAdA,CAAfM,GAAkCJ,cAA3CryC,CAAVA,CADaA,EAEbsyC,gBAFatyC,CAAf;AAIA,kBAAMksC,SAASsG,cAAczsB,KAA7B;AACA,kBAAMomB,SAASsG,eAAezsB,MAA9B;AAEA,kBAAMgG,UAAU;AACdyM,sBAAQ,KAAKoZ,OADC;AAEd/B,sBAAQ,KAAKgC,OAFC;AAGd/8B,uBAAS,CAACA,OAHI;AAIdC,uBAAS,CAACA,OAJI;AAKdk3B,sBAAQ,IAAIA,MALE;AAMdC,sBAAQ,IAAIA;AANE,aAAhB;AASA,kBAAMuG,cAAc3sB,QAAQwsB,cAAc,CAA1C;AACA,kBAAMI,eAAe3sB,SAASusB,cAAc,CAA5C;AAEA,kBAAMrO,YAAY9B,eAAe9K,SAAf8K,CAChB,MADgBA,EAEhBsQ,WAFgBtQ,EAGhBuQ,YAHgBvQ,EAIhB,KAJgBA,CAAlB;AAMA,kBAAM+B,SAASD,UAAUlY,OAAzB;AAEA,kBAAMhrB,OAAOmjC,OAAOhI,eAAPgI,CAAuBpe,KAAvBoe,EAA8Bne,MAA9Bme,CAAb;;AACA,gBAAIiO,eAAJ,EAAqB;AACnB,oBAAM7yC,QAAQyB,KAAKA,IAAnB;;AACA,mBAAK,IAAIlB,IAAI,CAAR,EAAWiH,KAAKxH,MAAM/B,MAA3B,EAAmCsC,IAAIiH,EAAvC,EAA2CjH,KAAK,CAAhD,EAAmD;AACjDP,sBAAMO,CAANP,IAAW6yC,gBAAgB,CAAhBA,CAAX7yC;AACAA,sBAAMO,IAAI,CAAVP,IAAe6yC,gBAAgB,CAAhBA,CAAf7yC;AACAA,sBAAMO,IAAI,CAAVP,IAAe6yC,gBAAgB,CAAhBA,CAAf7yC;AACAA,sBAAMO,IAAI,CAAVP,IAAe,GAAfA;AANiB;AA/C2C;;AAwDhE,uBAAW8xC,MAAX,IAAqB,KAAKU,QAA1B,EAAoC;AAClCX,yBAAWpwC,IAAXowC,EAAiBC,MAAjBD,EAAyBplB,OAAzBolB;AAzD8D;;AA2DhEjN,mBAAOrI,YAAPqI,CAAoBnjC,IAApBmjC,EAA0BoO,WAA1BpO,EAAuCoO,WAAvCpO;AACA,kBAAM3f,SAAS0f,UAAU1f,MAAzB;AAEA,mBAAO;AACLA,oBADK;AAELzP,uBAASA,UAAUw9B,cAAcrG,MAF5B;AAGLl3B,uBAASA,UAAUu9B,cAAcpG,MAH5B;AAILD,oBAJK;AAKLC;AALK,aAAP;AA1EgD;;AAmFlD7G,qBAAWpW,GAAXoW,EAAgB+J,KAAhB/J,EAAuBD,OAAvBC,EAAgCjK,QAAhCiK,EAA0C;AACxC6I,6BAAiBjf,GAAjBif,EAAsB,KAAKM,KAA3BN;AACA,gBAAIt5B,KAAJ;;AACA,gBAAIwmB,aAAaC,SAAS8P,OAA1B,EAAmC;AACjCv2B,sBAAQpS,WAAKwB,6BAALxB,CAAmCysB,IAAIsG,mBAAvC/yB,CAARoS;AADF,mBAEO;AAELA,sBAAQpS,WAAKwB,6BAALxB,CAAmC4sC,MAAM1N,aAAzCl/B,CAARoS;;AACA,kBAAI,KAAKq2B,MAAT,EAAiB;AACf,sBAAM0H,cAAcnwC,WAAKwB,6BAALxB,CAAmC,KAAKyoC,MAAxCzoC,CAApB;;AACAoS,wBAAQ,CAACA,MAAM,CAANA,IAAW+9B,YAAY,CAAZA,CAAZ,EAA4B/9B,MAAM,CAANA,IAAW+9B,YAAY,CAAZA,CAAvC,CAAR/9B;AALG;AALiC;;AAgBxC,kBAAMg+B,yBAAyB,KAAKX,iBAAL,CAC7Br9B,KAD6B,EAE7BwmB,aAAaC,SAAS8P,OAAtB/P,GAAgC,IAAhCA,GAAuC,KAAK4W,WAFf,EAG7B5C,MAAMjN,cAHuB,CAA/B;;AAMA,gBAAI/G,aAAaC,SAAS8P,OAA1B,EAAmC;AACjClc,kBAAI0E,YAAJ1E,CAAiBtvB,KAAjBsvB,CAAuBA,GAAvBA,EAA4BmgB,MAAM1N,aAAlCzS;;AACA,kBAAI,KAAKgc,MAAT,EAAiB;AACfhc,oBAAIp6B,SAAJo6B,CAActvB,KAAdsvB,CAAoBA,GAApBA,EAAyB,KAAKgc,MAA9Bhc;AAH+B;AAtBK;;AA6BxCA,gBAAIuE,SAAJvE,CACE2jB,uBAAuB99B,OADzBma,EAEE2jB,uBAAuB79B,OAFzBka;AAIAA,gBAAIra,KAAJqa,CAAU2jB,uBAAuB3G,MAAjChd,EAAyC2jB,uBAAuB1G,MAAhEjd;AAEA,mBAAOA,IAAIqgB,aAAJrgB,CAAkB2jB,uBAAuBruB,MAAzC0K,EAAiD,WAAjDA,CAAP;AAtHgD;;AAAA;;AA0HpD,cAAM4jB,mBAAN,SAAkCxE,kBAAlC,CAAqD;AACnDhJ,uBAAa;AACX,mBAAO,SAAP;AAFiD;;AAAA;;AAMrD,iBAAS6F,iBAAT,CAA2BP,EAA3B,EAA+B;AAC7B,kBAAQA,GAAG,CAAHA,CAAR;AACE,iBAAK,aAAL;AACE,qBAAO,IAAI2D,yBAAJ,CAA8B3D,EAA9B,CAAP;;AACF,iBAAK,MAAL;AACE,qBAAO,IAAIgH,kBAAJ,CAAuBhH,EAAvB,CAAP;;AACF,iBAAK,OAAL;AACE,qBAAO,IAAIkI,mBAAJ,EAAP;AANJ;;AAQA,gBAAM,IAAI12C,KAAJ,CAAW,oBAAmBwuC,GAAG,CAAHA,CAApB,EAAV,CAAN;AA5cF;;AA+cA,cAAMmI,YAAY;AAChBC,mBAAS,CADO;AAEhBC,qBAAW;AAFK,SAAlB;;AAKA,cAAMjI,aAAN,CAAoB;AAElB,qBAAWsH,gBAAX,GAA8B;AAC5B,mBAAOz0C,kBAAO,IAAPA,EAAa,kBAAbA,EAAiC,IAAjCA,CAAP;AAHgB;;AAMlBa,sBAAYksC,EAAZlsC,EAAgBmsC,KAAhBnsC,EAAuBwwB,GAAvBxwB,EAA4BosC,qBAA5BpsC,EAAmDijC,aAAnDjjC,EAAkE;AAChE,iBAAK2Y,YAAL,GAAoBuzB,GAAG,CAAHA,CAApB;AACA,iBAAKM,MAAL,GAAcN,GAAG,CAAHA,KAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAvB;AACA,iBAAKc,IAAL,GAAYd,GAAG,CAAHA,CAAZ;AACA,iBAAKsI,KAAL,GAAatI,GAAG,CAAHA,CAAb;AACA,iBAAKuI,KAAL,GAAavI,GAAG,CAAHA,CAAb;AACA,iBAAKwI,SAAL,GAAiBxI,GAAG,CAAHA,CAAjB;AACA,iBAAKyI,UAAL,GAAkBzI,GAAG,CAAHA,CAAlB;AACA,iBAAKC,KAAL,GAAaA,KAAb;AACA,iBAAK3b,GAAL,GAAWA,GAAX;AACA,iBAAK4b,qBAAL,GAA6BA,qBAA7B;AACA,iBAAKnJ,aAAL,GAAqBA,aAArB;AAjBgB;;AAoBlB2R,8BAAoBjE,KAApBiE,EAA2B;AACzB,kBAAMj8B,eAAe,KAAKA,YAA1B;AACA,kBAAMq0B,OAAO,KAAKA,IAAlB;AACA,kBAAMwH,QAAQ,KAAKA,KAAnB;AACA,kBAAMC,QAAQ,KAAKA,KAAnB;AACA,kBAAMC,YAAY,KAAKA,SAAvB;AACA,kBAAMC,aAAa,KAAKA,UAAxB;AACA,kBAAMxI,QAAQ,KAAKA,KAAnB;AACA,kBAAMC,wBAAwB,KAAKA,qBAAnC;AAEAhvC,4BAAK,iBAAiBu3C,UAAtBv3C;AAsBA,kBAAMuJ,KAAKqmC,KAAK,CAALA,CAAX;AAAA,kBACEpmC,KAAKomC,KAAK,CAALA,CADP;AAAA,kBAEEnmC,KAAKmmC,KAAK,CAALA,CAFP;AAAA,kBAGElmC,KAAKkmC,KAAK,CAALA,CAHP;;AAMA,kBAAMkH,cAAcnwC,WAAKwB,6BAALxB,CAAmC,KAAKyoC,MAAxCzoC,CAApB;;AACA,kBAAM8wC,iBAAiB9wC,WAAKwB,6BAALxB,CACrB,KAAKk/B,aADgBl/B,CAAvB;;AAGA,kBAAM0vC,gBAAgB,CACpBS,YAAY,CAAZA,IAAiBW,eAAe,CAAfA,CADG,EAEpBX,YAAY,CAAZA,IAAiBW,eAAe,CAAfA,CAFG,CAAtB;AAQA,kBAAMC,OAAO,KAAKC,eAAL,CACXP,KADW,EAEX,KAAKhkB,GAAL,CAAS1K,MAAT,CAAgBuB,KAFL,EAGXosB,cAAc,CAAdA,CAHW,CAAb;AAKA,kBAAMuB,OAAO,KAAKD,eAAL,CACXN,KADW,EAEX,KAAKjkB,GAAL,CAAS1K,MAAT,CAAgBwB,MAFL,EAGXmsB,cAAc,CAAdA,CAHW,CAAb;AAMA,kBAAMjO,YAAYmL,MAAMjN,cAANiN,CAAqB/X,SAArB+X,CAChB,SADgBA,EAEhBmE,KAAKpgC,IAFWi8B,EAGhBqE,KAAKtgC,IAHWi8B,EAIhB,IAJgBA,CAAlB;AAMA,kBAAMlL,SAASD,UAAUlY,OAAzB;AACA,kBAAM2nB,WAAW7I,sBAAsBC,oBAAtBD,CAA2C3G,MAA3C2G,CAAjB;AACA6I,qBAAS9R,UAAT8R,GAAsBtE,MAAMxN,UAA5B8R;AAEA,iBAAKC,8BAAL,CAAoCD,QAApC,EAA8CP,SAA9C,EAAyDvI,KAAzD;AAEA,gBAAIgJ,aAAaxuC,EAAjB;AACA,gBAAIyuC,aAAaxuC,EAAjB;AACA,gBAAIyuC,aAAaxuC,EAAjB;AACA,gBAAIyuC,aAAaxuC,EAAjB;;AAIA,gBAAIH,KAAK,CAAT,EAAY;AACVwuC,2BAAa,CAAbA;AACAE,4BAAc/zC,KAAKoG,GAALpG,CAASqF,EAATrF,CAAd+zC;AAlFuB;;AAoFzB,gBAAIzuC,KAAK,CAAT,EAAY;AACVwuC,2BAAa,CAAbA;AACAE,4BAAch0C,KAAKoG,GAALpG,CAASsF,EAATtF,CAAdg0C;AAtFuB;;AAwFzB7P,mBAAO1Q,SAAP0Q,CAAiB,EAAEqP,KAAK3+B,KAAL2+B,GAAaK,UAAf,CAAjB1P,EAA6C,EAAEuP,KAAK7+B,KAAL6+B,GAAaI,UAAf,CAA7C3P;AACAwP,qBAAS7+C,SAAT6+C,CAAmBH,KAAK3+B,KAAxB8+B,EAA+B,CAA/BA,EAAkC,CAAlCA,EAAqCD,KAAK7+B,KAA1C8+B,EAAiD,CAAjDA,EAAoD,CAApDA;AAIAxP,mBAAOvvC,IAAPuvC;AAEA,iBAAK8P,QAAL,CAAcN,QAAd,EAAwBE,UAAxB,EAAoCC,UAApC,EAAgDC,UAAhD,EAA4DC,UAA5D;AAEAL,qBAAShS,aAATgS,GAAyBA,SAASzkB,GAATykB,CAAane,mBAAbme,CAAiCjwC,KAAjCiwC,EAAzBA;AAEAA,qBAASvuB,mBAATuuB,CAA6Bt8B,YAA7Bs8B;AAEAA,qBAAS1uB,UAAT0uB;AAEA,mBAAO;AACLnvB,sBAAQ0f,UAAU1f,MADb;AAEL0nB,sBAAQsH,KAAK3+B,KAFR;AAGLs3B,sBAAQuH,KAAK7+B,KAHR;AAILE,uBAAS8+B,UAJJ;AAKL7+B,uBAAS8+B;AALJ,aAAP;AA3HgB;;AAoIlBL,0BAAgB9a,IAAhB8a,EAAsBS,cAAtBT,EAAsC5+B,KAAtC4+B,EAA6C;AAE3C9a,mBAAO34B,KAAKoG,GAALpG,CAAS24B,IAAT34B,CAAP24B;AAKA,kBAAMwb,UAAUn0C,KAAK6D,GAAL7D,CAASgrC,cAAcsH,gBAAvBtyC,EAAyCk0C,cAAzCl0C,CAAhB;AACA,gBAAIoT,OAAOpT,KAAKkgC,IAALlgC,CAAU24B,OAAO9jB,KAAjB7U,CAAX;;AACA,gBAAIoT,QAAQ+gC,OAAZ,EAAqB;AACnB/gC,qBAAO+gC,OAAP/gC;AADF,mBAEO;AACLyB,sBAAQzB,OAAOulB,IAAf9jB;AAZyC;;AAc3C,mBAAO;AAAEA,mBAAF;AAASzB;AAAT,aAAP;AAlJgB;;AAqJlB6gC,mBAASN,QAATM,EAAmB5uC,EAAnB4uC,EAAuB3uC,EAAvB2uC,EAA2B1uC,EAA3B0uC,EAA+BzuC,EAA/ByuC,EAAmC;AACjC,kBAAMG,YAAY7uC,KAAKF,EAAvB;AACA,kBAAMgvC,aAAa7uC,KAAKF,EAAxB;AACAquC,qBAASzkB,GAATykB,CAAahvC,IAAbgvC,CAAkBtuC,EAAlBsuC,EAAsBruC,EAAtBquC,EAA0BS,SAA1BT,EAAqCU,UAArCV;AACAA,qBAAS59C,IAAT49C;AACAA,qBAAS79C,OAAT69C;AA1JgB;;AA6JlBC,yCAA+BD,QAA/BC,EAAyCR,SAAzCQ,EAAoD/I,KAApD+I,EAA2D;AACzD,kBAAM5nB,UAAU2nB,SAASzkB,GAAzB;AAAA,kBACEiC,UAAUwiB,SAASxiB,OADrB;;AAEA,oBAAQiiB,SAAR;AACE,mBAAKL,UAAUC,OAAf;AACE,sBAAM9jB,MAAM,KAAKA,GAAjB;AACAlD,wBAAQmS,SAARnS,GAAoBkD,IAAIiP,SAAxBnS;AACAA,wBAAQkS,WAARlS,GAAsBkD,IAAIgP,WAA1BlS;AACAmF,wBAAQ+I,SAAR/I,GAAoBjC,IAAIiP,SAAxBhN;AACAA,wBAAQgJ,WAARhJ,GAAsBjC,IAAIgP,WAA1B/M;AACA;;AACF,mBAAK4hB,UAAUE,SAAf;AACE,sBAAMqB,WAAW7xC,WAAKC,YAALD,CAAkBooC,MAAM,CAANA,CAAlBpoC,EAA4BooC,MAAM,CAANA,CAA5BpoC,EAAsCooC,MAAM,CAANA,CAAtCpoC,CAAjB;;AACAupB,wBAAQmS,SAARnS,GAAoBsoB,QAApBtoB;AACAA,wBAAQkS,WAARlS,GAAsBsoB,QAAtBtoB;AAEAmF,wBAAQ+I,SAAR/I,GAAoBmjB,QAApBnjB;AACAA,wBAAQgJ,WAARhJ,GAAsBmjB,QAAtBnjB;AACA;;AACF;AACE,sBAAM,IAAI/xB,iBAAJ,CAAiB,2BAA0Bg0C,SAA3B,EAAhB,CAAN;AAjBJ;AAhKgB;;AAqLlB9N,qBAAWpW,GAAXoW,EAAgB+J,KAAhB/J,EAAuBD,OAAvBC,EAAgCjK,QAAhCiK,EAA0C;AAExC,gBAAI4F,SAAS7F,OAAb;;AACA,gBAAIhK,aAAaC,SAAS8P,OAA1B,EAAmC;AACjCF,uBAASzoC,WAAK3N,SAAL2N,CAAeyoC,MAAfzoC,EAAuB4sC,MAAM1N,aAA7Bl/B,CAATyoC;;AACA,kBAAI,KAAKA,MAAT,EAAiB;AACfA,yBAASzoC,WAAK3N,SAAL2N,CAAeyoC,MAAfzoC,EAAuB,KAAKyoC,MAA5BzoC,CAATyoC;AAH+B;AAHK;;AAUxC,kBAAM2H,yBAAyB,KAAKS,mBAAL,CAAyBjE,KAAzB,CAA/B;AAEA,gBAAIG,YAAY,IAAIC,SAAJ,CAAcvE,MAAd,CAAhB;AAGAsE,wBAAYA,UAAU/b,SAAV+b,CACVqD,uBAAuB99B,OADby6B,EAEVqD,uBAAuB79B,OAFbw6B,CAAZA;AAIAA,wBAAYA,UAAU36B,KAAV26B,CACV,IAAIqD,uBAAuB3G,MADjBsD,EAEV,IAAIqD,uBAAuB1G,MAFjBqD,CAAZA;AAKA,kBAAM3G,UAAU3Z,IAAIqgB,aAAJrgB,CAAkB2jB,uBAAuBruB,MAAzC0K,EAAiD,QAAjDA,CAAhB;;AACA,gBAAI;AACF2Z,sBAAQjV,YAARiV,CAAqB2G,SAArB3G;AADF,cAEE,OAAOlrC,EAAP,EAAW;AAGXzB,8BAAM,8BAA6ByB,IAAIa,OAAQ,IAA/CtC;AA9BsC;;AAgCxC,mBAAO2sC,OAAP;AArNgB;;AAAA;;;;;;;;;;;;;ACzbpB,cAAMj8B,sBAAsB3O,OAAOwD,MAAPxD,CAAc,IAAdA,CAA5B;;AAEA2O,4BAAoBC,UAApBD,GACEA,oBAAoBC,UAApBD,KAAmCpN,SAAnCoN,GACI,IADJA,GAEIA,oBAAoBC,UAH1BD;AAKAA,4BAAoB6Q,SAApB7Q,GACEA,oBAAoB6Q,SAApB7Q,KAAkCpN,SAAlCoN,GACI,EADJA,GAEIA,oBAAoB6Q,SAH1B7Q;;;;;;;;;;;;ACnBA;;AAWA,cAAM2nC,eAAe;AACnBliD,mBAAS,CADU;AAEnBmiD,gBAAM,CAFa;AAGnBC,iBAAO;AAHY,SAArB;AAMA,cAAMC,aAAa;AACjBriD,mBAAS,CADQ;AAEjBsiD,kBAAQ,CAFS;AAGjBC,2BAAiB,CAHA;AAIjBC,iBAAO,CAJU;AAKjBC,mBAAS,CALQ;AAMjBL,iBAAO,CANU;AAOjBM,gBAAM,CAPW;AAQjBC,yBAAe,CARE;AASjBC,0BAAgB;AATC,SAAnB;;AAYA,iBAASC,UAAT,CAAoBhsC,MAApB,EAA4B;AAC1B,cACE,EACEA,kBAAkB9M,KAAlB8M,IACC,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,WAAW,IAF5C,CADF,EAKE;AACA/M,mCACE,gEADFA;AAPwB;;AAW1B,kBAAQ+M,OAAOzK,IAAf;AACE,iBAAK,gBAAL;AACE,qBAAO,IAAIY,oBAAJ,CAAmB6J,OAAO1K,OAA1B,CAAP;;AACF,iBAAK,qBAAL;AACE,qBAAO,IAAIS,yBAAJ,CAAwBiK,OAAO1K,OAA/B,CAAP;;AACF,iBAAK,mBAAL;AACE,qBAAO,IAAII,uBAAJ,CAAsBsK,OAAO1K,OAA7B,EAAsC0K,OAAOrK,IAA7C,CAAP;;AACF,iBAAK,6BAAL;AACE,qBAAO,IAAIK,iCAAJ,CAAgCgK,OAAO1K,OAAvC,EAAgD0K,OAAO/J,MAAvD,CAAP;;AACF,iBAAK,uBAAL;AACE,qBAAO,IAAIL,2BAAJ,CAA0BoK,OAAO1K,OAAjC,EAA0C0K,OAAOnK,OAAjD,CAAP;;AACF;AACE,qBAAO,IAAID,2BAAJ,CAA0BoK,OAAO1K,OAAjC,EAA0C0K,OAAO3G,QAAP2G,EAA1C,CAAP;AAZJ;AAvDF;;AAuEA,cAAM+E,cAAN,CAAqB;AACnBvP,sBAAYy2C,UAAZz2C,EAAwB02C,UAAxB12C,EAAoC22C,MAApC32C,EAA4C;AAC1C,iBAAKy2C,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,UAAL,GAAkBA,UAAlB;AACA,iBAAKC,MAAL,GAAcA,MAAd;AACA,iBAAKC,UAAL,GAAkB,CAAlB;AACA,iBAAKC,QAAL,GAAgB,CAAhB;AACA,iBAAKC,WAAL,GAAmBv3C,OAAOwD,MAAPxD,CAAc,IAAdA,CAAnB;AACA,iBAAKw3C,iBAAL,GAAyBx3C,OAAOwD,MAAPxD,CAAc,IAAdA,CAAzB;AACA,iBAAKy3C,oBAAL,GAA4Bz3C,OAAOwD,MAAPxD,CAAc,IAAdA,CAA5B;AACA,iBAAK03C,aAAL,GAAqB13C,OAAOwD,MAAPxD,CAAc,IAAdA,CAArB;;AAEA,iBAAK23C,kBAAL,GAA0Bj6B,SAAS;AACjC,oBAAM3a,OAAO2a,MAAM3a,IAAnB;;AACA,kBAAIA,KAAKo0C,UAALp0C,KAAoB,KAAKm0C,UAA7B,EAAyC;AACvC;AAH+B;;AAKjC,kBAAIn0C,KAAK60C,MAAT,EAAiB;AACf,qBAAKC,qBAAL,CAA2B90C,IAA3B;;AACA;AAP+B;;AASjC,kBAAIA,KAAKmX,QAAT,EAAmB;AACjB,sBAAMm9B,aAAat0C,KAAKs0C,UAAxB;AACA,sBAAM3sC,aAAa,KAAK+sC,oBAAL,CAA0BJ,UAA1B,CAAnB;;AACA,oBAAI,CAAC3sC,UAAL,EAAiB;AACf,wBAAM,IAAIvM,KAAJ,CAAW,2BAA0Bk5C,UAA3B,EAAV,CAAN;AAJe;;AAMjB,uBAAO,KAAKI,oBAAL,CAA0BJ,UAA1B,CAAP;;AAEA,oBAAIt0C,KAAKmX,QAALnX,KAAkBuzC,aAAaC,IAAnC,EAAyC;AACvC7rC,6BAAWK,OAAXL,CAAmB3H,KAAKA,IAAxB2H;AADF,uBAEO,IAAI3H,KAAKmX,QAALnX,KAAkBuzC,aAAaE,KAAnC,EAA0C;AAC/C9rC,6BAAWM,MAAXN,CAAkBusC,WAAWl0C,KAAKkI,MAAhBgsC,CAAlBvsC;AADK,uBAEA;AACL,wBAAM,IAAIvM,KAAJ,CAAU,0BAAV,CAAN;AAbe;;AAejB;AAxB+B;;AA0BjC,oBAAM25C,SAAS,KAAKJ,aAAL,CAAmB30C,KAAK+0C,MAAxB,CAAf;;AACA,kBAAI,CAACA,MAAL,EAAa;AACX,sBAAM,IAAI35C,KAAJ,CAAW,+BAA8B4E,KAAK+0C,MAApC,EAAV,CAAN;AA5B+B;;AA8BjC,kBAAI/0C,KAAKs0C,UAAT,EAAqB;AACnB,sBAAMU,eAAe,KAAKb,UAA1B;AACA,sBAAMc,eAAej1C,KAAKm0C,UAA1B;AAEA,oBAAIpsC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC7BA,0BAAQ+sC,OAAO/0C,KAAKA,IAAZ+0C,CAAR/sC;AADF,mBAEGkE,IAFH,CAGE,UAAU/H,MAAV,EAAkB;AAChBkwC,yBAAO55B,WAAP45B,CAAmB;AACjBF,gCAAYa,YADK;AAEjBZ,gCAAYa,YAFK;AAGjB99B,8BAAUo8B,aAAaC,IAHN;AAIjBc,gCAAYt0C,KAAKs0C,UAJA;AAKjBt0C,0BAAMmE;AALW,mBAAnBkwC;AAJJ,mBAYE,UAAUnsC,MAAV,EAAkB;AAChBmsC,yBAAO55B,WAAP45B,CAAmB;AACjBF,gCAAYa,YADK;AAEjBZ,gCAAYa,YAFK;AAGjB99B,8BAAUo8B,aAAaE,KAHN;AAIjBa,gCAAYt0C,KAAKs0C,UAJA;AAKjBpsC,4BAAQgsC,WAAWhsC,MAAXgsC;AALS,mBAAnBG;AAbJ;AAsBA;AAxD+B;;AA0DjC,kBAAIr0C,KAAKu0C,QAAT,EAAmB;AACjB,qBAAKW,iBAAL,CAAuBl1C,IAAvB;;AACA;AA5D+B;;AA8DjC+0C,qBAAO/0C,KAAKA,IAAZ+0C;AA9DF;;AAgEAV,mBAAOv5B,gBAAPu5B,CAAwB,SAAxBA,EAAmC,KAAKO,kBAAxCP;AA5EiB;;AA+EnB/3B,aAAG64B,UAAH74B,EAAe84B,OAAf94B,EAAwB;AAUtB,kBAAM+4B,KAAK,KAAKV,aAAhB;;AACA,gBAAIU,GAAGF,UAAHE,CAAJ,EAAoB;AAClB,oBAAM,IAAIj6C,KAAJ,CAAW,0CAAyC+5C,UAAW,GAA/D,CAAN;AAZoB;;AActBE,eAAGF,UAAHE,IAAiBD,OAAjBC;AA7FiB;;AAsGnBhoC,eAAK8nC,UAAL9nC,EAAiBrN,IAAjBqN,EAAuBqN,SAAvBrN,EAAkC;AAChC,iBAAKgnC,MAAL,CAAY55B,WAAZ,CACE;AACE05B,0BAAY,KAAKA,UADnB;AAEEC,0BAAY,KAAKA,UAFnB;AAGEW,sBAAQI,UAHV;AAIEn1C;AAJF,aADF,EAOE0a,SAPF;AAvGiB;;AA0HnBjN,0BAAgB0nC,UAAhB1nC,EAA4BzN,IAA5ByN,EAAkCiN,SAAlCjN,EAA6C;AAC3C,kBAAM6mC,aAAa,KAAKA,UAAL,EAAnB;AACA,kBAAM3sC,aAAaD,oCAAnB;AACA,iBAAKgtC,oBAAL,CAA0BJ,UAA1B,IAAwC3sC,UAAxC;;AACA,gBAAI;AACF,mBAAK0sC,MAAL,CAAY55B,WAAZ,CACE;AACE05B,4BAAY,KAAKA,UADnB;AAEEC,4BAAY,KAAKA,UAFnB;AAGEW,wBAAQI,UAHV;AAIEb,0BAJF;AAKEt0C;AALF,eADF,EAQE0a,SARF;AADF,cAWE,OAAO/d,EAAP,EAAW;AACXgL,yBAAWM,MAAXN,CAAkBhL,EAAlBgL;AAhByC;;AAkB3C,mBAAOA,WAAWG,OAAlB;AA5IiB;;AAyJnBqQ,yBAAeg9B,UAAfh9B,EAA2BnY,IAA3BmY,EAAiCm9B,gBAAjCn9B,EAAmDuC,SAAnDvC,EAA8D;AAC5D,kBAAMo8B,WAAW,KAAKA,QAAL,EAAjB;AAAA,kBACEJ,aAAa,KAAKA,UADpB;AAAA,kBAEEC,aAAa,KAAKA,UAFpB;AAAA,kBAGEC,SAAS,KAAKA,MAHhB;AAKA,mBAAO,IAAIkB,cAAJ,CACL;AACExsB,qBAAOysB,cAAc;AACnB,sBAAMC,kBAAkB/tC,oCAAxB;AACA,qBAAK+sC,iBAAL,CAAuBF,QAAvB,IAAmC;AACjCiB,4BADiC;AAEjCE,6BAAWD,eAFsB;AAGjCE,4BAAU,IAHuB;AAIjCC,8BAAY,IAJqB;AAKjCC,4BAAU;AALuB,iBAAnC;AAOAxB,uBAAO55B,WAAP45B,CACE;AACEF,4BADF;AAEEC,4BAFF;AAGEW,0BAAQI,UAHV;AAIEZ,0BAJF;AAKEv0C,sBALF;AAME81C,+BAAaN,WAAWM;AAN1B,iBADFzB,EASE35B,SATF25B;AAYA,uBAAOoB,gBAAgB3tC,OAAvB;AAtBJ;AAyBEiuC,oBAAMP,cAAc;AAClB,sBAAMQ,iBAAiBtuC,oCAAvB;AACA,qBAAK+sC,iBAAL,CAAuBF,QAAvB,EAAiCoB,QAAjC,GAA4CK,cAA5C;AACA3B,uBAAO55B,WAAP45B,CAAmB;AACjBF,4BADiB;AAEjBC,4BAFiB;AAGjBS,0BAAQnB,WAAWK,IAHF;AAIjBQ,0BAJiB;AAKjBuB,+BAAaN,WAAWM;AALP,iBAAnBzB;AASA,uBAAO2B,eAAeluC,OAAtB;AArCJ;AAwCE4R,sBAAQxR,UAAU;AAChB7M,kCAAO6M,kBAAkB9M,KAAzBC,EAAgC,iCAAhCA;AACA,sBAAM46C,mBAAmBvuC,oCAAzB;AACA,qBAAK+sC,iBAAL,CAAuBF,QAAvB,EAAiCqB,UAAjC,GAA8CK,gBAA9C;AACA,qBAAKxB,iBAAL,CAAuBF,QAAvB,EAAiCsB,QAAjC,GAA4C,IAA5C;AACAxB,uBAAO55B,WAAP45B,CAAmB;AACjBF,4BADiB;AAEjBC,4BAFiB;AAGjBS,0BAAQnB,WAAWC,MAHF;AAIjBY,0BAJiB;AAKjBrsC,0BAAQgsC,WAAWhsC,MAAXgsC;AALS,iBAAnBG;AAQA,uBAAO4B,iBAAiBnuC,OAAxB;AArDJ;AAAA,aADK,EAyDLwtC,gBAzDK,CAAP;AA/JiB;;AA+NnBJ,4BAAkBl1C,IAAlBk1C,EAAwB;AACtB,kBAAMX,WAAWv0C,KAAKu0C,QAAtB;AAAA,kBACEJ,aAAa,KAAKA,UADpB;AAAA,kBAEEC,aAAap0C,KAAKm0C,UAFpB;AAAA,kBAGEE,SAAS,KAAKA,MAHhB;AAIA,kBAAM6B,OAAO,IAAb;AAAA,kBACEnB,SAAS,KAAKJ,aAAL,CAAmB30C,KAAK+0C,MAAxB,CADX;AAGA,kBAAMoB,aAAa;AACjBz2B,sBAAQxgB,KAARwgB,EAAoC;AAAA,oBAArBtN,IAAqB,uEAAd,CAAc;AAAA,oBAAXsI,SAAW;;AAClC,oBAAI,KAAK07B,WAAT,EAAsB;AACpB;AAFgC;;AAIlC,sBAAMC,kBAAkB,KAAKP,WAA7B;AACA,qBAAKA,WAAL,IAAoB1jC,IAApB;;AAIA,oBAAIikC,kBAAkB,CAAlBA,IAAuB,KAAKP,WAAL,IAAoB,CAA/C,EAAkD;AAChD,uBAAKQ,cAAL,GAAsB5uC,oCAAtB;AACA,uBAAKkY,KAAL,GAAa,KAAK02B,cAAL,CAAoBxuC,OAAjC;AAXgC;;AAalCusC,uBAAO55B,WAAP45B,CACE;AACEF,4BADF;AAEEC,4BAFF;AAGES,0BAAQnB,WAAWI,OAHrB;AAIES,0BAJF;AAKEr1C;AALF,iBADFm1C,EAQE35B,SARF25B;AAde;;AA0BjB50B,sBAAQ;AACN,oBAAI,KAAK22B,WAAT,EAAsB;AACpB;AAFI;;AAIN,qBAAKA,WAAL,GAAmB,IAAnB;AACA/B,uBAAO55B,WAAP45B,CAAmB;AACjBF,4BADiB;AAEjBC,4BAFiB;AAGjBS,0BAAQnB,WAAWG,KAHF;AAIjBU;AAJiB,iBAAnBF;AAMA,uBAAO6B,KAAK1B,WAAL0B,CAAiB3B,QAAjB2B,CAAP;AArCe;;AAwCjBv/B,oBAAMzO,MAANyO,EAAc;AACZtb,kCAAO6M,kBAAkB9M,KAAzBC,EAAgC,gCAAhCA;;AACA,oBAAI,KAAK+6C,WAAT,EAAsB;AACpB;AAHU;;AAKZ,qBAAKA,WAAL,GAAmB,IAAnB;AACA/B,uBAAO55B,WAAP45B,CAAmB;AACjBF,4BADiB;AAEjBC,4BAFiB;AAGjBS,0BAAQnB,WAAWD,KAHF;AAIjBc,0BAJiB;AAKjBrsC,0BAAQgsC,WAAWhsC,MAAXgsC;AALS,iBAAnBG;AA9Ce;;AAuDjBiC,8BAAgB5uC,oCAvDC;AAwDjB8X,sBAAQ,IAxDS;AAyDjBG,wBAAU,IAzDO;AA0DjBy2B,2BAAa,KA1DI;AA2DjBN,2BAAa91C,KAAK81C,WA3DD;AA4DjBl2B,qBAAO;AA5DU,aAAnB;AA+DAu2B,uBAAWG,cAAXH,CAA0BnuC,OAA1BmuC;AACAA,uBAAWv2B,KAAXu2B,GAAmBA,WAAWG,cAAXH,CAA0BruC,OAA7CquC;AACA,iBAAK3B,WAAL,CAAiBD,QAAjB,IAA6B4B,UAA7B;AAEA,gBAAIpuC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC7BA,sBAAQ+sC,OAAO/0C,KAAKA,IAAZ+0C,EAAkBoB,UAAlBpB,CAAR/sC;AADF,eAEGkE,IAFH,CAGE,YAAY;AACVmoC,qBAAO55B,WAAP45B,CAAmB;AACjBF,0BADiB;AAEjBC,0BAFiB;AAGjBS,wBAAQnB,WAAWO,cAHF;AAIjBM,wBAJiB;AAKjBgC,yBAAS;AALQ,eAAnBlC;AAJJ,eAYE,UAAUnsC,MAAV,EAAkB;AAChBmsC,qBAAO55B,WAAP45B,CAAmB;AACjBF,0BADiB;AAEjBC,0BAFiB;AAGjBS,wBAAQnB,WAAWO,cAHF;AAIjBM,wBAJiB;AAKjBrsC,wBAAQgsC,WAAWhsC,MAAXgsC;AALS,eAAnBG;AAbJ;AA1SiB;;AAqUnBS,gCAAsB90C,IAAtB80C,EAA4B;AAC1B,kBAAMP,WAAWv0C,KAAKu0C,QAAtB;AAAA,kBACEJ,aAAa,KAAKA,UADpB;AAAA,kBAEEC,aAAap0C,KAAKm0C,UAFpB;AAAA,kBAGEE,SAAS,KAAKA,MAHhB;AAIA,kBAAMmC,mBAAmB,KAAK/B,iBAAL,CAAuBF,QAAvB,CAAzB;AAAA,kBACE4B,aAAa,KAAK3B,WAAL,CAAiBD,QAAjB,CADf;;AAGA,oBAAQv0C,KAAK60C,MAAb;AACE,mBAAKnB,WAAWO,cAAhB;AACE,oBAAIj0C,KAAKu2C,OAAT,EAAkB;AAChBC,mCAAiBd,SAAjBc,CAA2BxuC,OAA3BwuC;AADF,uBAEO;AACLA,mCAAiBd,SAAjBc,CAA2BvuC,MAA3BuuC,CAAkCtC,WAAWl0C,KAAKkI,MAAhBgsC,CAAlCsC;AAJJ;;AAME;;AACF,mBAAK9C,WAAWM,aAAhB;AACE,oBAAIh0C,KAAKu2C,OAAT,EAAkB;AAChBC,mCAAiBb,QAAjBa,CAA0BxuC,OAA1BwuC;AADF,uBAEO;AACLA,mCAAiBb,QAAjBa,CAA0BvuC,MAA1BuuC,CAAiCtC,WAAWl0C,KAAKkI,MAAhBgsC,CAAjCsC;AAJJ;;AAME;;AACF,mBAAK9C,WAAWK,IAAhB;AAEE,oBAAI,CAACoC,UAAL,EAAiB;AACf9B,yBAAO55B,WAAP45B,CAAmB;AACjBF,8BADiB;AAEjBC,8BAFiB;AAGjBS,4BAAQnB,WAAWM,aAHF;AAIjBO,4BAJiB;AAKjBgC,6BAAS;AALQ,mBAAnBlC;AAOA;AAVJ;;AAcE,oBAAI8B,WAAWL,WAAXK,IAA0B,CAA1BA,IAA+Bn2C,KAAK81C,WAAL91C,GAAmB,CAAtD,EAAyD;AACvDm2C,6BAAWG,cAAXH,CAA0BnuC,OAA1BmuC;AAfJ;;AAkBEA,2BAAWL,WAAXK,GAAyBn2C,KAAK81C,WAA9BK;AAEA,oBAAIpuC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC7BA,0BAAQmuC,WAAW32B,MAAX22B,IAAqBA,WAAW32B,MAAX22B,EAA7BnuC;AADF,mBAEGkE,IAFH,CAGE,YAAY;AACVmoC,yBAAO55B,WAAP45B,CAAmB;AACjBF,8BADiB;AAEjBC,8BAFiB;AAGjBS,4BAAQnB,WAAWM,aAHF;AAIjBO,4BAJiB;AAKjBgC,6BAAS;AALQ,mBAAnBlC;AAJJ,mBAYE,UAAUnsC,MAAV,EAAkB;AAChBmsC,yBAAO55B,WAAP45B,CAAmB;AACjBF,8BADiB;AAEjBC,8BAFiB;AAGjBS,4BAAQnB,WAAWM,aAHF;AAIjBO,4BAJiB;AAKjBrsC,4BAAQgsC,WAAWhsC,MAAXgsC;AALS,mBAAnBG;AAbJ;AAsBA;;AACF,mBAAKX,WAAWI,OAAhB;AACEz4C,kCAAOm7C,gBAAPn7C,EAAyB,uCAAzBA;;AACA,oBAAIm7C,iBAAiBX,QAArB,EAA+B;AAC7B;AAHJ;;AAKEW,iCAAiBhB,UAAjBgB,CAA4B92B,OAA5B82B,CAAoCx2C,KAAKd,KAAzCs3C;AACA;;AACF,mBAAK9C,WAAWG,KAAhB;AACEx4C,kCAAOm7C,gBAAPn7C,EAAyB,qCAAzBA;;AACA,oBAAIm7C,iBAAiBX,QAArB,EAA+B;AAC7B;AAHJ;;AAKEW,iCAAiBX,QAAjBW,GAA4B,IAA5BA;AACAA,iCAAiBhB,UAAjBgB,CAA4B/2B,KAA5B+2B;;AACA,qBAAKC,uBAAL,CAA6BD,gBAA7B,EAA+CjC,QAA/C;;AACA;;AACF,mBAAKb,WAAWD,KAAhB;AACEp4C,kCAAOm7C,gBAAPn7C,EAAyB,qCAAzBA;AACAm7C,iCAAiBhB,UAAjBgB,CAA4B7/B,KAA5B6/B,CAAkCtC,WAAWl0C,KAAKkI,MAAhBgsC,CAAlCsC;;AACA,qBAAKC,uBAAL,CAA6BD,gBAA7B,EAA+CjC,QAA/C;;AACA;;AACF,mBAAKb,WAAWE,eAAhB;AACE,oBAAI5zC,KAAKu2C,OAAT,EAAkB;AAChBC,mCAAiBZ,UAAjBY,CAA4BxuC,OAA5BwuC;AADF,uBAEO;AACLA,mCAAiBZ,UAAjBY,CAA4BvuC,MAA5BuuC,CAAmCtC,WAAWl0C,KAAKkI,MAAhBgsC,CAAnCsC;AAJJ;;AAME,qBAAKC,uBAAL,CAA6BD,gBAA7B,EAA+CjC,QAA/C;;AACA;;AACF,mBAAKb,WAAWC,MAAhB;AACE,oBAAI,CAACwC,UAAL,EAAiB;AACf;AAFJ;;AAKE,oBAAIpuC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAC7BA,0BACEmuC,WAAWx2B,QAAXw2B,IAAuBA,WAAWx2B,QAAXw2B,CAAoBjC,WAAWl0C,KAAKkI,MAAhBgsC,CAApBiC,CADzBnuC;AADF,mBAIGkE,IAJH,CAKE,YAAY;AACVmoC,yBAAO55B,WAAP45B,CAAmB;AACjBF,8BADiB;AAEjBC,8BAFiB;AAGjBS,4BAAQnB,WAAWE,eAHF;AAIjBW,4BAJiB;AAKjBgC,6BAAS;AALQ,mBAAnBlC;AANJ,mBAcE,UAAUnsC,MAAV,EAAkB;AAChBmsC,yBAAO55B,WAAP45B,CAAmB;AACjBF,8BADiB;AAEjBC,8BAFiB;AAGjBS,4BAAQnB,WAAWE,eAHF;AAIjBW,4BAJiB;AAKjBrsC,4BAAQgsC,WAAWhsC,MAAXgsC;AALS,mBAAnBG;AAfJ;AAwBA8B,2BAAWG,cAAXH,CAA0BluC,MAA1BkuC,CAAiCjC,WAAWl0C,KAAKkI,MAAhBgsC,CAAjCiC;AACAA,2BAAWC,WAAXD,GAAyB,IAAzBA;AACA,uBAAO,KAAK3B,WAAL,CAAiBD,QAAjB,CAAP;AACA;;AACF;AACE,sBAAM,IAAIn5C,KAAJ,CAAU,wBAAV,CAAN;AAzHJ;AA7UiB;;AA6cnB,gBAAMq7C,uBAAN,CAA8BD,gBAA9B,EAAgDjC,QAAhD,EAA0D;AAGxD,kBAAMxsC,QAAQ2uC,UAAR3uC,CAAmB,CACvByuC,iBAAiBd,SAAjBc,IAA8BA,iBAAiBd,SAAjBc,CAA2B1uC,OADlC,EAEvB0uC,iBAAiBb,QAAjBa,IAA6BA,iBAAiBb,QAAjBa,CAA0B1uC,OAFhC,EAGvB0uC,iBAAiBZ,UAAjBY,IAA+BA,iBAAiBZ,UAAjBY,CAA4B1uC,OAHpC,CAAnBC,CAAN;AAKA,mBAAO,KAAK0sC,iBAAL,CAAuBF,QAAvB,CAAP;AArdiB;;AAwdnBpmC,oBAAU;AACR,iBAAKkmC,MAAL,CAAYt5B,mBAAZ,CAAgC,SAAhC,EAA2C,KAAK65B,kBAAhD;AAzdiB;;AAAA;;;;;;;;;;;;;;ACxDrB;;AAEA,cAAM5yB,QAAN,CAAe;AACb20B;AAEA32C;;AAEAtC,8BAAqC;AAAA,gBAAzB;AAAEk5C,wBAAF;AAAcC;AAAd,aAAyB;AACnC,iBAAKF,YAAL,GAAoBC,UAApB;AACA,iBAAK52C,KAAL,GAAa62C,OAAb;AAPW;;AAUbC,mBAAS;AACP,mBAAO,KAAK92C,KAAZ;AAXW;;AAcb6H,cAAIpK,IAAJoK,EAAU;AACR,mBAAO,KAAK8uC,YAAL,CAAkB9uC,GAAlB,CAAsBpK,IAAtB,KAA+B,IAAtC;AAfW;;AAkBb8zB,mBAAS;AACP,mBAAOhxB,yBAAc,KAAKo2C,YAAnBp2C,CAAP;AAnBW;;AAsBbyb,cAAIve,IAAJue,EAAU;AACR,mBAAO,KAAK26B,YAAL,CAAkB36B,GAAlB,CAAsBve,IAAtB,CAAP;AAvBW;;AAAA;;;;;;;;;;;;;;ACHf;;AAEA,cAAMs5C,oBAAN,CAA2B;AACzBr5C,sBAAYD,IAAZC,EAAkB2W,MAAlB3W,EAA0B;AACxB,iBAAKgvC,OAAL,GAAe,IAAf;AACA,iBAAKjvC,IAAL,GAAYA,IAAZ;AACA,iBAAK4W,MAAL,GAAcA,MAAd;AAJuB;;AAAA;;AAQ3B,cAAMyN,qBAAN,CAA4B;AAC1BpkB,sBAAYsC,IAAZtC,EAAkB;AAChB,iBAAKD,IAAL,GAAY,IAAZ;AACA,iBAAKu5C,OAAL,GAAe,IAAf;AACA,iBAAKC,MAAL,GAAc,IAAd;AACA,iBAAKC,OAAL,GAAe,IAAI3jC,GAAJ,EAAf;;AAEA,gBAAIvT,SAAS,IAAb,EAAmB;AACjB;AAPc;;AAShB,iBAAKvC,IAAL,GAAYuC,KAAKvC,IAAjB;AACA,iBAAKu5C,OAAL,GAAeh3C,KAAKg3C,OAApB;AACA,iBAAKC,MAAL,GAAcj3C,KAAKm3C,KAAnB;;AACA,uBAAWvM,KAAX,IAAoB5qC,KAAKo3C,MAAzB,EAAiC;AAC/B,mBAAKF,OAAL,CAAa/2C,GAAb,CACEyqC,MAAMh6B,EADR,EAEE,IAAImmC,oBAAJ,CAAyBnM,MAAMntC,IAA/B,EAAqCmtC,MAAMv2B,MAA3C,CAFF;AAbc;;AAmBhB,gBAAIrU,KAAKq3C,SAALr3C,KAAmB,KAAvB,EAA8B;AAC5B,yBAAW4qC,KAAX,IAAoB,KAAKsM,OAAzB,EAAkC;AAChCtM,sBAAM8B,OAAN9B,GAAgB,KAAhBA;AAF0B;AAnBd;;AAyBhB,uBAAWtuB,EAAX,IAAiBtc,KAAKsc,EAAtB,EAA0B;AACxB,mBAAK46B,OAAL,CAAarvC,GAAb,CAAiByU,EAAjB,EAAqBowB,OAArB,GAA+B,IAA/B;AA1Bc;;AA6BhB,uBAAW4K,GAAX,IAAkBt3C,KAAKs3C,GAAvB,EAA4B;AAC1B,mBAAKJ,OAAL,CAAarvC,GAAb,CAAiByvC,GAAjB,EAAsB5K,OAAtB,GAAgC,KAAhC;AA9Bc;AADQ;;AAmC1B6K,wCAA8BC,KAA9BD,EAAqC;AACnC,kBAAM/6C,SAASg7C,MAAMh7C,MAArB;;AACA,gBAAIA,SAAS,CAAb,EAAgB;AACd,qBAAO,IAAP;AAHiC;;AAKnC,kBAAMi7C,WAAWD,MAAM,CAANA,CAAjB;;AACA,iBAAK,IAAI14C,IAAI,CAAb,EAAgBA,IAAItC,MAApB,EAA4BsC,GAA5B,EAAiC;AAC/B,oBAAM44C,UAAUF,MAAM14C,CAAN04C,CAAhB;AACA,kBAAI3S,KAAJ;;AACA,kBAAIxjC,MAAMspC,OAANtpC,CAAcq2C,OAAdr2C,CAAJ,EAA4B;AAC1BwjC,wBAAQ,KAAK0S,6BAAL,CAAmCG,OAAnC,CAAR7S;AADF,qBAEO,IAAI,KAAKqS,OAAL,CAAal7B,GAAb,CAAiB07B,OAAjB,CAAJ,EAA+B;AACpC7S,wBAAQ,KAAKqS,OAAL,CAAarvC,GAAb,CAAiB6vC,OAAjB,EAA0BhL,OAAlC7H;AADK,qBAEA;AACL3pC,gCAAM,qCAAoCw8C,OAArC,EAALx8C;AACA,uBAAO,IAAP;AAT6B;;AAW/B,sBAAQu8C,QAAR;AACE,qBAAK,KAAL;AACE,sBAAI,CAAC5S,KAAL,EAAY;AACV,2BAAO,KAAP;AAFJ;;AAIE;;AACF,qBAAK,IAAL;AACE,sBAAIA,KAAJ,EAAW;AACT,2BAAO,IAAP;AAFJ;;AAIE;;AACF,qBAAK,KAAL;AACE,yBAAO,CAACA,KAAR;;AACF;AACE,yBAAO,IAAP;AAdJ;AAjBiC;;AAkCnC,mBAAO4S,aAAa,KAApB;AArEwB;;AAwE1B9K,oBAAU/B,KAAV+B,EAAiB;AACf,gBAAI,KAAKuK,OAAL,CAAa9kC,IAAb,KAAsB,CAA1B,EAA6B;AAC3B,qBAAO,IAAP;AAFa;;AAIf,gBAAI,CAACw4B,KAAL,EAAY;AACV1vC,8BAAK,qCAALA;AACA,qBAAO,IAAP;AANa;;AAQf,gBAAI0vC,MAAMpiC,IAANoiC,KAAe,KAAnB,EAA0B;AACxB,kBAAI,CAAC,KAAKsM,OAAL,CAAal7B,GAAb,CAAiB4uB,MAAMh6B,EAAvB,CAAL,EAAiC;AAC/B1V,gCAAM,qCAAoC0vC,MAAMh6B,EAA3C,EAAL1V;AACA,uBAAO,IAAP;AAHsB;;AAKxB,qBAAO,KAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+iC,MAAMh6B,EAAvB,EAA2B87B,OAAlC;AALF,mBAMO,IAAI9B,MAAMpiC,IAANoiC,KAAe,MAAnB,EAA2B;AAEhC,kBAAIA,MAAM+M,UAAV,EAAsB;AACpB,uBAAO,KAAKJ,6BAAL,CAAmC3M,MAAM+M,UAAzC,CAAP;AAH8B;;AAKhC,kBAAI,CAAC/M,MAAMgN,MAAP,IAAiBhN,MAAMgN,MAANhN,KAAiB,OAAtC,EAA+C;AAE7C,2BAAWh6B,EAAX,IAAiBg6B,MAAMiN,GAAvB,EAA4B;AAC1B,sBAAI,CAAC,KAAKX,OAAL,CAAal7B,GAAb,CAAiBpL,EAAjB,CAAL,EAA2B;AACzB1V,oCAAM,qCAAoC0V,EAArC,EAAL1V;AACA,2BAAO,IAAP;AAHwB;;AAK1B,sBAAI,KAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,EAAqB87B,OAAzB,EAAkC;AAChC,2BAAO,IAAP;AANwB;AAFiB;;AAW7C,uBAAO,KAAP;AAXF,qBAYO,IAAI9B,MAAMgN,MAANhN,KAAiB,OAArB,EAA8B;AACnC,2BAAWh6B,EAAX,IAAiBg6B,MAAMiN,GAAvB,EAA4B;AAC1B,sBAAI,CAAC,KAAKX,OAAL,CAAal7B,GAAb,CAAiBpL,EAAjB,CAAL,EAA2B;AACzB1V,oCAAM,qCAAoC0V,EAArC,EAAL1V;AACA,2BAAO,IAAP;AAHwB;;AAK1B,sBAAI,CAAC,KAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,EAAqB87B,OAA1B,EAAmC;AACjC,2BAAO,KAAP;AANwB;AADO;;AAUnC,uBAAO,IAAP;AAVK,qBAWA,IAAI9B,MAAMgN,MAANhN,KAAiB,QAArB,EAA+B;AACpC,2BAAWh6B,EAAX,IAAiBg6B,MAAMiN,GAAvB,EAA4B;AAC1B,sBAAI,CAAC,KAAKX,OAAL,CAAal7B,GAAb,CAAiBpL,EAAjB,CAAL,EAA2B;AACzB1V,oCAAM,qCAAoC0V,EAArC,EAAL1V;AACA,2BAAO,IAAP;AAHwB;;AAK1B,sBAAI,CAAC,KAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,EAAqB87B,OAA1B,EAAmC;AACjC,2BAAO,IAAP;AANwB;AADQ;;AAUpC,uBAAO,KAAP;AAVK,qBAWA,IAAI9B,MAAMgN,MAANhN,KAAiB,QAArB,EAA+B;AACpC,2BAAWh6B,EAAX,IAAiBg6B,MAAMiN,GAAvB,EAA4B;AAC1B,sBAAI,CAAC,KAAKX,OAAL,CAAal7B,GAAb,CAAiBpL,EAAjB,CAAL,EAA2B;AACzB1V,oCAAM,qCAAoC0V,EAArC,EAAL1V;AACA,2BAAO,IAAP;AAHwB;;AAK1B,sBAAI,KAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,EAAqB87B,OAAzB,EAAkC;AAChC,2BAAO,KAAP;AANwB;AADQ;;AAUpC,uBAAO,IAAP;AAjD8B;;AAmDhCxxC,8BAAM,mCAAkC0vC,MAAMgN,MAAO,GAArD18C;AACA,qBAAO,IAAP;AAlEa;;AAoEfA,4BAAM,sBAAqB0vC,MAAMpiC,IAAK,GAAtCtN;AACA,mBAAO,IAAP;AA7IwB;;AAgJ1B48C,wBAAclnC,EAAdknC,EAAkC;AAAA,gBAAhBpL,OAAgB,uEAAN,IAAM;;AAChC,gBAAI,CAAC,KAAKwK,OAAL,CAAal7B,GAAb,CAAiBpL,EAAjB,CAAL,EAA2B;AACzB1V,8BAAM,qCAAoC0V,EAArC,EAAL1V;AACA;AAH8B;;AAKhC,iBAAKg8C,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,EAAqB87B,OAArB,GAA+B,CAAC,CAACA,OAAjC;AArJwB;;AAwJ1BqL,qBAAW;AACT,gBAAI,CAAC,KAAKb,OAAL,CAAa9kC,IAAlB,EAAwB;AACtB,qBAAO,IAAP;AAFO;;AAIT,gBAAI,KAAK6kC,MAAT,EAAiB;AACf,qBAAO,KAAKA,MAAL,CAAYv0C,KAAZ,EAAP;AALO;;AAOT,mBAAOrB,MAAM22C,IAAN32C,CAAW,KAAK61C,OAAL,CAAa52C,IAAb,EAAXe,CAAP;AA/JwB;;AAkK1B42C,sBAAY;AACV,mBAAO,KAAKf,OAAL,CAAa9kC,IAAb,GAAoB,CAApB,GAAwB7R,yBAAc,KAAK22C,OAAnB32C,CAAxB,GAAsD,IAA7D;AAnKwB;;AAsK1B23C,mBAAStnC,EAATsnC,EAAa;AACX,mBAAO,KAAKhB,OAAL,CAAarvC,GAAb,CAAiB+I,EAAjB,KAAwB,IAA/B;AAvKwB;;AAAA;;;;;;;;;;;;;;ACT5B;;AACA;;AAGA,cAAMpE,sBAAN,CAA6B;AAC3B9O,sBAAYoM,MAAZpM,EAAoB8P,qBAApB9P,EAA2C;AACzCrC,8BACEmS,qBADFnS,EAEE,6EAFFA;AAKA,iBAAK88C,aAAL,GAAqB,EAArB;AACA,iBAAKC,gBAAL,GAAwBtuC,OAAO4C,eAAP5C,IAA0B,KAAlD;AACA,iBAAKuuC,2BAAL,GACEvuC,OAAO6C,0BAAP7C,IAAqC,IADvC;AAGA,kBAAM2C,cAAc3C,OAAO2C,WAA3B;;AACA,gBAAIA,aAAajQ,MAAbiQ,GAAsB,CAA1B,EAA6B;AAC3B,oBAAM1L,SAAS,IAAIvB,UAAJ,CAAeiN,WAAf,EAA4B1L,MAA3C;;AACA,mBAAKo3C,aAAL,CAAmB/4C,IAAnB,CAAwB2B,MAAxB;AAduC;;AAiBzC,iBAAKu3C,sBAAL,GAA8B9qC,qBAA9B;AACA,iBAAK+qC,qBAAL,GAA6B,CAACzuC,OAAO0B,aAArC;AACA,iBAAKgtC,iBAAL,GAAyB,CAAC1uC,OAAOyB,YAAjC;AACA,iBAAKktC,cAAL,GAAsB3uC,OAAOtN,MAA7B;AAEA,iBAAKk8C,kBAAL,GAA0B,IAA1B;AACA,iBAAKC,aAAL,GAAqB,EAArB;;AAEA,iBAAKL,sBAAL,CAA4B7pC,gBAA5B,CAA6C,CAACM,KAAD,EAAQ7P,KAAR,KAAkB;AAC7D,mBAAK05C,cAAL,CAAoB;AAAE7pC,qBAAF;AAAS7P;AAAT,eAApB;AADF;;AAIA,iBAAKo5C,sBAAL,CAA4B3pC,mBAA5B,CAAgD,CAACM,MAAD,EAASC,KAAT,KAAmB;AACjE,mBAAK2pC,WAAL,CAAiB;AAAE5pC,sBAAF;AAAUC;AAAV,eAAjB;AADF;;AAIA,iBAAKopC,sBAAL,CAA4B1pC,0BAA5B,CAAuD1P,SAAS;AAC9D,mBAAK05C,cAAL,CAAoB;AAAE15C;AAAF,eAApB;AADF;;AAIA,iBAAKo5C,sBAAL,CAA4BzpC,0BAA5B,CAAuD,MAAM;AAC3D,mBAAKiqC,kBAAL;AADF;;AAIA,iBAAKR,sBAAL,CAA4BjpC,cAA5B;AA1CyB;;AA6C3BupC,yBAAexoB,IAAfwoB,EAAqB;AACnB,kBAAM73C,SAAS,IAAIvB,UAAJ,CAAe4wB,KAAKlxB,KAApB,EAA2B6B,MAA1C;;AACA,gBAAIqvB,KAAKrhB,KAALqhB,KAAe5xB,SAAnB,EAA8B;AAC5B,kBAAI,KAAKk6C,kBAAT,EAA6B;AAC3B,qBAAKA,kBAAL,CAAwBK,QAAxB,CAAiCh4C,MAAjC;AADF,qBAEO;AACL,qBAAKo3C,aAAL,CAAmB/4C,IAAnB,CAAwB2B,MAAxB;AAJ0B;AAA9B,mBAMO;AACL,oBAAMi4C,QAAQ,KAAKL,aAAL,CAAmBM,IAAnB,CAAwB,UAAU74B,WAAV,EAAuB;AAC3D,oBAAIA,YAAY84B,MAAZ94B,KAAuBgQ,KAAKrhB,KAAhC,EAAuC;AACrC,yBAAO,KAAP;AAFyD;;AAI3DqR,4BAAY24B,QAAZ34B,CAAqBrf,MAArBqf;;AACA,uBAAO,IAAP;AALY,gBAAd;;AAOA/kB,gCACE29C,KADF39C,EAEE,yEAFFA;AAhBiB;AA7CM;;AAoE3B,cAAI89C,sBAAJ,GAA6B;AAC3B,mBAAO,KAAKT,kBAAL,EAAyBU,OAAzB,IAAoC,CAA3C;AArEyB;;AAwE3BP,sBAAYt5B,GAAZs5B,EAAiB;AACf,gBAAIt5B,IAAIrQ,KAAJqQ,KAAc/gB,SAAlB,EAA6B;AAE3B,oBAAM66C,cAAc,KAAKV,aAAL,CAAmB,CAAnB,CAApB;;AACA,kBAAIU,aAAaprC,UAAjB,EAA6B;AAC3BorC,4BAAYprC,UAAZorC,CAAuB;AAAEpqC,0BAAQsQ,IAAItQ;AAAd,iBAAvBoqC;AAJyB;AAA7B,mBAMO;AACL,oBAAMt5B,aAAa,KAAK24B,kBAAxB;;AACA,kBAAI34B,YAAY9R,UAAhB,EAA4B;AAC1B8R,2BAAW9R,UAAX8R,CAAsB;AAAE9Q,0BAAQsQ,IAAItQ,MAAd;AAAsBC,yBAAOqQ,IAAIrQ;AAAjC,iBAAtB6Q;AAHG;AAPQ;AAxEU;;AAuF3B+4B,+BAAqB;AACnB,gBAAI,KAAKJ,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBhsC,eAAxB;AAFiB;;AAInB,iBAAK0rC,gBAAL,GAAwB,IAAxB;AA3FyB;;AA8F3BkB,6BAAmBzgC,MAAnBygC,EAA2B;AACzB,kBAAMx6C,IAAI,KAAK65C,aAAL,CAAmB39B,OAAnB,CAA2BnC,MAA3B,CAAV;;AACA,gBAAI/Z,KAAK,CAAT,EAAY;AACV,mBAAK65C,aAAL,CAAmB19B,MAAnB,CAA0Bnc,CAA1B,EAA6B,CAA7B;AAHuB;AA9FA;;AAqG3BwgB,0BAAgB;AACdjkB,8BACE,CAAC,KAAKq9C,kBADRr9C,EAEE,+DAFFA;AAIA,kBAAMk+C,eAAe,KAAKpB,aAA1B;AACA,iBAAKA,aAAL,GAAqB,IAArB;AACA,mBAAO,IAAIqB,4BAAJ,CACL,IADK,EAELD,YAFK,EAGL,KAAKnB,gBAHA,EAIL,KAAKC,2BAJA,CAAP;AA5GyB;;AAoH3Bh4B,yBAAetR,KAAfsR,EAAsB9Q,GAAtB8Q,EAA2B;AACzB,gBAAI9Q,OAAO,KAAK4pC,sBAAhB,EAAwC;AACtC,qBAAO,IAAP;AAFuB;;AAIzB,kBAAMtgC,SAAS,IAAI4gC,iCAAJ,CAAsC,IAAtC,EAA4C1qC,KAA5C,EAAmDQ,GAAnD,CAAf;;AACA,iBAAK+oC,sBAAL,CAA4BhpC,gBAA5B,CAA6CP,KAA7C,EAAoDQ,GAApD;;AACA,iBAAKopC,aAAL,CAAmBv5C,IAAnB,CAAwByZ,MAAxB;;AACA,mBAAOA,MAAP;AA3HyB;;AA8H3BuG,4BAAkBlX,MAAlBkX,EAA0B;AACxB,gBAAI,KAAKs5B,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBh/B,MAAxB,CAA+BxR,MAA/B;AAFsB;;AAIxB,uBAAW2Q,MAAX,IAAqB,KAAK8/B,aAAL,CAAmBj2C,KAAnB,CAAyB,CAAzB,CAArB,EAAkD;AAChDmW,qBAAOa,MAAPb,CAAc3Q,MAAd2Q;AALsB;;AAOxB,iBAAKy/B,sBAAL,CAA4B9oC,KAA5B;AArIyB;;AAAA;;;;AA0I7B,cAAMgqC,4BAAN,CAAmC;AACjC97C,sBACEm3C,MADFn3C,EAEE67C,YAFF77C,EAKE;AAAA,gBAFAgP,eAEA,uEAFkB,KAElB;AAAA,gBADAC,0BACA,uEAD6B,IAC7B;AACA,iBAAK+sC,OAAL,GAAe7E,MAAf;AACA,iBAAK8E,KAAL,GAAajtC,mBAAmB,KAAhC;AACA,iBAAKktC,SAAL,GAAiB7xB,8BAAUpb,0BAAVob,IACbpb,0BADaob,GAEb,IAFJ;AAGA,iBAAKowB,aAAL,GAAqBoB,gBAAgB,EAArC;AACA,iBAAKH,OAAL,GAAe,CAAf;;AACA,uBAAWl6C,KAAX,IAAoB,KAAKi5C,aAAzB,EAAwC;AACtC,mBAAKiB,OAAL,IAAgBl6C,MAAMU,UAAtB;AATF;;AAWA,iBAAKi6C,SAAL,GAAiB,EAAjB;AACA,iBAAKC,aAAL,GAAqB/xC,QAAQC,OAARD,EAArB;AACA8sC,mBAAO6D,kBAAP7D,GAA4B,IAA5BA;AAEA,iBAAK5mC,UAAL,GAAkB,IAAlB;AArB+B;;AAwBjC8qC,mBAAS75C,KAAT65C,EAAgB;AACd,gBAAI,KAAKY,KAAT,EAAgB;AACd;AAFY;;AAId,gBAAI,KAAKE,SAAL,CAAer9C,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,oBAAMu9C,oBAAoB,KAAKF,SAAL,CAAersB,KAAf,EAA1B;;AACAusB,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAA1BghC;AAFF,mBAGO;AACL,mBAAK5B,aAAL,CAAmB/4C,IAAnB,CAAwBF,KAAxB;AARY;;AAUd,iBAAKk6C,OAAL,IAAgBl6C,MAAMU,UAAtB;AAlC+B;;AAqCjC,cAAIogB,YAAJ,GAAmB;AACjB,mBAAO,KAAK85B,aAAZ;AAtC+B;;AAyCjC,cAAIl4B,QAAJ,GAAe;AACb,mBAAO,KAAKg4B,SAAZ;AA1C+B;;AA6CjC,cAAI15B,gBAAJ,GAAuB;AACrB,mBAAO,KAAKw5B,OAAL,CAAalB,iBAApB;AA9C+B;;AAiDjC,cAAIv4B,oBAAJ,GAA2B;AACzB,mBAAO,KAAKy5B,OAAL,CAAanB,qBAApB;AAlD+B;;AAqDjC,cAAIp4B,aAAJ,GAAoB;AAClB,mBAAO,KAAKu5B,OAAL,CAAajB,cAApB;AAtD+B;;AAyDjC,gBAAM3/B,IAAN,GAAa;AACX,gBAAI,KAAKq/B,aAAL,CAAmB37C,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,oBAAM0C,QAAQ,KAAKi5C,aAAL,CAAmB3qB,KAAnB,EAAd;;AACA,qBAAO;AAAExwB,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAAP;AAHS;;AAKX,gBAAI,KAAK4gC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AANS;;AAQX,kBAAMghC,oBAAoBryC,oCAA1B;;AACA,iBAAKmyC,SAAL,CAAez6C,IAAf,CAAoB26C,iBAApB;;AACA,mBAAOA,kBAAkBjyC,OAAzB;AAnE+B;;AAsEjC4R,iBAAOxR,MAAPwR,EAAe;AACb,iBAAKigC,KAAL,GAAa,IAAb;;AACA,uBAAWI,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAHW;;AAKb,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;AA3E+B;;AA8EjCkQ,4BAAkB;AAChB,gBAAI,KAAKitC,KAAT,EAAgB;AACd;AAFc;;AAIhB,iBAAKA,KAAL,GAAa,IAAb;AAlF+B;;AAAA;;AAuFnC,cAAMF,iCAAN,CAAwC;AACtC/7C,sBAAYm3C,MAAZn3C,EAAoBqR,KAApBrR,EAA2B6R,GAA3B7R,EAAgC;AAC9B,iBAAKg8C,OAAL,GAAe7E,MAAf;AACA,iBAAKqE,MAAL,GAAcnqC,KAAd;AACA,iBAAKirC,IAAL,GAAYzqC,GAAZ;AACA,iBAAK0qC,YAAL,GAAoB,IAApB;AACA,iBAAKJ,SAAL,GAAiB,EAAjB;AACA,iBAAKF,KAAL,GAAa,KAAb;AAEA,iBAAK1rC,UAAL,GAAkB,IAAlB;AAToC;;AAYtC8qC,mBAAS75C,KAAT65C,EAAgB;AACd,gBAAI,KAAKY,KAAT,EAAgB;AACd;AAFY;;AAId,gBAAI,KAAKE,SAAL,CAAer9C,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,mBAAKy9C,YAAL,GAAoB/6C,KAApB;AADF,mBAEO;AACL,oBAAMg7C,qBAAqB,KAAKL,SAAL,CAAersB,KAAf,EAA3B;;AACA0sB,iCAAmBlyC,OAAnBkyC,CAA2B;AAAEl9C,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAA3BmhC;;AACA,yBAAWH,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,kCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,yBAAOwB,SAAT;AAAoBua,wBAAM;AAA1B,iBAA1BghC;AAJG;;AAML,mBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;AAZY;;AAcd,iBAAKm9C,KAAL,GAAa,IAAb;;AACA,iBAAKD,OAAL,CAAaJ,kBAAb,CAAgC,IAAhC;AA3BoC;;AA8BtC,cAAIr5B,oBAAJ,GAA2B;AACzB,mBAAO,KAAP;AA/BoC;;AAkCtC,gBAAMnH,IAAN,GAAa;AACX,gBAAI,KAAKmhC,YAAT,EAAuB;AACrB,oBAAM/6C,QAAQ,KAAK+6C,YAAnB;AACA,mBAAKA,YAAL,GAAoB,IAApB;AACA,qBAAO;AAAEj9C,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAAP;AAJS;;AAMX,gBAAI,KAAK4gC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AAPS;;AASX,kBAAMghC,oBAAoBryC,oCAA1B;;AACA,iBAAKmyC,SAAL,CAAez6C,IAAf,CAAoB26C,iBAApB;;AACA,mBAAOA,kBAAkBjyC,OAAzB;AA7CoC;;AAgDtC4R,iBAAOxR,MAAPwR,EAAe;AACb,iBAAKigC,KAAL,GAAa,IAAb;;AACA,uBAAWI,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAHW;;AAKb,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;;AACA,iBAAKk9C,OAAL,CAAaJ,kBAAb,CAAgC,IAAhC;AAtDoC;;AAAA;;;;;;;;;;;;;ACrOxC,cAAM5gC,OAAN,CAAc;AAUZ,iBAAOJ,WAAP,CAAmBG,GAAnB,EAAwB;AACtB,kBAAMF,QAAQ,EAAd;AACA,kBAAM4hC,SAAS;AACb5hC,mBADa;AAEbU,sBAAQhc,OAAOwD,MAAPxD,CAAc,IAAdA;AAFK,aAAf;;AAIA,qBAASm9C,IAAT,CAAcC,IAAd,EAAoB;AAClB,kBAAI,CAACA,IAAL,EAAW;AACT;AAFgB;;AAIlB,kBAAI96C,MAAM,IAAV;AACA,oBAAM9B,OAAO48C,KAAK58C,IAAlB;;AACA,kBAAIA,SAAS,OAAb,EAAsB;AACpB8B,sBAAM86C,KAAKr9C,KAAXuC;AADF,qBAEO,IAAI,CAACmZ,QAAQ4hC,eAAR5hC,CAAwBjb,IAAxBib,CAAL,EAAoC;AACzC;AADK,qBAEA,IAAI2hC,MAAMvvB,UAANuvB,EAAkB/hC,WAAtB,EAAmC;AACxC/Y,sBAAM86C,KAAKvvB,UAALuvB,CAAgB/hC,WAAtB/Y;AADK,qBAEA,IAAI86C,KAAKr9C,KAAT,EAAgB;AACrBuC,sBAAM86C,KAAKr9C,KAAXuC;AAbgB;;AAelB,kBAAIA,QAAQ,IAAZ,EAAkB;AAChBgZ,sBAAMnZ,IAANmZ,CAAW;AACThZ;AADS,iBAAXgZ;AAhBgB;;AAoBlB,kBAAI,CAAC8hC,KAAKplC,QAAV,EAAoB;AAClB;AArBgB;;AAuBlB,yBAAWslC,KAAX,IAAoBF,KAAKplC,QAAzB,EAAmC;AACjCmlC,qBAAKG,KAALH;AAxBgB;AANE;;AAiCtBA,iBAAK3hC,GAAL2hC;AACA,mBAAOD,MAAP;AA5CU;;AAqDZ,iBAAOG,eAAP,CAAuB78C,IAAvB,EAA6B;AAC3B,mBAAO,EACLA,SAAS,UAATA,IACAA,SAAS,OADTA,IAEAA,SAAS,QAFTA,IAGAA,SAAS,QAJJ,CAAP;AAtDU;;AAAA;;;;;;;;;;;;;;ACKd;;AAUA;;AAKA;;AACA;;AACA;;AAEA,cAAM+8C,oBAAoB,IAA1B;AACA,cAAMC,uBAAuB,IAAIh4B,OAAJ,EAA7B;;AAEA,iBAASi4B,WAAT,CAAqB/2C,IAArB,EAA2B;AACzB,iBAAO;AACLohB,mBAAOphB,KAAK,CAALA,IAAUA,KAAK,CAALA,CADZ;AAELqhB,oBAAQrhB,KAAK,CAALA,IAAUA,KAAK,CAALA;AAFb,WAAP;AA3CF;;AAoEA,cAAMg3C,wBAAN,CAA+B;AAK7B,iBAAOl6C,MAAP,CAAcm6C,UAAd,EAA0B;AACxB,kBAAMpc,UAAUoc,WAAW56C,IAAX46C,CAAgBC,cAAhC;;AAEA,oBAAQrc,OAAR;AACE,mBAAKrzC,qBAAeE,IAApB;AACE,uBAAO,IAAIyvD,qBAAJ,CAA0BF,UAA1B,CAAP;;AAEF,mBAAKzvD,qBAAeC,IAApB;AACE,uBAAO,IAAI2vD,qBAAJ,CAA0BH,UAA1B,CAAP;;AAEF,mBAAKzvD,qBAAeoB,MAApB;AACE,sBAAMyuD,YAAYJ,WAAW56C,IAAX46C,CAAgBI,SAAlC;;AAEA,wBAAQA,SAAR;AACE,uBAAK,IAAL;AACE,2BAAO,IAAIC,2BAAJ,CAAgCL,UAAhC,CAAP;;AACF,uBAAK,KAAL;AACE,wBAAIA,WAAW56C,IAAX46C,CAAgBM,WAApB,EAAiC;AAC/B,6BAAO,IAAIC,kCAAJ,CAAuCP,UAAvC,CAAP;AADF,2BAEO,IAAIA,WAAW56C,IAAX46C,CAAgBQ,QAApB,EAA8B;AACnC,6BAAO,IAAIC,+BAAJ,CAAoCT,UAApC,CAAP;AAJJ;;AAME,2BAAO,IAAIU,iCAAJ,CAAsCV,UAAtC,CAAP;;AACF,uBAAK,IAAL;AACE,2BAAO,IAAIW,6BAAJ,CAAkCX,UAAlC,CAAP;AAXJ;;AAaA,uBAAO,IAAIY,uBAAJ,CAA4BZ,UAA5B,CAAP;;AAEF,mBAAKzvD,qBAAegB,KAApB;AACE,uBAAO,IAAIsvD,sBAAJ,CAA2Bb,UAA3B,CAAP;;AAEF,mBAAKzvD,qBAAeG,QAApB;AACE,uBAAO,IAAIowD,yBAAJ,CAA8Bd,UAA9B,CAAP;;AAEF,mBAAKzvD,qBAAeI,IAApB;AACE,uBAAO,IAAIowD,qBAAJ,CAA0Bf,UAA1B,CAAP;;AAEF,mBAAKzvD,qBAAeK,MAApB;AACE,uBAAO,IAAIowD,uBAAJ,CAA4BhB,UAA5B,CAAP;;AAEF,mBAAKzvD,qBAAeM,MAApB;AACE,uBAAO,IAAIowD,uBAAJ,CAA4BjB,UAA5B,CAAP;;AAEF,mBAAKzvD,qBAAeQ,QAApB;AACE,uBAAO,IAAImwD,yBAAJ,CAA8BlB,UAA9B,CAAP;;AAEF,mBAAKzvD,qBAAec,KAApB;AACE,uBAAO,IAAI8vD,sBAAJ,CAA2BnB,UAA3B,CAAP;;AAEF,mBAAKzvD,qBAAee,GAApB;AACE,uBAAO,IAAI8vD,oBAAJ,CAAyBpB,UAAzB,CAAP;;AAEF,mBAAKzvD,qBAAeO,OAApB;AACE,uBAAO,IAAIuwD,wBAAJ,CAA6BrB,UAA7B,CAAP;;AAEF,mBAAKzvD,qBAAeS,SAApB;AACE,uBAAO,IAAIswD,0BAAJ,CAA+BtB,UAA/B,CAAP;;AAEF,mBAAKzvD,qBAAeU,SAApB;AACE,uBAAO,IAAIswD,0BAAJ,CAA+BvB,UAA/B,CAAP;;AAEF,mBAAKzvD,qBAAeW,QAApB;AACE,uBAAO,IAAIswD,yBAAJ,CAA8BxB,UAA9B,CAAP;;AAEF,mBAAKzvD,qBAAeY,SAApB;AACE,uBAAO,IAAIswD,0BAAJ,CAA+BzB,UAA/B,CAAP;;AAEF,mBAAKzvD,qBAAea,KAApB;AACE,uBAAO,IAAIswD,sBAAJ,CAA2B1B,UAA3B,CAAP;;AAEF,mBAAKzvD,qBAAeiB,cAApB;AACE,uBAAO,IAAImwD,+BAAJ,CAAoC3B,UAApC,CAAP;;AAEF;AACE,uBAAO,IAAI4B,iBAAJ,CAAsB5B,UAAtB,CAAP;AAvEJ;AAR2B;;AAAA;;AAoF/B,cAAM4B,iBAAN,CAAwB;AACtB9+C,sBACEk9C,UADFl9C,EAOE;AAAA,gBALA;AACE++C,6BAAe,KADjB;AAEEC,6BAAe,KAFjB;AAGEC,qCAAuB;AAHzB,aAKA,uEADI,EACJ;AACA,iBAAKF,YAAL,GAAoBA,YAApB;AACA,iBAAKz8C,IAAL,GAAY46C,WAAW56C,IAAvB;AACA,iBAAK48C,KAAL,GAAahC,WAAWgC,KAAxB;AACA,iBAAK99B,IAAL,GAAY87B,WAAW97B,IAAvB;AACA,iBAAK1J,QAAL,GAAgBwlC,WAAWxlC,QAA3B;AACA,iBAAKynC,WAAL,GAAmBjC,WAAWiC,WAA9B;AACA,iBAAKC,eAAL,GAAuBlC,WAAWkC,eAAlC;AACA,iBAAKC,kBAAL,GAA0BnC,WAAWmC,kBAArC;AACA,iBAAKC,WAAL,GAAmBpC,WAAWoC,WAA9B;AACA,iBAAKC,UAAL,GAAkBrC,WAAWqC,UAA7B;AACA,iBAAKhtC,iBAAL,GAAyB2qC,WAAW3qC,iBAApC;AACA,iBAAKitC,eAAL,GAAuBtC,WAAWsC,eAAlC;AACA,iBAAK5qC,YAAL,GAAoBsoC,WAAWtoC,YAA/B;AACA,iBAAK6qC,aAAL,GAAqBvC,WAAWwC,YAAhC;AACA,iBAAKC,WAAL,GAAmBzC,WAAW0C,UAA9B;;AAEA,gBAAIb,YAAJ,EAAkB;AAChB,mBAAKc,SAAL,GAAiB,KAAKC,gBAAL,CAAsBd,YAAtB,CAAjB;AAlBF;;AAoBA,gBAAIC,oBAAJ,EAA0B;AACxB,mBAAKc,cAAL,GAAsB,KAAKC,qBAAL,CAA2BhB,YAA3B,CAAtB;AArBF;AARoB;;AAyCtBc,6BAAuC;AAAA,gBAAtBd,YAAsB,uEAAP,KAAO;AACrC,kBAAM18C,OAAO,KAAKA,IAAlB;AAAA,kBACE8e,OAAO,KAAKA,IADd;AAAA,kBAEE1J,WAAW,KAAKA,QAFlB;AAGA,kBAAMmoC,YAAYjyC,SAAS2Z,aAAT3Z,CAAuB,SAAvBA,CAAlB;AACA,gBAAI;AAAEyZ,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAAxB;AAEA6C,sBAAUlyB,YAAVkyB,CAAuB,oBAAvBA,EAA6Cv9C,KAAK4Q,EAAlD2sC;;AAIA,kBAAM55C,OAAOlC,WAAKiC,aAALjC,CAAmB,CAC9BzB,KAAK2D,IAAL3D,CAAU,CAAVA,CAD8B,EAE9B8e,KAAKnL,IAALmL,CAAU,CAAVA,IAAe9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAAf8e,GAA8BA,KAAKnL,IAALmL,CAAU,CAAVA,CAFA,EAG9B9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAH8B,EAI9B8e,KAAKnL,IAALmL,CAAU,CAAVA,IAAe9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAAf8e,GAA8BA,KAAKnL,IAALmL,CAAU,CAAVA,CAJA,CAAnBrd,CAAb;;AAOA,gBAAIzB,KAAKurC,YAAT,EAAuB;AACrB,oBAAMz3C,YAAYshB,SAASthB,SAATshB,CAAmB1S,KAAnB0S,EAAlB;;AACA,oBAAM,CAAC81B,MAAD,EAASC,MAAT,IAAmB1pC,WAAKwB,6BAALxB,CAAmC3N,SAAnC2N,CAAzB;;AACAsjB,sBAAQ/lB,KAAKkgC,IAALlgC,CAAU+lB,QAAQmmB,MAAlBlsC,CAAR+lB;AACAC,uBAAShmB,KAAKkgC,IAALlgC,CAAUgmB,SAASmmB,MAAnBnsC,CAATgmB;AACArhB,mBAAK,CAALA,KAAWunC,MAAXvnC;AACAA,mBAAK,CAALA,KAAWwnC,MAAXxnC;;AAKA,mBAAK,IAAI7E,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1BhL,0BAAUgL,CAAVhL,IAAekL,KAAK2+C,IAAL3+C,CAAUlL,UAAUgL,CAAVhL,CAAVkL,CAAflL;AAZmB;;AAcrBypD,wBAAUxyB,KAAVwyB,CAAgBzpD,SAAhBypD,GAA6B,UAASzpD,UAAUuL,IAAVvL,CAAe,GAAfA,CAAoB,GAA1DypD;AAdF,mBAeO;AACLA,wBAAUxyB,KAAVwyB,CAAgBzpD,SAAhBypD,GAA6B,UAASnoC,SAASthB,SAATshB,CAAmB/V,IAAnB+V,CAAwB,GAAxBA,CAA6B,GAAnEmoC;AAlCmC;;AAqCrCA,sBAAUxyB,KAAVwyB,CAAgBK,eAAhBL,GAAkC,GAAG,CAAC55C,KAAK,CAALA,CAAQ,MAAK,CAACA,KAAK,CAALA,CAAQ,IAA5D45C;;AAEA,gBAAI,CAACb,YAAD,IAAiB18C,KAAK69C,WAAL79C,CAAiB+kB,KAAjB/kB,GAAyB,CAA9C,EAAiD;AAC/Cu9C,wBAAUxyB,KAAVwyB,CAAgBO,WAAhBP,GAA8B,GAAGv9C,KAAK69C,WAAL79C,CAAiB+kB,KAAM,IAAxDw4B;;AACA,kBAAIv9C,KAAK69C,WAAL79C,CAAiB+qB,KAAjB/qB,KAA2BxQ,gCAA0B3D,SAAzD,EAAoE;AAIlEk5B,yBAAS,IAAI/kB,KAAK69C,WAAL79C,CAAiB+kB,KAA9BA;AACAC,0BAAU,IAAIhlB,KAAK69C,WAAL79C,CAAiB+kB,KAA/BC;AAP6C;;AAU/C,oBAAM+4B,mBAAmB/9C,KAAK69C,WAAL79C,CAAiBg+C,sBAA1C;AACA,oBAAMC,iBAAiBj+C,KAAK69C,WAAL79C,CAAiBk+C,oBAAxC;;AACA,kBAAIH,mBAAmB,CAAnBA,IAAwBE,iBAAiB,CAA7C,EAAgD;AAC9C,sBAAME,SAAS,GAAGJ,gBAAiB,QAAOE,cAAe,IAAzD;AACAV,0BAAUxyB,KAAVwyB,CAAgBa,YAAhBb,GAA+BY,MAA/BZ;AAd6C;;AAiB/C,sBAAQv9C,KAAK69C,WAAL79C,CAAiB+qB,KAAzB;AACE,qBAAKv7B,gCAA0BC,KAA/B;AACE8tD,4BAAUxyB,KAAVwyB,CAAgBM,WAAhBN,GAA8B,OAA9BA;AACA;;AAEF,qBAAK/tD,gCAA0BE,MAA/B;AACE6tD,4BAAUxyB,KAAVwyB,CAAgBM,WAAhBN,GAA8B,QAA9BA;AACA;;AAEF,qBAAK/tD,gCAA0BG,OAA/B;AACEuL,kCAAK,qCAALA;AACA;;AAEF,qBAAK1L,gCAA0BI,KAA/B;AACEsL,kCAAK,mCAALA;AACA;;AAEF,qBAAK1L,gCAA0B3D,SAA/B;AACE0xD,4BAAUxyB,KAAVwyB,CAAgBc,iBAAhBd,GAAoC,OAApCA;AACA;;AAEF;AACE;AAtBJ;;AAyBA,oBAAMe,cAAct+C,KAAKs+C,WAALt+C,IAAoBA,KAAK6pC,KAAzB7pC,IAAkC,IAAtD;;AACA,kBAAIs+C,WAAJ,EAAiB;AACff,0BAAUxyB,KAAVwyB,CAAgBe,WAAhBf,GAA8B97C,WAAKC,YAALD,CAC5BzB,KAAK6pC,KAAL7pC,CAAW,CAAXA,IAAgB,CADYyB,EAE5BzB,KAAK6pC,KAAL7pC,CAAW,CAAXA,IAAgB,CAFYyB,EAG5BzB,KAAK6pC,KAAL7pC,CAAW,CAAXA,IAAgB,CAHYyB,CAA9B87C;AADF,qBAMO;AAELA,0BAAUxyB,KAAVwyB,CAAgBO,WAAhBP,GAA8B,CAA9BA;AAnD6C;AAvCZ;;AA8FrCA,sBAAUxyB,KAAVwyB,CAAgBruB,IAAhBquB,GAAuB,GAAG55C,KAAK,CAALA,CAAQ,IAAlC45C;AACAA,sBAAUxyB,KAAVwyB,CAAgBtuB,GAAhBsuB,GAAsB,GAAG55C,KAAK,CAALA,CAAQ,IAAjC45C;;AAEA,gBAAIv9C,KAAKurC,YAAT,EAAuB;AACrBgS,wBAAUxyB,KAAVwyB,CAAgBx4B,KAAhBw4B,GAAwBA,UAAUxyB,KAAVwyB,CAAgBv4B,MAAhBu4B,GAAyB,MAAjDA;AADF,mBAEO;AACLA,wBAAUxyB,KAAVwyB,CAAgBx4B,KAAhBw4B,GAAwB,GAAGx4B,KAAM,IAAjCw4B;AACAA,wBAAUxyB,KAAVwyB,CAAgBv4B,MAAhBu4B,GAAyB,GAAGv4B,MAAO,IAAnCu4B;AArGmC;;AAuGrC,mBAAOA,SAAP;AAhJoB;;AA2JtBG,kCAA4C;AAAA,gBAAtBhB,YAAsB,uEAAP,KAAO;;AAC1C,gBAAI,CAAC,KAAK18C,IAAL,CAAUu+C,UAAf,EAA2B;AACzB,qBAAO,IAAP;AAFwC;;AAK1C,kBAAMd,iBAAiB,EAAvB;AACA,kBAAMe,YAAY,KAAKx+C,IAAL,CAAU2D,IAA5B;;AACA,uBAAW86C,SAAX,IAAwB,KAAKz+C,IAAL,CAAUu+C,UAAlC,EAA8C;AAC5C,mBAAKv+C,IAAL,CAAU2D,IAAV,GAAiB,CACf86C,UAAU,CAAVA,EAAan3B,CADE,EAEfm3B,UAAU,CAAVA,EAAal3B,CAFE,EAGfk3B,UAAU,CAAVA,EAAan3B,CAHE,EAIfm3B,UAAU,CAAVA,EAAal3B,CAJE,CAAjB;AAMAk2B,6BAAer+C,IAAfq+C,CAAoB,KAAKD,gBAAL,CAAsBd,YAAtB,CAApBe;AAdwC;;AAgB1C,iBAAKz9C,IAAL,CAAU2D,IAAV,GAAiB66C,SAAjB;AACA,mBAAOf,cAAP;AA5KoB;;AAyLtBiB,uBAAaC,OAAbD,EAAsB1+C,IAAtB0+C,EAA4B;AAC1B,gBAAInB,YAAY,KAAKA,SAArB;;AACA,gBAAI,KAAKE,cAAT,EAAyB;AACvBkB,wBAAUA,WAAW,KAAKlB,cAA1BkB;AACApB,0BAAY,KAAKE,cAAL,CAAoB,CAApB,CAAZF;AAJwB;;AAQ1B,gBAAI,CAACoB,OAAL,EAAc;AACZA,wBAAUrzC,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAVqzC;AACAA,sBAAQ5zB,KAAR4zB,CAAc35B,MAAd25B,GAAuBpB,UAAUxyB,KAAVwyB,CAAgBv4B,MAAvC25B;AACAA,sBAAQ5zB,KAAR4zB,CAAc55B,KAAd45B,GAAsBpB,UAAUxyB,KAAVwyB,CAAgBx4B,KAAtC45B;AACApB,wBAAU5zB,WAAV4zB,CAAsBoB,OAAtBpB;AAZwB;;AAe1B,kBAAMqB,eAAe,IAAIC,YAAJ,CAAiB;AACpCtB,uBADoC;AAEpCoB,qBAFoC;AAGpC9U,qBAAO7pC,KAAK6pC,KAHwB;AAIpCj1B,wBAAU5U,KAAK4U,QAJqB;AAKpCkqC,gCAAkB9+C,KAAK8+C,gBALa;AAMpCjqC,2BAAa7U,KAAK6U,WANkB;AAOpCkqC,wBAAU/+C,KAAK++C,QAPqB;AAQpCC,2BAAa;AARuB,aAAjB,CAArB;AAUA,kBAAMC,QAAQL,aAAa1pC,MAAb0pC,EAAd;AAGAK,kBAAMl0B,KAANk0B,CAAY/vB,IAAZ+vB,GAAmB1B,UAAUxyB,KAAVwyB,CAAgBx4B,KAAnCk6B;AAEA1B,sBAAU5zB,WAAV4zB,CAAsB0B,KAAtB1B;AAvNoB;;AAkOtB2B,gCAAsBC,SAAtBD,EAAiC;AAQ/B,uBAAWE,aAAX,IAA4B,KAAK3B,cAAjC,EAAiD;AAC/C2B,4BAAcD,SAAdC,GAA0BD,SAA1BC;AAT6B;;AAW/B,mBAAO,KAAK3B,cAAZ;AA7OoB;;AAuPtBvoC,mBAAS;AACP/Z,mCAAY,mDAAZA;AAxPoB;;AA+PtBkkD,6BAAmB5hD,IAAnB4hD,EAAwC;AAAA,gBAAfC,MAAe,uEAAN,IAAM;AACtC,kBAAMC,SAAS,EAAf;;AAEA,gBAAI,KAAKpC,aAAT,EAAwB;AACtB,oBAAMqC,WAAW,KAAKrC,aAAL,CAAmB1/C,IAAnB,CAAjB;;AACA,kBAAI+hD,QAAJ,EAAc;AACZ,2BAAW;AAAE1gC,sBAAF;AAAQlO,oBAAR;AAAY6uC;AAAZ,iBAAX,IAAyCD,QAAzC,EAAmD;AACjD,sBAAI1gC,SAAS,CAAC,CAAd,EAAiB;AACf;AAF+C;;AAIjD,sBAAIlO,OAAO0uC,MAAX,EAAmB;AACjB;AAL+C;;AAOjD,wBAAMI,cACJ,OAAOD,YAAP,KAAwB,QAAxB,GAAmCA,YAAnC,GAAkD,IADpD;AAGA,wBAAME,aAAar0C,SAASs0C,cAATt0C,CAAwBsF,EAAxBtF,CAAnB;;AACA,sBAAIq0C,cAAc,CAAClF,qBAAqBz+B,GAArBy+B,CAAyBkF,UAAzBlF,CAAnB,EAAyD;AACvDv/C,oCAAM,6CAA4C0V,EAA7C,EAAL1V;AACA;AAb+C;;AAejDqkD,yBAAOngD,IAAPmgD,CAAY;AAAE3uC,sBAAF;AAAM8uC,+BAAN;AAAmBC;AAAnB,mBAAZJ;AAhBU;AAFQ;;AAqBtB,qBAAOA,MAAP;AAxBoC;;AA4BtC,uBAAWI,UAAX,IAAyBr0C,SAASu0C,iBAATv0C,CAA2B7N,IAA3B6N,CAAzB,EAA2D;AACzD,oBAAM;AAAEsF,kBAAF;AAAM8uC;AAAN,kBAAsBC,UAA5B;;AACA,kBAAI/uC,OAAO0uC,MAAX,EAAmB;AACjB;AAHuD;;AAKzD,kBAAI,CAAC7E,qBAAqBz+B,GAArBy+B,CAAyBkF,UAAzBlF,CAAL,EAA2C;AACzC;AANuD;;AAQzD8E,qBAAOngD,IAAPmgD,CAAY;AAAE3uC,kBAAF;AAAM8uC,2BAAN;AAAmBC;AAAnB,eAAZJ;AApCoC;;AAsCtC,mBAAOA,MAAP;AArSoB;;AAwStB,qBAAWO,QAAX,GAAsB;AACpB,kBAAMA,WAAW,OAAO1yB,SAAP,KAAqB,WAArB,GAAmCA,UAAU0yB,QAA7C,GAAwD,EAAzE;AAEA,mBAAOjjD,kBAAO,IAAPA,EAAa,UAAbA,EAAyB;AAC9BkjD,qBAAOD,SAASn3B,QAATm3B,CAAkB,KAAlBA,CADuB;AAE9BE,qBAAOF,SAASn3B,QAATm3B,CAAkB,KAAlBA;AAFuB,aAAzBjjD,CAAP;AA3SoB;;AAAA;;AAkTxB,cAAMi+C,qBAAN,SAAoC0B,iBAApC,CAAsD;AACpD9+C,sBAAYk9C,UAAZl9C,EAAwC;AAAA,gBAAhBvB,OAAgB,uEAAN,IAAM;AACtC,kBAAMsgD,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB5+C,GAAhB4+C,IACAA,WAAW56C,IAAX46C,CAAgBtf,IADhBsf,IAEAA,WAAW56C,IAAX46C,CAAgB7F,MAFhB6F,IAGAA,WAAW56C,IAAX46C,CAAgBqF,aAHhBrF,IAIAA,WAAW56C,IAAX46C,CAAgBsF,SAJhBtF,IAKCA,WAAW56C,IAAX46C,CAAgBuF,OAAhBvF,KACEA,WAAW56C,IAAX46C,CAAgBuF,OAAhBvF,CAAwBwF,MAAxBxF,IACCA,WAAW56C,IAAX46C,CAAgBuF,OAAhBvF,CAAwB,UAAxBA,CADDA,IAECA,WAAW56C,IAAX46C,CAAgBuF,OAAhBvF,CAAwB,YAAxBA,CAHHA,CANmB,CAAtB;AAWA,kBAAMA,UAAN,EAAkB;AAChB6B,0BADgB;AAEhBC,4BAAc,CAAC,CAACvgD,SAASugD,YAFT;AAGhBC,oCAAsB;AAHN,aAAlB;AAbkD;;AAoBpDznC,mBAAS;AACP,kBAAM;AAAElV,kBAAF;AAAQ68C;AAAR,gBAAwB,IAA9B;AACA,kBAAMwD,OAAO/0C,SAAS2Z,aAAT3Z,CAAuB,GAAvBA,CAAb;;AAEA,gBAAItL,KAAKhE,GAAT,EAAc;AACZ,kBAEE,CAAC6gD,YAAYyD,iBAFf,EAGE;AACAplD,gCACE,kGADFA;AALU;;AASZ2hD,0BAAYyD,iBAAZzD,GAAgCwD,IAAhCxD,EAAsC78C,KAAKhE,GAA3C6gD,EAAgD78C,KAAKugD,SAArD1D;AATF,mBAUO,IAAI78C,KAAK+0C,MAAT,EAAiB;AACtB,mBAAKyL,gBAAL,CAAsBH,IAAtB,EAA4BrgD,KAAK+0C,MAAjC;AADK,mBAEA,IAAI/0C,KAAKs7B,IAAT,EAAe;AACpB,mBAAKmlB,SAAL,CAAeJ,IAAf,EAAqBrgD,KAAKs7B,IAA1B;AADK,mBAEA;AACL,kBAAIolB,iBAAiB,KAArB;;AACA,kBACE1gD,KAAKmgD,OAALngD,KACCA,KAAKmgD,OAALngD,CAAaogD,MAAbpgD,IACCA,KAAKmgD,OAALngD,CAAa,UAAbA,CADDA,IAECA,KAAKmgD,OAALngD,CAAa,YAAbA,CAHFA,KAIA,KAAKk9C,eAJLl9C,IAKA,KAAKsS,YANP,EAOE;AACAouC,iCAAiB,IAAjBA;;AACA,qBAAKC,aAAL,CAAmBN,IAAnB,EAAyBrgD,IAAzB;AAXG;;AAcL,kBAAIA,KAAKkgD,SAAT,EAAoB;AAClB,qBAAKU,oBAAL,CAA0BP,IAA1B,EAAgCrgD,KAAKkgD,SAArC;AADF,qBAEO,IAAI,CAACQ,cAAL,EAAqB;AAC1B,qBAAKD,SAAL,CAAeJ,IAAf,EAAqB,EAArB;AAjBG;AAlBA;;AAuCP,gBAAI,KAAK5C,cAAT,EAAyB;AACvB,qBAAO,KAAKyB,qBAAL,CAA2B,gBAA3B,EAA6C1+C,GAA7C,CACL,CAAC4+C,aAAD,EAAgByB,KAAhB,KAA0B;AACxB,sBAAMC,cAAcD,UAAU,CAAVA,GAAcR,IAAdQ,GAAqBR,KAAKU,SAALV,EAAzC;AACAjB,8BAAcz1B,WAAdy1B,CAA0B0B,WAA1B1B;AACA,uBAAOA,aAAP;AAJG,gBAAP;AAxCK;;AAiDP,iBAAK7B,SAAL,CAAe4B,SAAf,GAA2B,gBAA3B;AACA,iBAAK5B,SAAL,CAAe5zB,WAAf,CAA2B02B,IAA3B;AACA,mBAAO,KAAK9C,SAAZ;AAvEkD;;AAkFpDkD,oBAAUJ,IAAVI,EAAgBO,WAAhBP,EAA6B;AAC3BJ,iBAAKl2C,IAALk2C,GAAY,KAAKxD,WAAL,CAAiBoE,kBAAjB,CAAoCD,WAApC,CAAZX;;AACAA,iBAAKa,OAALb,GAAe,MAAM;AACnB,kBAAIW,WAAJ,EAAiB;AACf,qBAAKnE,WAAL,CAAiBsE,eAAjB,CAAiCH,WAAjC;AAFiB;;AAInB,qBAAO,KAAP;AAJF;;AAMA,gBAAIA,eAAeA,gBAAsC,EAAzD,EAA6D;AAC3DX,mBAAKlB,SAALkB,GAAiB,cAAjBA;AATyB;AAlFuB;;AAuGpDG,2BAAiBH,IAAjBG,EAAuBzL,MAAvByL,EAA+B;AAC7BH,iBAAKl2C,IAALk2C,GAAY,KAAKxD,WAAL,CAAiBuE,YAAjB,CAA8B,EAA9B,CAAZf;;AACAA,iBAAKa,OAALb,GAAe,MAAM;AACnB,mBAAKxD,WAAL,CAAiBwE,kBAAjB,CAAoCtM,MAApC;AACA,qBAAO,KAAP;AAFF;;AAIAsL,iBAAKlB,SAALkB,GAAiB,cAAjBA;AA7GkD;;AAwHpDM,wBAAcN,IAAdM,EAAoB3gD,IAApB2gD,EAA0B;AACxBN,iBAAKl2C,IAALk2C,GAAY,KAAKxD,WAAL,CAAiBuE,YAAjB,CAA8B,EAA9B,CAAZf;AACA,kBAAM7/C,MAAM,IAAI+S,GAAJ,CAAQ,CAClB,CAAC,QAAD,EAAW,SAAX,CADkB,EAElB,CAAC,UAAD,EAAa,WAAb,CAFkB,EAGlB,CAAC,YAAD,EAAe,aAAf,CAHkB,CAAR,CAAZ;;AAKA,uBAAW9V,IAAX,IAAmBR,OAAOqD,IAAPrD,CAAY+C,KAAKmgD,OAAjBljD,CAAnB,EAA8C;AAC5C,oBAAMqkD,SAAS9gD,IAAIqH,GAAJrH,CAAQ/C,IAAR+C,CAAf;;AACA,kBAAI,CAAC8gD,MAAL,EAAa;AACX;AAH0C;;AAK5CjB,mBAAKiB,MAALjB,IAAe,MAAM;AACnB,qBAAKxD,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,0BAAQ,IADoD;AAE5D83C,0BAAQ;AACN7wC,wBAAI5Q,KAAK4Q,EADH;AAENnT;AAFM;AAFoD,iBAA9D;AAOA,uBAAO,KAAP;AARF;AAZsB;;AAwBxB,gBAAI,CAAC4iD,KAAKa,OAAV,EAAmB;AACjBb,mBAAKa,OAALb,GAAe,MAAM,KAArBA;AAzBsB;;AA2BxBA,iBAAKlB,SAALkB,GAAiB,cAAjBA;AAnJkD;;AAsJpDO,+BAAqBP,IAArBO,EAA2BV,SAA3BU,EAAsC;AACpC,kBAAMc,mBAAmBrB,KAAKa,OAA9B;;AACA,gBAAI,CAACQ,gBAAL,EAAuB;AACrBrB,mBAAKl2C,IAALk2C,GAAY,KAAKxD,WAAL,CAAiBuE,YAAjB,CAA8B,EAA9B,CAAZf;AAHkC;;AAKpCA,iBAAKlB,SAALkB,GAAiB,cAAjBA;;AAEA,gBAAI,CAAC,KAAKlD,aAAV,EAAyB;AACvBjiD,8BACG,8DACC,uDAFJA;;AAIA,kBAAI,CAACwmD,gBAAL,EAAuB;AACrBrB,qBAAKa,OAALb,GAAe,MAAM,KAArBA;AANqB;;AAQvB;AAfkC;;AAkBpCA,iBAAKa,OAALb,GAAe,MAAM;AACnB,kBAAIqB,gBAAJ,EAAsB;AACpBA;AAFiB;;AAKnB,oBAAM;AACJnC,wBAAQoC,eADJ;AAEJC,sBAAMC,aAFF;AAGJC;AAHI,kBAIF5B,SAJJ;AAMA,oBAAM6B,YAAY,EAAlB;;AACA,kBAAIJ,gBAAgBnlD,MAAhBmlD,KAA2B,CAA3BA,IAAgCE,cAAcrlD,MAAdqlD,KAAyB,CAA7D,EAAgE;AAC9D,sBAAMG,WAAW,IAAI3qC,GAAJ,CAAQwqC,aAAR,CAAjB;;AACA,2BAAWI,SAAX,IAAwBN,eAAxB,EAAyC;AACvC,wBAAMpC,SAAS,KAAKpC,aAAL,CAAmB8E,SAAnB,KAAiC,EAAhD;;AACA,6BAAW;AAAErxC;AAAF,mBAAX,IAAqB2uC,MAArB,EAA6B;AAC3ByC,6BAAS1qC,GAAT0qC,CAAapxC,EAAboxC;AAHqC;AAFqB;;AAQ9D,2BAAWzC,MAAX,IAAqBtiD,OAAOsc,MAAPtc,CAAc,KAAKkgD,aAAnBlgD,CAArB,EAAwD;AACtD,6BAAWilD,KAAX,IAAoB3C,MAApB,EAA4B;AAC1B,wBAAIyC,SAAShmC,GAATgmC,CAAaE,MAAMtxC,EAAnBoxC,MAA2BF,OAA/B,EAAwC;AACtCC,gCAAU3iD,IAAV2iD,CAAeG,KAAfH;AAFwB;AAD0B;AARM;AAAhE,qBAeO;AACL,2BAAWxC,MAAX,IAAqBtiD,OAAOsc,MAAPtc,CAAc,KAAKkgD,aAAnBlgD,CAArB,EAAwD;AACtD8kD,4BAAU3iD,IAAV2iD,CAAe,GAAGxC,MAAlBwC;AAFG;AA3BY;;AAiCnB,oBAAMI,UAAU,KAAKlyC,iBAArB;AACA,oBAAMmyC,SAAS,EAAf;;AACA,yBAAWF,KAAX,IAAoBH,SAApB,EAA+B;AAC7B,sBAAM;AAAEnxC;AAAF,oBAASsxC,KAAf;AACAE,uBAAOhjD,IAAPgjD,CAAYxxC,EAAZwxC;;AACA,wBAAQF,MAAM15C,IAAd;AACE,uBAAK,MAAL;AAAa;AACX,4BAAMxL,QAAQklD,MAAMlxB,YAANkxB,IAAsB,EAApC;AACAC,8BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,6BAAF;AAASqlD,uCAAerlD;AAAxB,uBAArBmlD;AACA;AAJJ;;AAME,uBAAK,UAAL;AACA,uBAAK,aAAL;AAAoB;AAClB,4BAAMnlD,QAAQklD,MAAMlxB,YAANkxB,KAAuBA,MAAMzC,YAA3C;AACA0C,8BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD;AAAF,uBAArBmlD;AACA;AAVJ;;AAYE,uBAAK,UAAL;AACA,uBAAK,SAAL;AAAgB;AACd,4BAAMnlD,QAAQklD,MAAMlxB,YAANkxB,IAAsB,EAApC;AACAC,8BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD;AAAF,uBAArBmlD;AACA;AAhBJ;;AAkBE;AACE;AAnBJ;;AAqBA,sBAAMxC,aAAar0C,SAASs0C,cAATt0C,CAAwBsF,EAAxBtF,CAAnB;;AACA,oBAAI,CAACq0C,UAAD,IAAe,CAAClF,qBAAqBz+B,GAArBy+B,CAAyBkF,UAAzBlF,CAApB,EAA0D;AACxD;AA1B2B;;AA4B7BkF,2BAAW2C,aAAX3C,CAAyB,IAAI4C,KAAJ,CAAU,WAAV,CAAzB5C;AA/DiB;;AAkEnB,kBAAI,KAAKzC,eAAT,EAA0B;AAExB,qBAAKL,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,0BAAQ,IADoD;AAE5D83C,0BAAQ;AACN7wC,wBAAI,KADE;AAENinC,yBAAKuK,MAFC;AAGN3kD,0BAAM;AAHA;AAFoD,iBAA9D;AApEiB;;AA8EnB,qBAAO,KAAP;AA9EF;AAxKkD;;AAAA;;AA2PtD,cAAMs9C,qBAAN,SAAoCyB,iBAApC,CAAsD;AACpD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B;AAAF,aAAlB;AARkD;;AAWpDvnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,gBAA3B;AAEA,kBAAMjT,QAAQ5gC,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAd;AACA4gC,kBAAMnhB,KAANmhB,CAAYlnB,MAAZknB,GAAqB,KAAKqR,SAAL,CAAexyB,KAAf,CAAqB/F,MAA1CknB;AACAA,kBAAMnhB,KAANmhB,CAAYnnB,KAAZmnB,GAAoB,KAAKqR,SAAL,CAAexyB,KAAf,CAAqBhG,KAAzCmnB;AACAA,kBAAM1iC,GAAN0iC,GACE,KAAK6Q,kBAAL,GACA,aADA,GAEA,KAAK/8C,IAAL,CAAUvC,IAAV,CAAeqqB,WAAf,EAFA,GAGA,MAJFokB;AAKAA,kBAAMuW,GAANvW,GAAY,uBAAZA;AACAA,kBAAMwW,OAANxW,CAAcyW,MAAdzW,GAAuB,sBAAvBA;AACAA,kBAAMwW,OAANxW,CAAc0W,QAAd1W,GAAyB2W,KAAKC,SAALD,CAAe;AAAEr6C,oBAAM,KAAKxI,IAAL,CAAUvC;AAAlB,aAAfolD,CAAzB3W;;AAEA,gBAAI,CAAC,KAAKlsC,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkBxS,KAAlB,EAAyB,KAAKlsC,IAA9B;AAhBK;;AAmBP,iBAAKu9C,SAAL,CAAe5zB,WAAf,CAA2BuiB,KAA3B;AACA,mBAAO,KAAKqR,SAAZ;AA/BkD;;AAAA;;AAmCtD,cAAM/B,uBAAN,SAAsCgB,iBAAtC,CAAwD;AACtDtnC,mBAAS;AAEP,gBAAI,KAAKlV,IAAL,CAAU+iD,eAAd,EAA+B;AAC7B,mBAAKxF,SAAL,CAAeyF,KAAf,GAAuB,KAAKhjD,IAAL,CAAU+iD,eAAjC;AAHK;;AAMP,mBAAO,KAAKxF,SAAZ;AAPoD;;AAUtD0F,0BAAgBtoC,KAAhBsoC,EAAuB;AACrB,kBAAM;AAAElD,mBAAF;AAASC;AAAT,gBAAmBxD,kBAAkBsD,QAA3C;AACA,mBAAQC,SAASplC,MAAMuoC,OAAfnD,IAA4BC,SAASrlC,MAAMwoC,OAAnD;AAZoD;;AAetDC,4BAAkB1L,OAAlB0L,EAA2BC,QAA3BD,EAAqCE,SAArCF,EAAgDG,WAAhDH,EAA6D;AAC3D,gBAAIC,SAAS16B,QAAT06B,CAAkB,OAAlBA,CAAJ,EAAgC;AAE9B3L,sBAAQ58B,gBAAR48B,CAAyB2L,QAAzB3L,EAAmC/8B,SAAS;AAC1C,qBAAKkiC,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,0BAAQ,IADoD;AAE5D83C,0BAAQ;AACN7wC,wBAAI,KAAK5Q,IAAL,CAAU4Q,EADR;AAENnT,0BAAM6lD,SAFA;AAGNtmD,2BAAOumD,YAAY5oC,KAAZ4oC,CAHD;AAIN/1B,2BAAO7S,MAAM6oC,QAJP;AAKNC,8BAAU,KAAKR,eAAL,CAAqBtoC,KAArB;AALJ;AAFoD,iBAA9D;AADF;AAFF,mBAcO;AAEL+8B,sBAAQ58B,gBAAR48B,CAAyB2L,QAAzB3L,EAAmC/8B,SAAS;AAC1C,qBAAKkiC,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,0BAAQ,IADoD;AAE5D83C,0BAAQ;AACN7wC,wBAAI,KAAK5Q,IAAL,CAAU4Q,EADR;AAENnT,0BAAM6lD,SAFA;AAGNtmD,2BAAOumD,YAAY5oC,KAAZ4oC;AAHD;AAFoD,iBAA9D;AADF;AAjByD;AAfP;;AA6CtDG,6BAAmBhM,OAAnBgM,EAA4B90B,KAA5B80B,EAAmCC,MAAnCD,EAA2C;AACzC,uBAAW,CAACL,QAAD,EAAWC,SAAX,CAAX,IAAoC10B,KAApC,EAA2C;AACzC,kBAAI00B,cAAc,QAAdA,IAA0B,KAAKtjD,IAAL,CAAUmgD,OAAV,GAAoBmD,SAApB,CAA9B,EAA8D;AAC5D,qBAAKF,iBAAL,CAAuB1L,OAAvB,EAAgC2L,QAAhC,EAA0CC,SAA1C,EAAqDK,MAArD;AAFuC;AADF;AA7CW;;AAqDtDC,8BAAoBlM,OAApBkM,EAA6B;AAC3B,kBAAM/Z,QAAQ,KAAK7pC,IAAL,CAAUoxC,eAAV,IAA6B,IAA3C;AACAsG,oBAAQ3sB,KAAR2sB,CAActG,eAAdsG,GACE7N,UAAU,IAAVA,GACI,aADJA,GAEIpoC,WAAKC,YAALD,CAAkBooC,MAAM,CAANA,CAAlBpoC,EAA4BooC,MAAM,CAANA,CAA5BpoC,EAAsCooC,MAAM,CAANA,CAAtCpoC,CAHNi2C;AAvDoD;;AA6DtDmM,oCAA0B1D,OAA1B0D,EAAmCC,OAAnCD,EAA4C;AAC1C,kBAAME,WAAW,CAACzC,MAAD,EAAS0C,SAAT,EAAoBrpC,KAApB,KAA8B;AAC7C,oBAAMkvB,QAAQlvB,MAAM8mC,MAAN9mC,CAAa2mC,MAAb3mC,CAAd;AACAA,oBAAMspC,MAANtpC,CAAaoQ,KAAbpQ,CAAmBqpC,SAAnBrpC,IAAgCupC,iCAAgB,GAAGra,MAAM,CAANA,CAAS,OAA5Bqa,EAC9Bra,MAAMnnC,KAANmnC,CAAY,CAAZA,CAD8Bqa,CAAhCvpC;AAFF;;AAOA,kBAAMwpC,gBAAgB;AACpBC,uBAASzpC,SAAS;AAChB,sBAAM0pC,SAAS1pC,MAAM8mC,MAAN9mC,CAAaypC,OAAbzpC,GAAuB,CAAvBA,KAA6B,CAA5C;AACAA,sBAAMspC,MAANtpC,CAAaoQ,KAAbpQ,CAAmBoU,UAAnBpU,GAAgC0pC,SAAS,QAATA,GAAoB,SAApD1pC;AACA,qBAAK1K,iBAAL,CAAuBghB,QAAvB,CAAgC,KAAKjxB,IAAL,CAAU4Q,EAA1C,EAA8C;AAC5CyzC,wBAD4C;AAE5CC,yBAAO3pC,MAAM8mC,MAAN9mC,CAAaypC,OAAbzpC,KAAyB,CAAzBA,IAA8BA,MAAM8mC,MAAN9mC,CAAaypC,OAAbzpC,KAAyB;AAFlB,iBAA9C;AAJkB;AASpB2pC,qBAAO3pC,SAAS;AACd,qBAAK1K,iBAAL,CAAuBghB,QAAvB,CAAgC,KAAKjxB,IAAL,CAAU4Q,EAA1C,EAA8C;AAC5C0zC,yBAAO3pC,MAAM8mC,MAAN9mC,CAAa2pC;AADwB,iBAA9C;AAVkB;AAcpBD,sBAAQ1pC,SAAS;AACfA,sBAAMspC,MAANtpC,CAAaoQ,KAAbpQ,CAAmBoU,UAAnBpU,GAAgCA,MAAM8mC,MAAN9mC,CAAa0pC,MAAb1pC,GAC5B,QAD4BA,GAE5B,SAFJA;AAGA,qBAAK1K,iBAAL,CAAuBghB,QAAvB,CAAgC,KAAKjxB,IAAL,CAAU4Q,EAA1C,EAA8C;AAC5CyzC,0BAAQ1pC,MAAM8mC,MAAN9mC,CAAa0pC;AADuB,iBAA9C;AAlBkB;AAsBpBE,qBAAO5pC,SAAS;AACdR,2BAAW,MAAMQ,MAAMspC,MAANtpC,CAAa4pC,KAAb5pC,CAAmB;AAAE6pC,iCAAe;AAAjB,iBAAnB7pC,CAAjBR,EAA+D,CAA/DA;AAvBkB;AAyBpBsqC,wBAAU9pC,SAAS;AAEjBA,sBAAMspC,MAANtpC,CAAaqoC,KAAbroC,GAAqBA,MAAM8mC,MAAN9mC,CAAa8pC,QAAlC9pC;AA3BkB;AA6BpB+pC,wBAAU/pC,SAAS;AACjB,oBAAIA,MAAM8mC,MAAN9mC,CAAa+pC,QAAjB,EAA2B;AACzB/pC,wBAAMspC,MAANtpC,CAAa0Q,YAAb1Q,CAA0B,UAA1BA,EAAsC,EAAtCA;AADF,uBAEO;AACLA,wBAAMspC,MAANtpC,CAAagqC,eAAbhqC,CAA6B,UAA7BA;AAJe;AA7BC;AAoCpBiqC,wBAAUjqC,SAAS;AACjB,oBAAIA,MAAM8mC,MAAN9mC,CAAaiqC,QAAjB,EAA2B;AACzBjqC,wBAAMspC,MAANtpC,CAAa0Q,YAAb1Q,CAA0B,UAA1BA,EAAsC,EAAtCA;AADF,uBAEO;AACLA,wBAAMspC,MAANtpC,CAAagqC,eAAbhqC,CAA6B,UAA7BA;AAJe;AApCC;AA2CpBkqC,uBAASlqC,SAAS;AAChBopC,yBAAS,SAATA,EAAoB,iBAApBA,EAAuCppC,KAAvCopC;AA5CkB;AA8CpB7qB,yBAAWve,SAAS;AAClBopC,yBAAS,WAATA,EAAsB,iBAAtBA,EAAyCppC,KAAzCopC;AA/CkB;AAiDpBe,uBAASnqC,SAAS;AAChBopC,yBAAS,SAATA,EAAoB,OAApBA,EAA6BppC,KAA7BopC;AAlDkB;AAoDpBgB,yBAAWpqC,SAAS;AAClBopC,yBAAS,WAATA,EAAsB,OAAtBA,EAA+BppC,KAA/BopC;AArDkB;AAuDpBzF,2BAAa3jC,SAAS;AACpBopC,yBAAS,aAATA,EAAwB,aAAxBA,EAAuCppC,KAAvCopC;AAxDkB;AA0DpB5qB,2BAAaxe,SAAS;AACpBopC,yBAAS,aAATA,EAAwB,aAAxBA,EAAuCppC,KAAvCopC;AA3DkB;AAAA,aAAtB;;AA+DA,uBAAWtmD,IAAX,IAAmBR,OAAOqD,IAAPrD,CAAY6mD,QAAQrC,MAApBxkD,CAAnB,EAAgD;AAC9C,oBAAM83C,SAASoL,QAAQ1iD,IAAR0iD,KAAiBgE,cAAc1mD,IAAd0mD,CAAhC;;AACA,kBAAIpP,MAAJ,EAAY;AACVA,uBAAO+O,OAAP/O;AAH4C;AAvEN;AA7DU;;AAAA;;AA6IxD,cAAMkG,2BAAN,SAA0CO,uBAA1C,CAAkE;AAChE99C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eACJ7B,WAAWoC,WAAXpC,IACC,CAACA,WAAW56C,IAAX46C,CAAgBoK,aAAjB,IAAkC,CAAC,CAACpK,WAAW56C,IAAX46C,CAAgBqK,UAFvD;AAGA,kBAAMrK,UAAN,EAAkB;AAAE6B;AAAF,aAAlB;AAL8D;;AAQhEyI,gCAAsBxpD,IAAtBwpD,EAA4BxkD,GAA5BwkD,EAAiCloD,KAAjCkoD,EAAwCC,YAAxCD,EAAsD;AACpD,kBAAM/C,UAAU,KAAKlyC,iBAArB;;AACA,uBAAWynC,OAAX,IAAsB,KAAK2H,kBAAL,CACpB3jD,KAAK+B,IADe,EAEL/B,KAAKkV,EAFA,CAAtB,EAGG;AACD,kBAAI8mC,QAAQiI,UAAZ,EAAwB;AACtBjI,wBAAQiI,UAARjI,CAAmBh3C,GAAnBg3C,IAA0B16C,KAA1B06C;AAFD;;AAIDyK,sBAAQlxB,QAARkxB,CAAiBzK,QAAQ9mC,EAAzBuxC,EAA6B;AAAE,iBAACgD,YAAD,GAAgBnoD;AAAlB,eAA7BmlD;AATkD;AARU;;AAqBhEjtC,mBAAS;AACP,kBAAMitC,UAAU,KAAKlyC,iBAArB;AACA,kBAAMW,KAAK,KAAK5Q,IAAL,CAAU4Q,EAArB;AAEA,iBAAK2sC,SAAL,CAAe4B,SAAf,GAA2B,sBAA3B;AAEA,gBAAIzH,UAAU,IAAd;;AACA,gBAAI,KAAKsF,WAAT,EAAsB;AAIpB,oBAAMoI,aAAajD,QAAQpxB,QAARoxB,CAAiBvxC,EAAjBuxC,EAAqB;AACtCnlD,uBAAO,KAAKgD,IAAL,CAAUilD,UADqB;AAEtC5C,+BAAe,KAAKriD,IAAL,CAAUilD;AAFa,eAArB9C,CAAnB;AAIA,oBAAM7pC,cAAc8sC,WAAW/C,aAAX+C,IAA4BA,WAAWpoD,KAAvCooD,IAAgD,EAApE;AACA,oBAAMC,cAAc;AAClBC,2BAAW,IADO;AAElBC,gCAAgB;AAFE,eAApB;;AAKA,kBAAI,KAAKvlD,IAAL,CAAUwlD,SAAd,EAAyB;AACvB9N,0BAAUpsC,SAAS2Z,aAAT3Z,CAAuB,UAAvBA,CAAVosC;AACAA,wBAAQp/B,WAARo/B,GAAsBp/B,WAAtBo/B;AAFF,qBAGO;AACLA,0BAAUpsC,SAAS2Z,aAAT3Z,CAAuB,OAAvBA,CAAVosC;AACAA,wBAAQlvC,IAARkvC,GAAe,MAAfA;AACAA,wBAAQrsB,YAARqsB,CAAqB,OAArBA,EAA8Bp/B,WAA9Bo/B;AApBkB;;AAsBpB+C,mCAAqBnjC,GAArBmjC,CAAyB/C,OAAzB+C;AACA/C,sBAAQ+N,QAAR/N,GAAmB,KAAK13C,IAAL,CAAU0lD,QAA7BhO;AACAA,sBAAQj6C,IAARi6C,GAAe,KAAK13C,IAAL,CAAUiiD,SAAzBvK;AACAA,sBAAQiO,QAARjO,GAAmB8C,iBAAnB9C;AAEA2N,0BAAYC,SAAZD,GAAwB/sC,WAAxB+sC;AACA3N,sBAAQrsB,YAARqsB,CAAqB,IAArBA,EAA2B9mC,EAA3B8mC;AAEAA,sBAAQ58B,gBAAR48B,CAAyB,OAAzBA,EAAkC/8B,SAAS;AACzCwnC,wBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,yBAAO2d,MAAMspC,MAANtpC,CAAa3d;AAAtB,iBAArBmlD;AACA,qBAAK+C,qBAAL,CACExN,OADF,EAEE,OAFF,EAGE/8B,MAAMspC,MAANtpC,CAAa3d,KAHf,EAIE,OAJF;AAFF;AAUA06C,sBAAQ58B,gBAAR48B,CAAyB,WAAzBA,EAAsC/8B,SAAS;AAC7C,sBAAMqW,eAAe,KAAKhxB,IAAL,CAAU4lD,iBAAV,IAA+B,EAApD;AACAlO,wBAAQ16C,KAAR06C,GAAgB2N,YAAYC,SAAZD,GAAwBr0B,YAAxC0mB;AACA,uBAAO2N,YAAYE,cAAnB;AAHF;;AAMA,kBAAIM,eAAelrC,SAAS;AAC1B,oBAAI0qC,YAAYE,cAAhB,EAAgC;AAC9B5qC,wBAAMspC,MAANtpC,CAAa3d,KAAb2d,GAAqB0qC,YAAYE,cAAjC5qC;AAFwB;;AAK1BA,sBAAMspC,MAANtpC,CAAamrC,UAAbnrC,GAA0B,CAA1BA;AALF;;AAQA,kBAAI,KAAKuiC,eAAL,IAAwB,KAAK5qC,YAAjC,EAA+C;AAC7ColC,wBAAQ58B,gBAAR48B,CAAyB,OAAzBA,EAAkC/8B,SAAS;AACzC,sBAAI0qC,YAAYC,SAAhB,EAA2B;AACzB3qC,0BAAMspC,MAANtpC,CAAa3d,KAAb2d,GAAqB0qC,YAAYC,SAAjC3qC;AAFuC;AAA3C;AAMA+8B,wBAAQ58B,gBAAR48B,CAAyB,mBAAzBA,EAA8CoM,WAAW;AACvD,wBAAM3D,UAAU;AACdnjD,0BAAM2d,KAAN3d,EAAa;AACXqoD,kCAAYC,SAAZD,GAAwB1qC,MAAM8mC,MAAN9mC,CAAa3d,KAAb2d,IAAsB,EAA9C0qC;AACAlD,8BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,+BAAOqoD,YAAYC,SAAZD,CAAsB9jD,QAAtB8jD;AAAT,uBAArBlD;;AACA,0BAAI,CAACkD,YAAYE,cAAjB,EAAiC;AAC/B5qC,8BAAMspC,MAANtpC,CAAa3d,KAAb2d,GAAqB0qC,YAAYC,SAAjC3qC;AAJS;AADC;;AAQd0nC,kCAAc1nC,KAAd0nC,EAAqB;AACnBgD,kCAAYE,cAAZF,GAA6B1qC,MAAM8mC,MAAN9mC,CAAa0nC,aAAb1nC,IAA8B,EAA3D0qC;;AACA,0BAAI1qC,MAAMspC,MAANtpC,KAAiBrP,SAASy6C,aAA9B,EAA6C;AAE3CprC,8BAAMspC,MAANtpC,CAAa3d,KAAb2d,GAAqB0qC,YAAYE,cAAjC5qC;AAJiB;;AAMnBwnC,8BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBoD,wCAAgBF,YAAYE;AADT,uBAArBpD;AAdY;;AAkBd6D,6BAASrrC,KAATqrC,EAAgB;AACd,4BAAM,CAACC,QAAD,EAAWC,MAAX,IAAqBvrC,MAAM8mC,MAAN9mC,CAAaqrC,QAAxC;;AACA,0BAAIC,YAAY,CAAZA,IAAiBC,SAASvrC,MAAMspC,MAANtpC,CAAa3d,KAAb2d,CAAmBne,MAAjD,EAAyD;AACvDme,8BAAMspC,MAANtpC,CAAawrC,iBAAbxrC,CAA+BsrC,QAA/BtrC,EAAyCurC,MAAzCvrC;AAHY;AAlBF;;AAAA,mBAAhB;;AAyBA,uBAAKkpC,yBAAL,CAA+B1D,OAA/B,EAAwC2D,OAAxC;AA1BF;AA+BApM,wBAAQ58B,gBAAR48B,CAAyB,SAAzBA,EAAoC/8B,SAAS;AAG3C,sBAAIyrC,YAAY,CAAC,CAAjB;;AACA,sBAAIzrC,MAAMja,GAANia,KAAc,QAAlB,EAA4B;AAC1ByrC,gCAAY,CAAZA;AADF,yBAEO,IAAIzrC,MAAMja,GAANia,KAAc,OAAlB,EAA2B;AAChCyrC,gCAAY,CAAZA;AADK,yBAEA,IAAIzrC,MAAMja,GAANia,KAAc,KAAlB,EAAyB;AAC9ByrC,gCAAY,CAAZA;AATyC;;AAW3C,sBAAIA,cAAc,CAAC,CAAnB,EAAsB;AACpB;AAZyC;;AAe3Cf,8BAAYC,SAAZD,GAAwB1qC,MAAMspC,MAANtpC,CAAa3d,KAArCqoD;AACA,uBAAKxI,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,4BAAQ,IADoD;AAE5D83C,4BAAQ;AACN7wC,wBADM;AAENnT,4BAAM,WAFA;AAGNT,6BAAO2d,MAAMspC,MAANtpC,CAAa3d,KAHd;AAINqpD,kCAAY,IAJN;AAKND,+BALM;AAMNH,gCAAUtrC,MAAMspC,MAANtpC,CAAa2rC,cANjB;AAONJ,8BAAQvrC,MAAMspC,MAANtpC,CAAa4rC;AAPf;AAFoD,mBAA9D;AAhBF;AA6BA,sBAAMC,gBAAgBX,YAAtB;AACAA,+BAAe,IAAfA;AACAnO,wBAAQ58B,gBAAR48B,CAAyB,MAAzBA,EAAiC/8B,SAAS;AACxC0qC,8BAAYC,SAAZD,GAAwB1qC,MAAMspC,MAANtpC,CAAa3d,KAArCqoD;;AACA,sBAAI,KAAKhI,WAAL,CAAiBoJ,MAArB,EAA6B;AAE3B,yBAAK5J,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,8BAAQ,IADoD;AAE5D83C,8BAAQ;AACN7wC,0BADM;AAENnT,8BAAM,WAFA;AAGNT,+BAAO2d,MAAMspC,MAANtpC,CAAa3d,KAHd;AAINqpD,oCAAY,IAJN;AAKND,mCAAW,CALL;AAMNH,kCAAUtrC,MAAMspC,MAANtpC,CAAa2rC,cANjB;AAONJ,gCAAQvrC,MAAMspC,MAANtpC,CAAa4rC;AAPf;AAFoD,qBAA9D;AAJsC;;AAiBxCC,gCAAc7rC,KAAd6rC;AAjBF;;AAoBA,oBAAI,KAAKxmD,IAAL,CAAUmgD,OAAV,EAAmBuG,SAAvB,EAAkC;AAChChP,0BAAQ58B,gBAAR48B,CAAyB,aAAzBA,EAAwC/8B,SAAS;AAC/C0qC,gCAAYE,cAAZF,GAA6B,EAA7BA;AACA,0BAAM;AAAErlD,0BAAF;AAAQikD;AAAR,wBAAmBtpC,KAAzB;AACA,0BAAM;AAAE3d,2BAAF;AAASspD,oCAAT;AAAyBC;AAAzB,wBAA0CtC,MAAhD;AACA,yBAAKpH,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,8BAAQ,IADoD;AAE5D83C,8BAAQ;AACN7wC,0BADM;AAENnT,8BAAM,WAFA;AAGNT,6BAHM;AAIN2pD,gCAAQ3mD,IAJF;AAKNqmD,oCAAY,KALN;AAMNJ,kCAAUK,cANJ;AAONJ,gCAAQK;AAPF;AAFoD,qBAA9D;AAJF;AA1F2C;;AA6G7C,qBAAK7C,kBAAL,CACEhM,OADF,EAEE,CACE,CAAC,OAAD,EAAU,OAAV,CADF,EAEE,CAAC,MAAD,EAAS,MAAT,CAFF,EAGE,CAAC,WAAD,EAAc,YAAd,CAHF,EAIE,CAAC,YAAD,EAAe,aAAf,CAJF,EAKE,CAAC,YAAD,EAAe,YAAf,CALF,EAME,CAAC,SAAD,EAAY,UAAZ,CANF,CAFF,EAUE/8B,SAASA,MAAMspC,MAANtpC,CAAa3d,KAVxB;AAnKkB;;AAiLpB,kBAAI6oD,YAAJ,EAAkB;AAChBnO,wBAAQ58B,gBAAR48B,CAAyB,MAAzBA,EAAiCmO,YAAjCnO;AAlLkB;;AAqLpB,kBAAI,KAAK13C,IAAL,CAAU4mD,MAAV,KAAqB,IAAzB,EAA+B;AAC7BlP,wBAAQmP,SAARnP,GAAoB,KAAK13C,IAAL,CAAU4mD,MAA9BlP;AAtLkB;;AAyLpB,kBAAI,KAAK13C,IAAL,CAAU8mD,IAAd,EAAoB;AAClB,sBAAMC,aAAa,KAAK/mD,IAAL,CAAU2D,IAAV,CAAe,CAAf,IAAoB,KAAK3D,IAAL,CAAU2D,IAAV,CAAe,CAAf,CAAvC;AACA,sBAAMqjD,YAAYD,aAAa,KAAK/mD,IAAL,CAAU4mD,MAAzC;AAEAlP,wBAAQuP,SAARvP,CAAkBpgC,GAAlBogC,CAAsB,MAAtBA;AACAA,wBAAQ3sB,KAAR2sB,CAAcwP,aAAdxP,GAA+B,QAAOsP,SAAU,WAAhDtP;AA9LkB;AAAtB,mBAgMO;AACLA,wBAAUpsC,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAVosC;AACAA,sBAAQp/B,WAARo/B,GAAsB,KAAK13C,IAAL,CAAUilD,UAAhCvN;AACAA,sBAAQ3sB,KAAR2sB,CAAcyP,aAAdzP,GAA8B,QAA9BA;AACAA,sBAAQ3sB,KAAR2sB,CAAc0M,OAAd1M,GAAwB,YAAxBA;AA3MK;;AA8MP,iBAAK0P,aAAL,CAAmB1P,OAAnB;;AACA,iBAAKkM,mBAAL,CAAyBlM,OAAzB;;AAEA,iBAAK6F,SAAL,CAAe5zB,WAAf,CAA2B+tB,OAA3B;AACA,mBAAO,KAAK6F,SAAZ;AAvO8D;;AAiPhE6J,wBAAc1P,OAAd0P,EAAuB;AACrB,kBAAMC,iBAAiB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAvB;AACA,kBAAM;AAAEhvB,sBAAF;AAAYivB;AAAZ,gBAA0B,KAAKtnD,IAAL,CAAUunD,qBAA1C;AACA,kBAAMx8B,QAAQ2sB,QAAQ3sB,KAAtB;;AAKA,gBAAIsN,QAAJ,EAAc;AACZtN,oBAAMsN,QAANtN,GAAiB,GAAGsN,QAAS,IAA7BtN;AATmB;;AAYrBA,kBAAM8e,KAAN9e,GAActpB,WAAKC,YAALD,CAAkB6lD,UAAU,CAAVA,CAAlB7lD,EAAgC6lD,UAAU,CAAVA,CAAhC7lD,EAA8C6lD,UAAU,CAAVA,CAA9C7lD,CAAdspB;;AAEA,gBAAI,KAAK/qB,IAAL,CAAUwnD,aAAV,KAA4B,IAAhC,EAAsC;AACpCz8B,oBAAM08B,SAAN18B,GAAkBs8B,eAAe,KAAKrnD,IAAL,CAAUwnD,aAAzBH,CAAlBt8B;AAfmB;AAjPyC;;AAAA;;AAqQlE,cAAMswB,+BAAN,SAA8CG,uBAA9C,CAAsE;AACpE99C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAMk9C,UAAN,EAAkB;AAAE6B,4BAAc7B,WAAWoC;AAA3B,aAAlB;AAFkE;;AAKpE9nC,mBAAS;AACP,kBAAMitC,UAAU,KAAKlyC,iBAArB;AACA,kBAAMjQ,OAAO,KAAKA,IAAlB;AACA,kBAAM4Q,KAAK5Q,KAAK4Q,EAAhB;AACA,gBAAI5T,QAAQmlD,QAAQpxB,QAARoxB,CAAiBvxC,EAAjBuxC,EAAqB;AAC/BnlD,qBAAOgD,KAAK0/C,WAAL1/C,KAAqBA,KAAKilD;AADF,aAArB9C,EAETnlD,KAFH;;AAGA,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAE7BA,sBAAQA,UAAU,KAAlBA;AACAmlD,sBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD;AAAF,eAArBmlD;AAVK;;AAaP,iBAAK5E,SAAL,CAAe4B,SAAf,GAA2B,iCAA3B;AAEA,kBAAMzH,UAAUpsC,SAAS2Z,aAAT3Z,CAAuB,OAAvBA,CAAhB;AACAmvC,iCAAqBnjC,GAArBmjC,CAAyB/C,OAAzB+C;AACA/C,oBAAQ+N,QAAR/N,GAAmB13C,KAAK0lD,QAAxBhO;AACAA,oBAAQlvC,IAARkvC,GAAe,UAAfA;AACAA,oBAAQj6C,IAARi6C,GAAe13C,KAAKiiD,SAApBvK;;AACA,gBAAI16C,KAAJ,EAAW;AACT06C,sBAAQrsB,YAARqsB,CAAqB,SAArBA,EAAgC,IAAhCA;AArBK;;AAuBPA,oBAAQrsB,YAARqsB,CAAqB,IAArBA,EAA2B9mC,EAA3B8mC;AACAA,oBAAQrsB,YAARqsB,CAAqB,aAArBA,EAAoC13C,KAAK0/C,WAAzChI;AACAA,oBAAQiO,QAARjO,GAAmB8C,iBAAnB9C;AAEAA,oBAAQ58B,gBAAR48B,CAAyB,QAAzBA,EAAmC/8B,SAAS;AAC1C,oBAAM;AAAEld,oBAAF;AAAQiqD;AAAR,kBAAoB/sC,MAAMspC,MAAhC;;AACA,yBAAW0D,QAAX,IAAuB,KAAKtI,kBAAL,CAAwB5hD,IAAxB,EAA6CmT,EAA7C,CAAvB,EAAyE;AACvE,sBAAMg3C,aAAaF,WAAWC,SAASjI,WAATiI,KAAyB3nD,KAAK0/C,WAA5D;;AACA,oBAAIiI,SAAShI,UAAb,EAAyB;AACvBgI,2BAAShI,UAATgI,CAAoBD,OAApBC,GAA8BC,UAA9BD;AAHqE;;AAKvExF,wBAAQlxB,QAARkxB,CAAiBwF,SAAS/2C,EAA1BuxC,EAA8B;AAAEnlD,yBAAO4qD;AAAT,iBAA9BzF;AAPwC;;AAS1CA,sBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,uBAAO0qD;AAAT,eAArBvF;AATF;AAYAzK,oBAAQ58B,gBAAR48B,CAAyB,WAAzBA,EAAsC/8B,SAAS;AAC7C,oBAAMqW,eAAehxB,KAAK4lD,iBAAL5lD,IAA0B,KAA/C;AACA2a,oBAAMspC,MAANtpC,CAAa+sC,OAAb/sC,GAAuBqW,iBAAiBhxB,KAAK0/C,WAA7C/kC;AAFF;;AAKA,gBAAI,KAAKuiC,eAAL,IAAwB,KAAK5qC,YAAjC,EAA+C;AAC7ColC,sBAAQ58B,gBAAR48B,CAAyB,mBAAzBA,EAA8CoM,WAAW;AACvD,sBAAM3D,UAAU;AACdnjD,wBAAM2d,KAAN3d,EAAa;AACX2d,0BAAMspC,MAANtpC,CAAa+sC,OAAb/sC,GAAuBA,MAAM8mC,MAAN9mC,CAAa3d,KAAb2d,KAAuB,KAA9CA;AACAwnC,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,6BAAO2d,MAAMspC,MAANtpC,CAAa+sC;AAAtB,qBAArBvF;AAHY;;AAAA,iBAAhB;;AAMA,qBAAK0B,yBAAL,CAA+B1D,OAA/B,EAAwC2D,OAAxC;AAPF;;AAUA,mBAAKJ,kBAAL,CACEhM,OADF,EAEE,CACE,CAAC,QAAD,EAAW,UAAX,CADF,EAEE,CAAC,QAAD,EAAW,QAAX,CAFF,EAGE,CAAC,OAAD,EAAU,OAAV,CAHF,EAIE,CAAC,MAAD,EAAS,MAAT,CAJF,EAKE,CAAC,WAAD,EAAc,YAAd,CALF,EAME,CAAC,YAAD,EAAe,aAAf,CANF,EAOE,CAAC,YAAD,EAAe,YAAf,CAPF,EAQE,CAAC,SAAD,EAAY,UAAZ,CARF,CAFF,EAYE/8B,SAASA,MAAMspC,MAANtpC,CAAa+sC,OAZxB;AAvDK;;AAuEP,iBAAK9D,mBAAL,CAAyBlM,OAAzB;;AAEA,iBAAK6F,SAAL,CAAe5zB,WAAf,CAA2B+tB,OAA3B;AACA,mBAAO,KAAK6F,SAAZ;AA/EkE;;AAAA;;AAmFtE,cAAMpC,kCAAN,SAAiDK,uBAAjD,CAAyE;AACvE99C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAMk9C,UAAN,EAAkB;AAAE6B,4BAAc7B,WAAWoC;AAA3B,aAAlB;AAFqE;;AAKvE9nC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,oCAA3B;AACA,kBAAMgD,UAAU,KAAKlyC,iBAArB;AACA,kBAAMjQ,OAAO,KAAKA,IAAlB;AACA,kBAAM4Q,KAAK5Q,KAAK4Q,EAAhB;AACA,gBAAI5T,QAAQmlD,QAAQpxB,QAARoxB,CAAiBvxC,EAAjBuxC,EAAqB;AAC/BnlD,qBAAOgD,KAAKilD,UAALjlD,KAAoBA,KAAK6nD;AADD,aAArB1F,EAETnlD,KAFH;;AAGA,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAE7BA,sBAAQA,UAAUgD,KAAK6nD,WAAvB7qD;AACAmlD,sBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD;AAAF,eAArBmlD;AAXK;;AAcP,kBAAMzK,UAAUpsC,SAAS2Z,aAAT3Z,CAAuB,OAAvBA,CAAhB;AACAmvC,iCAAqBnjC,GAArBmjC,CAAyB/C,OAAzB+C;AACA/C,oBAAQ+N,QAAR/N,GAAmB13C,KAAK0lD,QAAxBhO;AACAA,oBAAQlvC,IAARkvC,GAAe,OAAfA;AACAA,oBAAQj6C,IAARi6C,GAAe13C,KAAKiiD,SAApBvK;;AACA,gBAAI16C,KAAJ,EAAW;AACT06C,sBAAQrsB,YAARqsB,CAAqB,SAArBA,EAAgC,IAAhCA;AApBK;;AAsBPA,oBAAQrsB,YAARqsB,CAAqB,IAArBA,EAA2B9mC,EAA3B8mC;AACAA,oBAAQiO,QAARjO,GAAmB8C,iBAAnB9C;AAEAA,oBAAQ58B,gBAAR48B,CAAyB,QAAzBA,EAAmC/8B,SAAS;AAC1C,oBAAM;AAAEld,oBAAF;AAAQiqD;AAAR,kBAAoB/sC,MAAMspC,MAAhC;;AACA,yBAAW6D,KAAX,IAAoB,KAAKzI,kBAAL,CAAwB5hD,IAAxB,EAA6CmT,EAA7C,CAApB,EAAsE;AACpEuxC,wBAAQlxB,QAARkxB,CAAiB2F,MAAMl3C,EAAvBuxC,EAA2B;AAAEnlD,yBAAO;AAAT,iBAA3BmlD;AAHwC;;AAK1CA,sBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,uBAAO0qD;AAAT,eAArBvF;AALF;AAQAzK,oBAAQ58B,gBAAR48B,CAAyB,WAAzBA,EAAsC/8B,SAAS;AAC7C,oBAAMqW,eAAehxB,KAAK4lD,iBAA1B;AACAjrC,oBAAMspC,MAANtpC,CAAa+sC,OAAb/sC,GACEqW,iBAAiB,IAAjBA,IACAA,iBAAiBxyB,SADjBwyB,IAEAA,iBAAiBhxB,KAAK6nD,WAHxBltC;AAFF;;AAQA,gBAAI,KAAKuiC,eAAL,IAAwB,KAAK5qC,YAAjC,EAA+C;AAC7C,oBAAMy1C,iBAAiB/nD,KAAK6nD,WAA5B;AACAnQ,sBAAQ58B,gBAAR48B,CAAyB,mBAAzBA,EAA8CoM,WAAW;AACvD,sBAAM3D,UAAU;AACdnjD,yBAAO2d,SAAS;AACd,0BAAM+sC,UAAUK,mBAAmBptC,MAAM8mC,MAAN9mC,CAAa3d,KAAhD;;AACA,+BAAW8qD,KAAX,IAAoB,KAAKzI,kBAAL,CAAwB1kC,MAAMspC,MAANtpC,CAAald,IAArC,CAApB,EAAgE;AAC9D,4BAAMmqD,aAAaF,WAAWI,MAAMl3C,EAANk3C,KAAal3C,EAA3C;;AACA,0BAAIk3C,MAAMnI,UAAV,EAAsB;AACpBmI,8BAAMnI,UAANmI,CAAiBJ,OAAjBI,GAA2BF,UAA3BE;AAH4D;;AAK9D3F,8BAAQlxB,QAARkxB,CAAiB2F,MAAMl3C,EAAvBuxC,EAA2B;AAAEnlD,+BAAO4qD;AAAT,uBAA3BzF;AAPY;AADF;AAAA,iBAAhB;;AAYA,qBAAK0B,yBAAL,CAA+B1D,OAA/B,EAAwC2D,OAAxC;AAbF;;AAgBA,mBAAKJ,kBAAL,CACEhM,OADF,EAEE,CACE,CAAC,QAAD,EAAW,UAAX,CADF,EAEE,CAAC,QAAD,EAAW,QAAX,CAFF,EAGE,CAAC,OAAD,EAAU,OAAV,CAHF,EAIE,CAAC,MAAD,EAAS,MAAT,CAJF,EAKE,CAAC,WAAD,EAAc,YAAd,CALF,EAME,CAAC,YAAD,EAAe,aAAf,CANF,EAOE,CAAC,YAAD,EAAe,YAAf,CAPF,EAQE,CAAC,SAAD,EAAY,UAAZ,CARF,CAFF,EAYE/8B,SAASA,MAAMspC,MAANtpC,CAAa+sC,OAZxB;AA3DK;;AA2EP,iBAAK9D,mBAAL,CAAyBlM,OAAzB;;AAEA,iBAAK6F,SAAL,CAAe5zB,WAAf,CAA2B+tB,OAA3B;AACA,mBAAO,KAAK6F,SAAZ;AAnFqE;;AAAA;;AAuFzE,cAAMjC,iCAAN,SAAgDR,qBAAhD,CAAsE;AACpEp9C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAMk9C,UAAN,EAAkB;AAAE8B,4BAAc9B,WAAW56C,IAAX46C,CAAgBoK;AAAhC,aAAlB;AAFkE;;AAKpE9vC,mBAAS;AAIP,kBAAMqoC,YAAY,MAAMroC,MAAN,EAAlB;AACAqoC,sBAAU4B,SAAV5B,GAAsB,mCAAtBA;;AAEA,gBAAI,KAAKv9C,IAAL,CAAU+iD,eAAd,EAA+B;AAC7BxF,wBAAUyF,KAAVzF,GAAkB,KAAKv9C,IAAL,CAAU+iD,eAA5BxF;AARK;;AAWP,mBAAOA,SAAP;AAhBkE;;AAAA;;AAoBtE,cAAMhC,6BAAN,SAA4CC,uBAA5C,CAAoE;AAClE99C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAMk9C,UAAN,EAAkB;AAAE6B,4BAAc7B,WAAWoC;AAA3B,aAAlB;AAFgE;;AAKlE9nC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,wBAA3B;AACA,kBAAMgD,UAAU,KAAKlyC,iBAArB;AACA,kBAAMW,KAAK,KAAK5Q,IAAL,CAAU4Q,EAArB;AASAuxC,oBAAQpxB,QAARoxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,qBACE,KAAKgD,IAAL,CAAUilD,UAAV,CAAqBzoD,MAArB,GAA8B,CAA9B,GAAkC,KAAKwD,IAAL,CAAUilD,UAAV,CAAqB,CAArB,CAAlC,GAA4DzmD;AAF3C,aAArB2jD;AAKA,gBAAI;AAAE9pB;AAAF,gBAAe,KAAKr4B,IAAL,CAAUunD,qBAA7B;;AACA,gBAAI,CAAClvB,QAAL,EAAe;AACbA,yBAAW,CAAXA;AAnBK;;AAqBP,kBAAM2vB,gBAAiB,QAAO3vB,QAAS,0BAAvC;AAEA,kBAAM4vB,gBAAgB38C,SAAS2Z,aAAT3Z,CAAuB,QAAvBA,CAAtB;AACAmvC,iCAAqBnjC,GAArBmjC,CAAyBwN,aAAzBxN;AACAwN,0BAAcxC,QAAdwC,GAAyB,KAAKjoD,IAAL,CAAU0lD,QAAnCuC;AACAA,0BAAcxqD,IAAdwqD,GAAqB,KAAKjoD,IAAL,CAAUiiD,SAA/BgG;AACAA,0BAAc58B,YAAd48B,CAA2B,IAA3BA,EAAiCr3C,EAAjCq3C;AACAA,0BAActC,QAAdsC,GAAyBzN,iBAAzByN;AAEAA,0BAAcl9B,KAAdk9B,CAAoB5vB,QAApB4vB,GAA+B,GAAG5vB,QAAS,IAA3C4vB;;AAEA,gBAAI,CAAC,KAAKjoD,IAAL,CAAUkoD,KAAf,EAAsB;AAEpBD,4BAAc71C,IAAd61C,GAAqB,KAAKjoD,IAAL,CAAU7D,OAAV,CAAkBK,MAAvCyrD;;AACA,kBAAI,KAAKjoD,IAAL,CAAUmoD,WAAd,EAA2B;AACzBF,8BAAcG,QAAdH,GAAyB,IAAzBA;AAJkB;AAhCf;;AAwCPA,0BAAcntC,gBAAdmtC,CAA+B,WAA/BA,EAA4CttC,SAAS;AACnD,oBAAMqW,eAAe,KAAKhxB,IAAL,CAAU4lD,iBAA/B;;AACA,yBAAWyC,MAAX,IAAqBJ,cAAc9rD,OAAnC,EAA4C;AAC1CksD,uBAAOC,QAAPD,GAAkBA,OAAOrrD,KAAPqrD,KAAiBr3B,YAAnCq3B;AAHiD;AAArD;;AAQA,uBAAWA,MAAX,IAAqB,KAAKroD,IAAL,CAAU7D,OAA/B,EAAwC;AACtC,oBAAMosD,gBAAgBj9C,SAAS2Z,aAAT3Z,CAAuB,QAAvBA,CAAtB;AACAi9C,4BAAcjwC,WAAdiwC,GAA4BF,OAAOG,YAAnCD;AACAA,4BAAcvrD,KAAdurD,GAAsBF,OAAO3I,WAA7B6I;;AACA,kBAAI,KAAKvoD,IAAL,CAAUkoD,KAAd,EAAqB;AACnBK,8BAAcx9B,KAAdw9B,CAAoBlwB,QAApBkwB,GAA+BP,aAA/BO;AALoC;;AAOtC,kBAAI,KAAKvoD,IAAL,CAAUilD,UAAV,CAAqBt8B,QAArB,CAA8B0/B,OAAO3I,WAArC,CAAJ,EAAuD;AACrD6I,8BAAcl9B,YAAdk9B,CAA2B,UAA3BA,EAAuC,IAAvCA;AARoC;;AAUtCN,4BAAct+B,WAAds+B,CAA0BM,aAA1BN;AA1DK;;AA6DP,kBAAMl3B,WAAW,CAACpW,KAAD,EAAQ8tC,QAAR,KAAqB;AACpC,oBAAMhrD,OAAOgrD,WAAW,OAAXA,GAAqB,aAAlC;AACA,oBAAMtsD,UAAUwe,MAAMspC,MAANtpC,CAAaxe,OAA7B;;AACA,kBAAI,CAACwe,MAAMspC,MAANtpC,CAAaytC,QAAlB,EAA4B;AAC1B,uBAAOjsD,QAAQusD,aAARvsD,KAA0B,CAAC,CAA3BA,GACH,IADGA,GAEHA,QAAQA,QAAQusD,aAAhBvsD,EAA+BsB,IAA/BtB,CAFJ;AAJkC;;AAQpC,qBAAOkF,MAAM1D,SAAN0D,CAAgBsnD,MAAhBtnD,CACJwZ,IADIxZ,CACClF,OADDkF,EACUgnD,UAAUA,OAAOC,QAD3BjnD,EAEJb,GAFIa,CAEAgnD,UAAUA,OAAO5qD,IAAP4qD,CAFVhnD,CAAP;AARF;;AAaA,kBAAMunD,WAAWjuC,SAAS;AACxB,oBAAMxe,UAAUwe,MAAMspC,MAANtpC,CAAaxe,OAA7B;AACA,qBAAOkF,MAAM1D,SAAN0D,CAAgBb,GAAhBa,CAAoBwZ,IAApBxZ,CAAyBlF,OAAzBkF,EAAkCgnD,UAAU;AACjD,uBAAO;AAAEG,gCAAcH,OAAO/vC,WAAvB;AAAoConC,+BAAa2I,OAAOrrD;AAAxD,iBAAP;AADK,gBAAP;AAFF;;AAOA,gBAAI,KAAKkgD,eAAL,IAAwB,KAAK5qC,YAAjC,EAA+C;AAC7C21C,4BAAcntC,gBAAdmtC,CAA+B,mBAA/BA,EAAoDnE,WAAW;AAC7D,sBAAM3D,UAAU;AACdnjD,wBAAM2d,KAAN3d,EAAa;AACX,0BAAMA,QAAQ2d,MAAM8mC,MAAN9mC,CAAa3d,KAA3B;AACA,0BAAMuc,SAAS,IAAIlC,GAAJ,CAAQhW,MAAMspC,OAANtpC,CAAcrE,KAAdqE,IAAuBrE,KAAvBqE,GAA+B,CAACrE,KAAD,CAAvC,CAAf;;AACA,+BAAWqrD,MAAX,IAAqBJ,cAAc9rD,OAAnC,EAA4C;AAC1CksD,6BAAOC,QAAPD,GAAkB9uC,OAAOyC,GAAPzC,CAAW8uC,OAAOrrD,KAAlBuc,CAAlB8uC;AAJS;;AAMXlG,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO+zB,SAASpW,KAAToW,EAA+B,IAA/BA;AADY,qBAArBoxB;AAPY;;AAWd0G,oCAAkBluC,KAAlBkuC,EAAyB;AACvBZ,kCAAcG,QAAdH,GAAyB,IAAzBA;AAZY;;AAcd1+B,yBAAO5O,KAAP4O,EAAc;AACZ,0BAAMptB,UAAU8rD,cAAc9rD,OAA9B;AACA,0BAAM0kD,QAAQlmC,MAAM8mC,MAAN9mC,CAAa4O,MAA3B;AACAptB,4BAAQ0kD,KAAR1kD,EAAemsD,QAAfnsD,GAA0B,KAA1BA;AACA8rD,kCAAc1+B,MAAd0+B,CAAqBpH,KAArBoH;;AACA,wBAAI9rD,QAAQK,MAARL,GAAiB,CAArB,EAAwB;AACtB,4BAAM2C,IAAIuC,MAAM1D,SAAN0D,CAAgBynD,SAAhBznD,CAA0BwZ,IAA1BxZ,CACRlF,OADQkF,EAERgnD,UAAUA,OAAOC,QAFTjnD,CAAV;;AAIA,0BAAIvC,MAAM,CAAC,CAAX,EAAc;AACZ3C,gCAAQ,CAARA,EAAWmsD,QAAXnsD,GAAsB,IAAtBA;AANoB;AALZ;;AAcZgmD,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO+zB,SAASpW,KAAToW,EAA+B,IAA/BA,CADY;AAEnBxY,6BAAOqwC,SAASjuC,KAATiuC;AAFY,qBAArBzG;AA5BY;;AAiCdxoC,wBAAMgB,KAANhB,EAAa;AACX,2BAAOsuC,cAAczrD,MAAdyrD,KAAyB,CAAhC,EAAmC;AACjCA,oCAAc1+B,MAAd0+B,CAAqB,CAArBA;AAFS;;AAIX9F,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,6BAAO,IAAT;AAAeub,6BAAO;AAAtB,qBAArB4pC;AArCY;;AAuCdp0B,yBAAOpT,KAAPoT,EAAc;AACZ,0BAAM;AAAE8yB,2BAAF;AAAS2H,kCAAT;AAAuB9I;AAAvB,wBAAuC/kC,MAAM8mC,MAAN9mC,CAAaoT,MAA1D;AACA,0BAAMw6B,gBAAgBj9C,SAAS2Z,aAAT3Z,CAAuB,QAAvBA,CAAtB;AACAi9C,kCAAcjwC,WAAdiwC,GAA4BC,YAA5BD;AACAA,kCAAcvrD,KAAdurD,GAAsB7I,WAAtB6I;AACAN,kCAAcc,YAAdd,CACEM,aADFN,EAEEA,cAAchzC,QAAdgzC,CAAuBpH,KAAvBoH,CAFFA;AAIA9F,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO+zB,SAASpW,KAAToW,EAA+B,IAA/BA,CADY;AAEnBxY,6BAAOqwC,SAASjuC,KAATiuC;AAFY,qBAArBzG;AAhDY;;AAqDd5pC,wBAAMoC,KAANpC,EAAa;AACX,0BAAM;AAAEA;AAAF,wBAAYoC,MAAM8mC,MAAxB;;AACA,2BAAOwG,cAAczrD,MAAdyrD,KAAyB,CAAhC,EAAmC;AACjCA,oCAAc1+B,MAAd0+B,CAAqB,CAArBA;AAHS;;AAKX,+BAAWhoD,IAAX,IAAmBsY,KAAnB,EAA0B;AACxB,4BAAM;AAAEiwC,oCAAF;AAAgB9I;AAAhB,0BAAgCz/C,IAAtC;AACA,4BAAMsoD,gBAAgBj9C,SAAS2Z,aAAT3Z,CAAuB,QAAvBA,CAAtB;AACAi9C,oCAAcjwC,WAAdiwC,GAA4BC,YAA5BD;AACAA,oCAAcvrD,KAAdurD,GAAsB7I,WAAtB6I;AACAN,oCAAct+B,WAAds+B,CAA0BM,aAA1BN;AAVS;;AAYX,wBAAIA,cAAc9rD,OAAd8rD,CAAsBzrD,MAAtByrD,GAA+B,CAAnC,EAAsC;AACpCA,oCAAc9rD,OAAd8rD,CAAsB,CAAtBA,EAAyBK,QAAzBL,GAAoC,IAApCA;AAbS;;AAeX9F,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO+zB,SAASpW,KAAToW,EAA+B,IAA/BA,CADY;AAEnBxY,6BAAOqwC,SAASjuC,KAATiuC;AAFY,qBAArBzG;AApEY;;AAyEd6G,0BAAQruC,KAARquC,EAAe;AACb,0BAAMA,UAAU,IAAI3xC,GAAJ,CAAQsD,MAAM8mC,MAAN9mC,CAAaquC,OAArB,CAAhB;;AACA,+BAAWX,MAAX,IAAqB1tC,MAAMspC,MAANtpC,CAAaxe,OAAlC,EAA2C;AACzCksD,6BAAOC,QAAPD,GAAkBW,QAAQhtC,GAARgtC,CAAYX,OAAOxH,KAAnBmI,CAAlBX;AAHW;;AAKblG,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO+zB,SAASpW,KAAToW,EAA+B,IAA/BA;AADY,qBAArBoxB;AA9EY;;AAkFd8G,2BAAStuC,KAATsuC,EAAgB;AACdtuC,0BAAMspC,MAANtpC,CAAa8qC,QAAb9qC,GAAwB,CAACA,MAAM8mC,MAAN9mC,CAAasuC,QAAtCtuC;AAnFY;;AAAA,iBAAhB;;AAsFA,qBAAKkpC,yBAAL,CAA+B1D,OAA/B,EAAwC2D,OAAxC;AAvFF;AA0FAmE,4BAAcntC,gBAAdmtC,CAA+B,OAA/BA,EAAwCttC,SAAS;AAC/C,sBAAM+kC,cAAc3uB,SAASpW,KAAToW,EAA+B,IAA/BA,CAApB;AACA,sBAAM/zB,QAAQ+zB,SAASpW,KAAToW,EAA+B,KAA/BA,CAAd;AACAoxB,wBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,yBAAO0iD;AAAT,iBAArByC;AAEA,qBAAKtF,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,wBAApC,EAA8D;AAC5D73C,0BAAQ,IADoD;AAE5D83C,0BAAQ;AACN7wC,sBADM;AAENnT,0BAAM,WAFA;AAGNT,yBAHM;AAINksD,8BAAUxJ,WAJJ;AAKN2G,gCAAY,IALN;AAMND,+BAAW,CANL;AAON+C,6BAAS;AAPH;AAFoD,iBAA9D;AALF;;AAmBA,mBAAKzF,kBAAL,CACEuE,aADF,EAEE,CACE,CAAC,OAAD,EAAU,OAAV,CADF,EAEE,CAAC,MAAD,EAAS,MAAT,CAFF,EAGE,CAAC,WAAD,EAAc,YAAd,CAHF,EAIE,CAAC,YAAD,EAAe,aAAf,CAJF,EAKE,CAAC,YAAD,EAAe,YAAf,CALF,EAME,CAAC,SAAD,EAAY,UAAZ,CANF,EAOE,CAAC,OAAD,EAAU,QAAV,CAPF,CAFF,EAWEttC,SAASA,MAAMspC,MAANtpC,CAAa+sC,OAXxB;AA9GF,mBA2HO;AACLO,4BAAcntC,gBAAdmtC,CAA+B,OAA/BA,EAAwC,UAAUttC,KAAV,EAAiB;AACvDwnC,wBAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,yBAAO+zB,SAASpW,KAAToW;AAAT,iBAArBoxB;AADF;AA7MK;;AAkNP,iBAAKyB,mBAAL,CAAyBqE,aAAzB;;AAEA,iBAAK1K,SAAL,CAAe5zB,WAAf,CAA2Bs+B,aAA3B;AACA,mBAAO,KAAK1K,SAAZ;AA1NgE;;AAAA;;AA8NpE,cAAM9B,sBAAN,SAAqCe,iBAArC,CAAuD;AACrD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAA1Bq7C,IACAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAD7Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAHN,CAAtB;AAKA,kBAAMq7C,UAAN,EAAkB;AAAE6B;AAAF,aAAlB;AAPmD;;AAUrDvnC,mBAAS;AAGP,kBAAMk0C,eAAe,CACnB,MADmB,EAEnB,QAFmB,EAGnB,QAHmB,EAInB,UAJmB,EAKnB,SALmB,EAMnB,KANmB,CAArB;AASA,iBAAK7L,SAAL,CAAe4B,SAAf,GAA2B,iBAA3B;;AAEA,gBAAIiK,aAAazgC,QAAbygC,CAAsB,KAAKppD,IAAL,CAAUqpD,UAAhCD,CAAJ,EAAiD;AAC/C,qBAAO,KAAK7L,SAAZ;AAfK;;AAkBP,kBAAM+L,WAAY,wBAAuB,KAAKtpD,IAAL,CAAUupD,QAAS,IAA5D;AACA,kBAAMC,iBAAiB,KAAK5M,KAAL,CAAW6M,gBAAX,CAA4BH,QAA5B,CAAvB;;AACA,gBAAIE,eAAehtD,MAAfgtD,KAA0B,CAA9B,EAAiC;AAC/B,qBAAO,KAAKjM,SAAZ;AArBK;;AAwBP,kBAAM0B,QAAQ,IAAIJ,YAAJ,CAAiB;AAC7BtB,yBAAW,KAAKA,SADa;AAE7BoB,uBAASt9C,MAAM22C,IAAN32C,CAAWmoD,cAAXnoD,CAFoB;AAG7BwoC,qBAAO,KAAK7pC,IAAL,CAAU6pC,KAHY;AAI7Bj1B,wBAAU,KAAK5U,IAAL,CAAU4U,QAJS;AAK7BkqC,gCAAkB,KAAK9+C,IAAL,CAAU8+C,gBALC;AAM7BjqC,2BAAa,KAAK7U,IAAL,CAAU6U,WANM;AAO7BkqC,wBAAU,KAAK/+C,IAAL,CAAU++C;AAPS,aAAjB,CAAd;AAYA,kBAAMjgC,OAAO,KAAKA,IAAlB;;AACA,kBAAMnb,OAAOlC,WAAKiC,aAALjC,CAAmB,CAC9B,KAAKzB,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CAD8B,EAE9B5qC,KAAKnL,IAALmL,CAAU,CAAVA,IAAe,KAAK9e,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CAAf5qC,GAAyCA,KAAKnL,IAALmL,CAAU,CAAVA,CAFX,EAG9B,KAAK9e,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CAH8B,EAI9B5qC,KAAKnL,IAALmL,CAAU,CAAVA,IAAe,KAAK9e,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CAAf5qC,GAAyCA,KAAKnL,IAALmL,CAAU,CAAVA,CAJX,CAAnBrd,CAAb;;AAMA,kBAAMkoD,YACJhmD,KAAK,CAALA,IAAU,KAAK3D,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CAAV/lD,GAAoC,KAAK3D,IAAL,CAAU0pD,UAAV,CAAqB,CAArB,CADtC;AAEA,kBAAME,WAAWjmD,KAAK,CAALA,CAAjB;AAEA,iBAAK45C,SAAL,CAAexyB,KAAf,CAAqB6yB,eAArB,GAAuC,GAAG,CAAC+L,SAAU,MAAK,CAACC,QAAS,IAApE;AACA,iBAAKrM,SAAL,CAAexyB,KAAf,CAAqBmE,IAArB,GAA4B,GAAGy6B,SAAU,IAAzC;AACA,iBAAKpM,SAAL,CAAexyB,KAAf,CAAqBkE,GAArB,GAA2B,GAAG26B,QAAS,IAAvC;AAEA,iBAAKrM,SAAL,CAAe5zB,WAAf,CAA2Bs1B,MAAM/pC,MAAN+pC,EAA3B;AACA,mBAAO,KAAK1B,SAAZ;AA9DmD;;AAAA;;AAkEvD,cAAMsB,YAAN,CAAmB;AACjBnhD,sBAAYk9C,UAAZl9C,EAAwB;AACtB,iBAAK6/C,SAAL,GAAiB3C,WAAW2C,SAA5B;AACA,iBAAKoB,OAAL,GAAe/D,WAAW+D,OAA1B;AACA,iBAAK9U,KAAL,GAAa+Q,WAAW/Q,KAAxB;AACA,iBAAKj1B,QAAL,GAAgBgmC,WAAWhmC,QAA3B;AACA,iBAAKkqC,gBAAL,GAAwBlE,WAAWkE,gBAAnC;AACA,iBAAKjqC,WAAL,GAAmB+lC,WAAW/lC,WAA9B;AACA,iBAAKkqC,QAAL,GAAgBnE,WAAWmE,QAA3B;AACA,iBAAKC,WAAL,GAAmBpE,WAAWoE,WAAXpE,IAA0B,KAA7C;AAEA,iBAAKiP,MAAL,GAAc,KAAd;AAXe;;AAcjB30C,mBAAS;AACP,kBAAM40C,qBAAqB,GAA3B;AAEA,kBAAMnuC,UAAUrQ,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAhB;AACAqQ,oBAAQwjC,SAARxjC,GAAoB,cAApBA;AAMA,iBAAKouC,WAAL,GAAmB,KAAK/K,WAAL,GAAmBrjC,OAAnB,GAA6B,KAAK4hC,SAArD;AACA,iBAAKwM,WAAL,CAAiB1F,MAAjB,GAA0B,IAA1B;AAEA,kBAAMpF,QAAQ3zC,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAd;AACA2zC,kBAAME,SAANF,GAAkB,OAAlBA;AAEA,kBAAMpV,QAAQ,KAAKA,KAAnB;;AACA,gBAAIA,KAAJ,EAAW;AAET,oBAAMloC,IAAImoD,sBAAsB,MAAMjgB,MAAM,CAANA,CAA5BigB,IAAwCjgB,MAAM,CAANA,CAAlD;AACA,oBAAMjoC,IAAIkoD,sBAAsB,MAAMjgB,MAAM,CAANA,CAA5BigB,IAAwCjgB,MAAM,CAANA,CAAlD;AACA,oBAAMhoC,IAAIioD,sBAAsB,MAAMjgB,MAAM,CAANA,CAA5BigB,IAAwCjgB,MAAM,CAANA,CAAlD;AACAoV,oBAAMl0B,KAANk0B,CAAY7N,eAAZ6N,GAA8Bx9C,WAAKC,YAALD,CAAkBE,IAAI,CAAtBF,EAAyBG,IAAI,CAA7BH,EAAgCI,IAAI,CAApCJ,CAA9Bw9C;AAtBK;;AAyBP,kBAAM+D,QAAQ13C,SAAS2Z,aAAT3Z,CAAuB,IAAvBA,CAAd;AACA03C,kBAAMgH,GAANhH,GAAY,KAAKpuC,QAAL,CAAco1C,GAA1BhH;AACAA,kBAAM1qC,WAAN0qC,GAAoB,KAAKpuC,QAAL,CAAcrV,GAAlCyjD;AACA/D,kBAAMt1B,WAANs1B,CAAkB+D,KAAlB/D;;AAKA,kBAAMgL,aAAapgC,6BAAcC,YAAdD,CAA2B,KAAKi1B,gBAAhCj1B,CAAnB;;AACA,gBAAIogC,UAAJ,EAAgB;AACd,oBAAMnL,mBAAmBxzC,SAAS2Z,aAAT3Z,CAAuB,MAAvBA,CAAzB;AACAwzC,+BAAiBK,SAAjBL,GAA6B,WAA7BA;AACAA,+BAAiBxmC,WAAjBwmC,GAA+B,oBAA/BA;AACAA,+BAAiB4D,OAAjB5D,CAAyB6D,MAAzB7D,GAAkC,wBAAlCA;AACAA,+BAAiB4D,OAAjB5D,CAAyB8D,QAAzB9D,GAAoC+D,KAAKC,SAALD,CAAe;AACjD37C,sBAAM+iD,WAAWC,kBAAXD,EAD2C;AAEjDn0C,sBAAMm0C,WAAWE,kBAAXF;AAF2C,eAAfpH,CAApC/D;AAIAG,oBAAMt1B,WAANs1B,CAAkBH,gBAAlBG;AA3CK;;AA8CP,gBACE,KAAKF,QAAL,EAAex/C,GAAf,KACC,CAAC,KAAKsV,WAAL,EAAkBtV,GAAnB,IAA0B,KAAKsV,WAAL,CAAiBtV,GAAjB,KAAyB,KAAKw/C,QAAL,CAAcx/C,GADlE,CADF,EAGE;AACA6qD,kCAASl1C,MAATk1C,CAAgB;AACdC,yBAAS,KAAKtL,QAAL,CAAcuL,IADT;AAEdj2C,wBAAQ,UAFM;AAGdya,qBAAKmwB;AAHS,eAAhBmL;;AAKAnL,oBAAMsL,SAANtL,CAAgBE,SAAhBF,GAA4B,uBAA5BA;AATF,mBAUO;AACL,oBAAMuL,WAAW,KAAKC,eAAL,CAAqB,KAAK51C,WAA1B,CAAjB;;AACAoqC,oBAAMt1B,WAANs1B,CAAkBuL,QAAlBvL;AA1DK;;AA6DP,gBAAI,CAAC59C,MAAMspC,OAANtpC,CAAc,KAAKs9C,OAAnBt9C,CAAL,EAAkC;AAChC,mBAAKs9C,OAAL,GAAe,CAAC,KAAKA,OAAN,CAAf;AA9DK;;AAkEP,uBAAWjH,OAAX,IAAsB,KAAKiH,OAA3B,EAAoC;AAClCjH,sBAAQ58B,gBAAR48B,CAAyB,OAAzBA,EAAkC,KAAKgT,OAAL,CAAa1sC,IAAb,CAAkB,IAAlB,CAAlC05B;AACAA,sBAAQ58B,gBAAR48B,CAAyB,WAAzBA,EAAsC,KAAKiT,KAAL,CAAW3sC,IAAX,CAAgB,IAAhB,EAAsB,KAAtB,CAAtC05B;AACAA,sBAAQ58B,gBAAR48B,CAAyB,UAAzBA,EAAqC,KAAKkT,KAAL,CAAW5sC,IAAX,CAAgB,IAAhB,EAAsB,KAAtB,CAArC05B;AArEK;;AAuEPuH,kBAAMnkC,gBAANmkC,CAAuB,OAAvBA,EAAgC,KAAK2L,KAAL,CAAW5sC,IAAX,CAAgB,IAAhB,EAAsB,IAAtB,CAAhCihC;AAEAtjC,oBAAQgO,WAARhO,CAAoBsjC,KAApBtjC;AACA,mBAAOA,OAAP;AAxFe;;AAmGjB8uC,kCAA8B;AAAA,gBAAd;AAAElrD,iBAAF;AAAOyqD;AAAP,aAAc;AAC5B,kBAAM/nD,IAAIqJ,SAAS2Z,aAAT3Z,CAAuB,GAAvBA,CAAV;AACArJ,cAAEk9C,SAAFl9C,GAAc,cAAdA;AACAA,cAAE+nD,GAAF/nD,GAAQ+nD,GAAR/nD;AACA,kBAAM4oD,QAAQtrD,IAAIurD,KAAJvrD,CAAU,cAAVA,CAAd;;AACA,iBAAK,IAAIT,IAAI,CAAR,EAAWiH,KAAK8kD,MAAMruD,MAA3B,EAAmCsC,IAAIiH,EAAvC,EAA2C,EAAEjH,CAA7C,EAAgD;AAC9C,oBAAMisD,OAAOF,MAAM/rD,CAAN+rD,CAAb;AACA5oD,gBAAE0nB,WAAF1nB,CAAcqJ,SAAS0/C,cAAT1/C,CAAwBy/C,IAAxBz/C,CAAdrJ;;AACA,kBAAInD,IAAIiH,KAAK,CAAb,EAAgB;AACd9D,kBAAE0nB,WAAF1nB,CAAcqJ,SAAS2Z,aAAT3Z,CAAuB,IAAvBA,CAAdrJ;AAJ4C;AALpB;;AAY5B,mBAAOA,CAAP;AA/Ge;;AAwHjByoD,oBAAU;AACR,gBAAI,KAAKb,MAAT,EAAiB;AACf,mBAAKe,KAAL,CAAW,IAAX;AADF,mBAEO;AACL,mBAAKD,KAAL,CAAW,IAAX;AAJM;AAxHO;;AAuIjBA,kBAAmB;AAAA,gBAAbM,GAAa,uEAAP,KAAO;;AACjB,gBAAIA,GAAJ,EAAS;AACP,mBAAKpB,MAAL,GAAc,IAAd;AAFe;;AAIjB,gBAAI,KAAKE,WAAL,CAAiB1F,MAArB,EAA6B;AAC3B,mBAAK0F,WAAL,CAAiB1F,MAAjB,GAA0B,KAA1B;AACA,mBAAK9G,SAAL,CAAexyB,KAAf,CAAqBmgC,MAArB,IAA+B,CAA/B;AANe;AAvIF;;AAwJjBN,kBAAoB;AAAA,gBAAdO,KAAc,uEAAN,IAAM;;AAClB,gBAAIA,KAAJ,EAAW;AACT,mBAAKtB,MAAL,GAAc,KAAd;AAFgB;;AAIlB,gBAAI,CAAC,KAAKE,WAAL,CAAiB1F,MAAlB,IAA4B,CAAC,KAAKwF,MAAtC,EAA8C;AAC5C,mBAAKE,WAAL,CAAiB1F,MAAjB,GAA0B,IAA1B;AACA,mBAAK9G,SAAL,CAAexyB,KAAf,CAAqBmgC,MAArB,IAA+B,CAA/B;AANgB;AAxJH;;AAAA;;AAmKnB,cAAMxP,yBAAN,SAAwCc,iBAAxC,CAA0D;AACxD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARsD;;AAWxDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,oBAA3B;;AAEA,gBAAI,CAAC,KAAKn/C,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAJK;;AAMP,mBAAO,KAAKu9C,SAAZ;AAjBsD;;AAAA;;AAqB1D,cAAM5B,qBAAN,SAAoCa,iBAApC,CAAsD;AACpD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARkD;;AAWpDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,gBAA3B;AAKA,kBAAMn/C,OAAO,KAAKA,IAAlB;AACA,kBAAM;AAAE+kB,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;AACA,kBAAMtvB,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuBskB,KAAvB,EAA8BC,MAA9B,CAAZ;AAIA,kBAAM+lC,OAAO,KAAK9N,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACA8lC,iBAAK1/B,YAAL0/B,CAAkB,IAAlBA,EAAwB/qD,KAAK2D,IAAL3D,CAAU,CAAVA,IAAeA,KAAKorD,eAALprD,CAAqB,CAArBA,CAAvC+qD;AACAA,iBAAK1/B,YAAL0/B,CAAkB,IAAlBA,EAAwB/qD,KAAK2D,IAAL3D,CAAU,CAAVA,IAAeA,KAAKorD,eAALprD,CAAqB,CAArBA,CAAvC+qD;AACAA,iBAAK1/B,YAAL0/B,CAAkB,IAAlBA,EAAwB/qD,KAAK2D,IAAL3D,CAAU,CAAVA,IAAeA,KAAKorD,eAALprD,CAAqB,CAArBA,CAAvC+qD;AACAA,iBAAK1/B,YAAL0/B,CAAkB,IAAlBA,EAAwB/qD,KAAK2D,IAAL3D,CAAU,CAAVA,IAAeA,KAAKorD,eAALprD,CAAqB,CAArBA,CAAvC+qD;AAGAA,iBAAK1/B,YAAL0/B,CAAkB,cAAlBA,EAAkC/qD,KAAK69C,WAAL79C,CAAiB+kB,KAAjB/kB,IAA0B,CAA5D+qD;AACAA,iBAAK1/B,YAAL0/B,CAAkB,QAAlBA,EAA4B,aAA5BA;AACAA,iBAAK1/B,YAAL0/B,CAAkB,MAAlBA,EAA0B,aAA1BA;AAEA3/B,gBAAIzB,WAAJyB,CAAgB2/B,IAAhB3/B;AACA,iBAAKmyB,SAAL,CAAe8N,MAAf,CAAsBjgC,GAAtB;;AAIA,iBAAKszB,YAAL,CAAkBqM,IAAlB,EAAwB/qD,IAAxB;;AAEA,mBAAO,KAAKu9C,SAAZ;AAzCkD;;AAAA;;AA6CtD,cAAM3B,uBAAN,SAAsCY,iBAAtC,CAAwD;AACtD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARoD;;AAWtDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,kBAA3B;AAKA,kBAAMn/C,OAAO,KAAKA,IAAlB;AACA,kBAAM;AAAE+kB,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;AACA,kBAAMtvB,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuBskB,KAAvB,EAA8BC,MAA9B,CAAZ;AAKA,kBAAM84B,cAAc99C,KAAK69C,WAAL79C,CAAiB+kB,KAArC;AACA,kBAAMumC,SAAS,KAAKrO,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAf;AACAqmC,mBAAOjgC,YAAPigC,CAAoB,GAApBA,EAAyBxN,cAAc,CAAvCwN;AACAA,mBAAOjgC,YAAPigC,CAAoB,GAApBA,EAAyBxN,cAAc,CAAvCwN;AACAA,mBAAOjgC,YAAPigC,CAAoB,OAApBA,EAA6BvmC,QAAQ+4B,WAArCwN;AACAA,mBAAOjgC,YAAPigC,CAAoB,QAApBA,EAA8BtmC,SAAS84B,WAAvCwN;AAGAA,mBAAOjgC,YAAPigC,CAAoB,cAApBA,EAAoCxN,eAAe,CAAnDwN;AACAA,mBAAOjgC,YAAPigC,CAAoB,QAApBA,EAA8B,aAA9BA;AACAA,mBAAOjgC,YAAPigC,CAAoB,MAApBA,EAA4B,aAA5BA;AAEAlgC,gBAAIzB,WAAJyB,CAAgBkgC,MAAhBlgC;AACA,iBAAKmyB,SAAL,CAAe8N,MAAf,CAAsBjgC,GAAtB;;AAIA,iBAAKszB,YAAL,CAAkB4M,MAAlB,EAA0BtrD,IAA1B;;AAEA,mBAAO,KAAKu9C,SAAZ;AA3CoD;;AAAA;;AA+CxD,cAAM1B,uBAAN,SAAsCW,iBAAtC,CAAwD;AACtD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARoD;;AAWtDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,kBAA3B;AAKA,kBAAMn/C,OAAO,KAAKA,IAAlB;AACA,kBAAM;AAAE+kB,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;AACA,kBAAMtvB,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuBskB,KAAvB,EAA8BC,MAA9B,CAAZ;AAKA,kBAAM84B,cAAc99C,KAAK69C,WAAL79C,CAAiB+kB,KAArC;AACA,kBAAMwmC,SAAS,KAAKtO,UAAL,CAAgBh4B,aAAhB,CAA8B,aAA9B,CAAf;AACAsmC,mBAAOlgC,YAAPkgC,CAAoB,IAApBA,EAA0BxmC,QAAQ,CAAlCwmC;AACAA,mBAAOlgC,YAAPkgC,CAAoB,IAApBA,EAA0BvmC,SAAS,CAAnCumC;AACAA,mBAAOlgC,YAAPkgC,CAAoB,IAApBA,EAA0BxmC,QAAQ,CAARA,GAAY+4B,cAAc,CAApDyN;AACAA,mBAAOlgC,YAAPkgC,CAAoB,IAApBA,EAA0BvmC,SAAS,CAATA,GAAa84B,cAAc,CAArDyN;AAGAA,mBAAOlgC,YAAPkgC,CAAoB,cAApBA,EAAoCzN,eAAe,CAAnDyN;AACAA,mBAAOlgC,YAAPkgC,CAAoB,QAApBA,EAA8B,aAA9BA;AACAA,mBAAOlgC,YAAPkgC,CAAoB,MAApBA,EAA4B,aAA5BA;AAEAngC,gBAAIzB,WAAJyB,CAAgBmgC,MAAhBngC;AACA,iBAAKmyB,SAAL,CAAe8N,MAAf,CAAsBjgC,GAAtB;;AAIA,iBAAKszB,YAAL,CAAkB6M,MAAlB,EAA0BvrD,IAA1B;;AAEA,mBAAO,KAAKu9C,SAAZ;AA3CoD;;AAAA;;AA+CxD,cAAMzB,yBAAN,SAAwCU,iBAAxC,CAA0D;AACxD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AAEA,iBAAK8O,kBAAL,GAA0B,oBAA1B;AACA,iBAAKC,cAAL,GAAsB,cAAtB;AAXsD;;AAcxDv2C,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,KAAKqM,kBAAhC;AAKA,kBAAMxrD,OAAO,KAAKA,IAAlB;AACA,kBAAM;AAAE+kB,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;AACA,kBAAMtvB,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuBskB,KAAvB,EAA8BC,MAA9B,CAAZ;AAMA,gBAAI+R,SAAS,EAAb;;AACA,uBAAW20B,UAAX,IAAyB1rD,KAAK2rD,QAA9B,EAAwC;AACtC,oBAAMrkC,IAAIokC,WAAWpkC,CAAXokC,GAAe1rD,KAAK2D,IAAL3D,CAAU,CAAVA,CAAzB;AACA,oBAAMunB,IAAIvnB,KAAK2D,IAAL3D,CAAU,CAAVA,IAAe0rD,WAAWnkC,CAApC;AACAwP,qBAAO33B,IAAP23B,CAAYzP,IAAI,GAAJA,GAAUC,CAAtBwP;AAlBK;;AAoBPA,qBAASA,OAAO13B,IAAP03B,CAAY,GAAZA,CAATA;AAEA,kBAAM60B,WAAW,KAAK3O,UAAL,CAAgBh4B,aAAhB,CAA8B,KAAKwmC,cAAnC,CAAjB;AACAG,qBAASvgC,YAATugC,CAAsB,QAAtBA,EAAgC70B,MAAhC60B;AAGAA,qBAASvgC,YAATugC,CAAsB,cAAtBA,EAAsC5rD,KAAK69C,WAAL79C,CAAiB+kB,KAAjB/kB,IAA0B,CAAhE4rD;AACAA,qBAASvgC,YAATugC,CAAsB,QAAtBA,EAAgC,aAAhCA;AACAA,qBAASvgC,YAATugC,CAAsB,MAAtBA,EAA8B,aAA9BA;AAEAxgC,gBAAIzB,WAAJyB,CAAgBwgC,QAAhBxgC;AACA,iBAAKmyB,SAAL,CAAe8N,MAAf,CAAsBjgC,GAAtB;;AAIA,iBAAKszB,YAAL,CAAkBkN,QAAlB,EAA4B5rD,IAA5B;;AAEA,mBAAO,KAAKu9C,SAAZ;AAnDsD;;AAAA;;AAuD1D,cAAMtB,wBAAN,SAAuCH,yBAAvC,CAAiE;AAC/Dp+C,sBAAYk9C,UAAZl9C,EAAwB;AAEtB,kBAAMk9C,UAAN;AAEA,iBAAK4Q,kBAAL,GAA0B,mBAA1B;AACA,iBAAKC,cAAL,GAAsB,aAAtB;AAN6D;;AAAA;;AAUjE,cAAM1P,sBAAN,SAAqCS,iBAArC,CAAuD;AACrD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARmD;;AAWrDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,iBAA3B;;AAEA,gBAAI,CAAC,KAAKn/C,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAJK;;AAMP,mBAAO,KAAKu9C,SAAZ;AAjBmD;;AAAA;;AAqBvD,cAAMvB,oBAAN,SAAmCQ,iBAAnC,CAAqD;AACnD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AAEA,iBAAK8O,kBAAL,GAA0B,eAA1B;AAIA,iBAAKC,cAAL,GAAsB,cAAtB;AAdiD;;AAiBnDv2C,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,KAAKqM,kBAAhC;AAIA,kBAAMxrD,OAAO,KAAKA,IAAlB;AACA,kBAAM;AAAE+kB,mBAAF;AAASC;AAAT,gBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;AACA,kBAAMtvB,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuBskB,KAAvB,EAA8BC,MAA9B,CAAZ;;AAEA,uBAAW6mC,OAAX,IAAsB7rD,KAAK8rD,QAA3B,EAAqC;AAKnC,kBAAI/0B,SAAS,EAAb;;AACA,yBAAW20B,UAAX,IAAyBG,OAAzB,EAAkC;AAChC,sBAAMvkC,IAAIokC,WAAWpkC,CAAXokC,GAAe1rD,KAAK2D,IAAL3D,CAAU,CAAVA,CAAzB;AACA,sBAAMunB,IAAIvnB,KAAK2D,IAAL3D,CAAU,CAAVA,IAAe0rD,WAAWnkC,CAApC;AACAwP,uBAAO33B,IAAP23B,CAAY,GAAGzP,CAAE,IAAGC,CAAR,EAAZwP;AATiC;;AAWnCA,uBAASA,OAAO13B,IAAP03B,CAAY,GAAZA,CAATA;AAEA,oBAAM60B,WAAW,KAAK3O,UAAL,CAAgBh4B,aAAhB,CAA8B,KAAKwmC,cAAnC,CAAjB;AACAG,uBAASvgC,YAATugC,CAAsB,QAAtBA,EAAgC70B,MAAhC60B;AAGAA,uBAASvgC,YAATugC,CAAsB,cAAtBA,EAAsC5rD,KAAK69C,WAAL79C,CAAiB+kB,KAAjB/kB,IAA0B,CAAhE4rD;AACAA,uBAASvgC,YAATugC,CAAsB,QAAtBA,EAAgC,aAAhCA;AACAA,uBAASvgC,YAATugC,CAAsB,MAAtBA,EAA8B,aAA9BA;;AAIA,mBAAKlN,YAAL,CAAkBkN,QAAlB,EAA4B5rD,IAA5B;;AAEAorB,kBAAIzB,WAAJyB,CAAgBwgC,QAAhBxgC;AAlCK;;AAqCP,iBAAKmyB,SAAL,CAAe8N,MAAf,CAAsBjgC,GAAtB;AACA,mBAAO,KAAKmyB,SAAZ;AAvDiD;;AAAA;;AA2DrD,cAAMrB,0BAAN,SAAyCM,iBAAzC,CAA2D;AACzD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAChB6B,0BADgB;AAEhBC,4BAAc,IAFE;AAGhBC,oCAAsB;AAHN,aAAlB;AARuD;;AAezDznC,mBAAS;AACP,gBAAI,CAAC,KAAKlV,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAFK;;AAKP,gBAAI,KAAKy9C,cAAT,EAAyB;AACvB,qBAAO,KAAKyB,qBAAL,CAA2B,qBAA3B,CAAP;AANK;;AASP,iBAAK3B,SAAL,CAAe4B,SAAf,GAA2B,qBAA3B;AACA,mBAAO,KAAK5B,SAAZ;AAzBuD;;AAAA;;AA6B3D,cAAMpB,0BAAN,SAAyCK,iBAAzC,CAA2D;AACzD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAChB6B,0BADgB;AAEhBC,4BAAc,IAFE;AAGhBC,oCAAsB;AAHN,aAAlB;AARuD;;AAezDznC,mBAAS;AACP,gBAAI,CAAC,KAAKlV,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAFK;;AAKP,gBAAI,KAAKy9C,cAAT,EAAyB;AACvB,qBAAO,KAAKyB,qBAAL,CAA2B,qBAA3B,CAAP;AANK;;AASP,iBAAK3B,SAAL,CAAe4B,SAAf,GAA2B,qBAA3B;AACA,mBAAO,KAAK5B,SAAZ;AAzBuD;;AAAA;;AA6B3D,cAAMnB,yBAAN,SAAwCI,iBAAxC,CAA0D;AACxD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAChB6B,0BADgB;AAEhBC,4BAAc,IAFE;AAGhBC,oCAAsB;AAHN,aAAlB;AARsD;;AAexDznC,mBAAS;AACP,gBAAI,CAAC,KAAKlV,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAFK;;AAKP,gBAAI,KAAKy9C,cAAT,EAAyB;AACvB,qBAAO,KAAKyB,qBAAL,CAA2B,oBAA3B,CAAP;AANK;;AASP,iBAAK3B,SAAL,CAAe4B,SAAf,GAA2B,oBAA3B;AACA,mBAAO,KAAK5B,SAAZ;AAzBsD;;AAAA;;AA6B1D,cAAMlB,0BAAN,SAAyCG,iBAAzC,CAA2D;AACzD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAChB6B,0BADgB;AAEhBC,4BAAc,IAFE;AAGhBC,oCAAsB;AAHN,aAAlB;AARuD;;AAezDznC,mBAAS;AACP,gBAAI,CAAC,KAAKlV,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAFK;;AAKP,gBAAI,KAAKy9C,cAAT,EAAyB;AACvB,qBAAO,KAAKyB,qBAAL,CAA2B,qBAA3B,CAAP;AANK;;AASP,iBAAK3B,SAAL,CAAe4B,SAAf,GAA2B,qBAA3B;AACA,mBAAO,KAAK5B,SAAZ;AAzBuD;;AAAA;;AA6B3D,cAAMjB,sBAAN,SAAqCE,iBAArC,CAAuD;AACrD9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAM++C,eAAe,CAAC,EACpB7B,WAAW56C,IAAX46C,CAAgB4H,QAAhB5H,IACAA,WAAW56C,IAAX46C,CAAgBhmC,QAAhBgmC,EAA0Br7C,GAD1Bq7C,IAEAA,WAAW56C,IAAX46C,CAAgB/lC,WAAhB+lC,EAA6Br7C,GAF7Bq7C,IAGAA,WAAW56C,IAAX46C,CAAgBmE,QAAhBnE,EAA0Br7C,GAJN,CAAtB;AAMA,kBAAMq7C,UAAN,EAAkB;AAAE6B,0BAAF;AAAgBC,4BAAc;AAA9B,aAAlB;AARmD;;AAWrDxnC,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,iBAA3B;;AAEA,gBAAI,CAAC,KAAKn/C,IAAL,CAAUwiD,QAAf,EAAyB;AACvB,mBAAK9D,YAAL,CAAkB,IAAlB,EAAwB,KAAK1+C,IAA7B;AAJK;;AAMP,mBAAO,KAAKu9C,SAAZ;AAjBmD;;AAAA;;AAqBvD,cAAMhB,+BAAN,SAA8CC,iBAA9C,CAAgE;AAC9D9+C,sBAAYk9C,UAAZl9C,EAAwB;AACtB,kBAAMk9C,UAAN,EAAkB;AAAE6B,4BAAc;AAAhB,aAAlB;AAEA,kBAAM;AAAE76B,sBAAF;AAAYmqC;AAAZ,gBAAwB,KAAK/rD,IAAL,CAAUgsD,IAAxC;AACA,iBAAKpqC,QAAL,GAAgBoG,uCAAmBpG,QAAnBoG,CAAhB;AACA,iBAAK+jC,OAAL,GAAeA,OAAf;AAEA,iBAAKlP,WAAL,CAAiB0E,QAAjB,EAA2BC,QAA3B,CAAoC,0BAApC,EAAgE;AAC9D73C,sBAAQ,IADsD;AAE9DiH,kBAAInL,6BAAkBmc,QAAlBnc,CAF0D;AAG9Dmc,sBAH8D;AAI9DmqC;AAJ8D,aAAhE;AAR4D;;AAgB9D72C,mBAAS;AACP,iBAAKqoC,SAAL,CAAe4B,SAAf,GAA2B,0BAA3B;AAEA,kBAAMR,UAAUrzC,SAAS2Z,aAAT3Z,CAAuB,KAAvBA,CAAhB;AACAqzC,oBAAQ5zB,KAAR4zB,CAAc35B,MAAd25B,GAAuB,KAAKpB,SAAL,CAAexyB,KAAf,CAAqB/F,MAA5C25B;AACAA,oBAAQ5zB,KAAR4zB,CAAc55B,KAAd45B,GAAsB,KAAKpB,SAAL,CAAexyB,KAAf,CAAqBhG,KAA3C45B;AACAA,oBAAQ7jC,gBAAR6jC,CAAyB,UAAzBA,EAAqC,KAAKsN,SAAL,CAAejuC,IAAf,CAAoB,IAApB,CAArC2gC;;AAEA,gBACE,CAAC,KAAK3+C,IAAL,CAAUwiD,QAAX,KACC,KAAKxiD,IAAL,CAAU4U,QAAV,EAAoBrV,GAApB,IACC,KAAKS,IAAL,CAAU6U,WAAV,EAAuBtV,GADxB,IAEC,KAAKS,IAAL,CAAU++C,QAHZ,CADF,EAKE;AACA,mBAAKL,YAAL,CAAkBC,OAAlB,EAA2B,KAAK3+C,IAAhC;AAdK;;AAiBP,iBAAKu9C,SAAL,CAAe5zB,WAAf,CAA2Bg1B,OAA3B;AACA,mBAAO,KAAKpB,SAAZ;AAlC4D;;AA2C9D0O,sBAAY;AACV,iBAAKnP,eAAL,EAAsBoP,kBAAtB,CACE,KAAK3O,SADP,EAEE,KAAKwO,OAFP,EAGE,KAAKnqC,QAHP;AA5C4D;;AAAA;;AAqEhE,cAAMuqC,eAAN,CAAsB;AAQpB,iBAAOj3C,MAAP,CAAc0lC,UAAd,EAA0B;AACxB,kBAAMwR,oBAAoB,EAA1B;AAAA,kBACEC,mBAAmB,EADrB;;AAKA,uBAAWrsD,IAAX,IAAmB46C,WAAWlmC,WAA9B,EAA2C;AACzC,kBAAI,CAAC1U,IAAL,EAAW;AACT;AAFuC;;AAIzC,oBAAM;AAAE+kB,qBAAF;AAASC;AAAT,kBAAoB01B,YAAY16C,KAAK2D,IAAjB+2C,CAA1B;;AACA,kBAAI31B,SAAS,CAATA,IAAcC,UAAU,CAA5B,EAA+B;AAC7B;AANuC;;AAQzC,kBAAIhlB,KAAK66C,cAAL76C,KAAwB7U,qBAAegB,KAA3C,EAAkD;AAChDkgE,iCAAiBjtD,IAAjBitD,CAAsBrsD,IAAtBqsD;AACA;AAVuC;;AAYzCD,gCAAkBhtD,IAAlBgtD,CAAuBpsD,IAAvBosD;AAlBsB;;AAoBxB,gBAAIC,iBAAiB7vD,MAArB,EAA6B;AAC3B4vD,gCAAkBhtD,IAAlBgtD,CAAuB,GAAGC,gBAA1BD;AArBsB;;AAwBxB,kBAAMt9B,MAAM8rB,WAAW9rB,GAAvB;;AAEA,uBAAW9uB,IAAX,IAAmBosD,iBAAnB,EAAsC;AACpC,oBAAM1U,UAAUiD,yBAAyBl6C,MAAzBk6C,CAAgC;AAC9C36C,oBAD8C;AAE9C48C,uBAAO9tB,GAFuC;AAG9ChQ,sBAAM87B,WAAW97B,IAH6B;AAI9C1J,0BAAUwlC,WAAWxlC,QAJyB;AAK9CynC,6BAAajC,WAAWiC,WALsB;AAM9CC,iCAAiBlC,WAAWkC,eANkB;AAO9CC,oCAAoBnC,WAAWmC,kBAAXnC,IAAiC,EAPP;AAQ9CoC,6BAAapC,WAAWoC,WAAXpC,KAA2B,KARM;AAS9CqC,4BAAY,IAAIz2B,4BAAJ,EATkC;AAU9CvW,mCACE2qC,WAAW3qC,iBAAX2qC,IAAgC,IAAIj8B,qCAAJ,EAXY;AAY9Cu+B,iCAAiBtC,WAAWsC,eAZkB;AAa9C5qC,8BAAcsoC,WAAWtoC,YAbqB;AAc9C8qC,8BAAcxC,WAAWwC,YAdqB;AAe9CE,4BAAY1C,WAAW0C,UAAX1C,IAAyB;AAAE6L,0BAAQ;AAAV;AAfS,eAAhC9L,CAAhB;;AAiBA,kBAAIjD,QAAQ+E,YAAZ,EAA0B;AACxB,sBAAM6P,WAAW5U,QAAQxiC,MAARwiC,EAAjB;;AACA,oBAAI13C,KAAKqkD,MAAT,EAAiB;AACfiI,2BAASvhC,KAATuhC,CAAev9B,UAAfu9B,GAA4B,QAA5BA;AAHsB;;AAKxB,oBAAIjrD,MAAMspC,OAANtpC,CAAcirD,QAAdjrD,CAAJ,EAA6B;AAC3B,6BAAWkrD,eAAX,IAA8BD,QAA9B,EAAwC;AACtCx9B,wBAAInF,WAAJmF,CAAgBy9B,eAAhBz9B;AAFyB;AAA7B,uBAIO;AACL,sBAAI4oB,mBAAmB+D,sBAAvB,EAA+C;AAG7C3sB,wBAAI09B,OAAJ19B,CAAYw9B,QAAZx9B;AAHF,yBAIO;AACLA,wBAAInF,WAAJmF,CAAgBw9B,QAAhBx9B;AANG;AATiB;AAlBU;AA1Bd;;AAiExB,iBAAK29B,uBAAL,CAA6B39B,GAA7B,EAAkC8rB,WAAWllC,mBAA7C;AAzEkB;;AAmFpB,iBAAOg3C,MAAP,CAAc9R,UAAd,EAA0B;AACxB,kBAAM;AAAE97B,kBAAF;AAAQ1J,sBAAR;AAAkBV,yBAAlB;AAA+BgB,iCAA/B;AAAoDoZ;AAApD,gBACJ8rB,UADF;AAEA,kBAAM9mD,YAAYshB,SAASthB,SAA3B;AACA,kBAAMo2C,SAAU,UAASp2C,UAAUuL,IAAVvL,CAAe,GAAfA,CAAoB,GAA7C;AAEA,gBAAI+f,KAAJ,EAAW84C,SAAX;;AACA,uBAAW3sD,IAAX,IAAmB0U,WAAnB,EAAgC;AAC9B,oBAAMk4C,WAAW99B,IAAI26B,gBAAJ36B,CACd,wBAAuB9uB,KAAK4Q,EAAG,IADjBke,CAAjB;;AAGA,kBAAI89B,QAAJ,EAAc;AACZ,2BAAWlV,OAAX,IAAsBkV,QAAtB,EAAgC;AAC9B,sBAAI5sD,KAAKurC,YAAT,EAAuB;AACrB,0BAAM5nC,OAAOlC,WAAKiC,aAALjC,CAAmB,CAC9BzB,KAAK2D,IAAL3D,CAAU,CAAVA,CAD8B,EAE9B8e,KAAKnL,IAALmL,CAAU,CAAVA,IAAe9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAAf8e,GAA8BA,KAAKnL,IAALmL,CAAU,CAAVA,CAFA,EAG9B9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAH8B,EAI9B8e,KAAKnL,IAALmL,CAAU,CAAVA,IAAe9e,KAAK2D,IAAL3D,CAAU,CAAVA,CAAf8e,GAA8BA,KAAKnL,IAALmL,CAAU,CAAVA,CAJA,CAAnBrd,CAAb;;AAOA,wBAAI,CAACkrD,SAAL,EAAgB;AAId94C,8BAAQ7U,KAAKoG,GAALpG,CAASlL,UAAU,CAAVA,KAAgBA,UAAU,CAAVA,CAAzBkL,CAAR6U;AACA,4BAAMg5C,eAAe/4D,UAAU4O,KAAV5O,EAArB;;AACA,2BAAK,IAAIgL,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1B+tD,qCAAa/tD,CAAb+tD,IAAkB7tD,KAAK2+C,IAAL3+C,CAAU6tD,aAAa/tD,CAAb+tD,CAAV7tD,CAAlB6tD;AAPY;;AASdF,kCAAa,UAASE,aAAaxtD,IAAbwtD,CAAkB,GAAlBA,CAAuB,GAA7CF;AAjBmB;;AAoBrB,0BAAMz9B,OAAOvrB,KAAK,CAALA,IAAUkQ,KAAvB;AACA,0BAAMob,MAAMtrB,KAAK,CAALA,IAAUkQ,KAAtB;AACA6jC,4BAAQ3sB,KAAR2sB,CAAcxoB,IAAdwoB,GAAqB,GAAGxoB,IAAK,IAA7BwoB;AACAA,4BAAQ3sB,KAAR2sB,CAAczoB,GAAdyoB,GAAoB,GAAGzoB,GAAI,IAA3ByoB;AACAA,4BAAQ3sB,KAAR2sB,CAAckG,eAAdlG,GAAgC,GAAG,CAACxoB,IAAK,MAAK,CAACD,GAAI,IAAnDyoB;AACAA,4BAAQ3sB,KAAR2sB,CAAc5jD,SAAd4jD,GAA0BiV,SAA1BjV;AAzBF,yBA0BO;AACLA,4BAAQ3sB,KAAR2sB,CAAc5jD,SAAd4jD,GAA0BxN,MAA1BwN;AA5B4B;AADpB;AAJgB;AAPR;;AA8CxB,iBAAK+U,uBAAL,CAA6B39B,GAA7B,EAAkCpZ,mBAAlC;AACAoZ,gBAAIu1B,MAAJv1B,GAAa,KAAbA;AAlIkB;;AAqIpB,iBAAO29B,uBAAP,CAA+B39B,GAA/B,EAAoCpZ,mBAApC,EAAyD;AACvD,gBAAI,CAACA,mBAAL,EAA0B;AACxB;AAFqD;;AAIvD,uBAAW,CAAC9E,EAAD,EAAK4S,MAAL,CAAX,IAA2B9N,mBAA3B,EAAgD;AAC9C,oBAAMgiC,UAAU5oB,IAAIg+B,aAAJh+B,CAAmB,wBAAuBle,EAAG,IAA7Cke,CAAhB;;AACA,kBAAI,CAAC4oB,OAAL,EAAc;AACZ;AAH4C;;AAM9C,oBAAM;AAAEqV;AAAF,kBAAiBrV,OAAvB;;AACA,kBAAIqV,WAAWC,QAAXD,KAAwB,QAA5B,EAAsC;AACpCrV,wBAAQuV,YAARvV,CAAqBl0B,MAArBk0B,EAA6BqV,UAA7BrV;AADF,qBAEO;AACLA,wBAAQqR,YAARrR,CAAqBl0B,MAArBk0B,EAA6BqV,UAA7BrV;AAV4C;AAJO;;AAiBvDhiC,gCAAoBiE,KAApBjE;AAtJkB;;AAAA;;;;;;;;;;;;;;ACpuEtB,iBAASw3C,aAAT,CAAuB5rD,CAAvB,EAA0B;AACxB,iBAAOtC,KAAKqmC,KAALrmC,CAAWA,KAAK6D,GAAL7D,CAAS,CAATA,EAAYA,KAAKC,GAALD,CAAS,CAATA,EAAYsC,CAAZtC,CAAZA,IAA8B,GAAzCA,EACJuC,QADIvC,CACK,EADLA,EAEJwC,QAFIxC,CAEK,CAFLA,EAEQ,GAFRA,CAAP;AAvBF;;AA6BA,cAAMklD,eAAN,CAAsB;AACpB,iBAAOiJ,MAAP,SAA4B;AAAA,gBAAd,CAAC/pD,CAAD,EAAImkB,CAAJ,EAAOrlB,CAAP,EAAU41B,CAAV,CAAc;AAC1B,mBAAO,CAAC,GAAD,EAAM,IAAI94B,KAAKC,GAALD,CAAS,CAATA,EAAY,MAAMoE,CAAN,GAAU,OAAOlB,CAAjB,GAAqB,OAAOqlB,CAA5B,GAAgCuQ,CAA5C94B,CAAV,CAAP;AAFkB;;AAKpB,iBAAOouD,MAAP,SAAmB;AAAA,gBAAL,CAACxrD,CAAD,CAAK;AACjB,mBAAO,CAAC,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,IAAIA,CAAtB,CAAP;AANkB;;AASpB,iBAAOyrD,KAAP,SAAkB;AAAA,gBAAL,CAACzrD,CAAD,CAAK;AAChB,mBAAO,CAAC,KAAD,EAAQA,CAAR,EAAWA,CAAX,EAAcA,CAAd,CAAP;AAVkB;;AAapB,iBAAO0rD,MAAP,SAAmB;AAAA,gBAAL,CAAC1rD,CAAD,CAAK;AACjB,kBAAM2rD,IAAIL,cAActrD,CAAdsrD,CAAV;AACA,mBAAQ,IAAGK,CAAJ,GAAQA,CAAR,GAAYA,CAAZ,EAAP;AAfkB;;AAkBpB,iBAAOC,KAAP,SAAwB;AAAA,gBAAX,CAAC7rD,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAW;AACtB,mBAAO,CAAC,GAAD,EAAM,MAAMF,CAAN,GAAU,OAAOC,CAAjB,GAAqB,OAAOC,CAAlC,CAAP;AAnBkB;;AAsBpB,iBAAO4rD,QAAP,SAA2B;AAAA,gBAAX,CAAC9rD,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAW;AACzB,kBAAM6rD,IAAIR,cAAcvrD,CAAdurD,CAAV;AACA,kBAAMK,IAAIL,cAActrD,CAAdsrD,CAAV;AACA,kBAAMS,IAAIT,cAAcrrD,CAAdqrD,CAAV;AACA,mBAAQ,IAAGQ,CAAJ,GAAQH,CAAR,GAAYI,CAAZ,EAAP;AA1BkB;;AA6BpB,iBAAOC,MAAP,GAAgB;AACd,mBAAO,WAAP;AA9BkB;;AAiCpB,iBAAOC,QAAP,SAA8B;AAAA,gBAAd,CAACzqD,CAAD,EAAImkB,CAAJ,EAAOrlB,CAAP,EAAU41B,CAAV,CAAc;AAC5B,mBAAO,CACL,KADK,EAEL,IAAI94B,KAAKC,GAALD,CAAS,CAATA,EAAYoE,IAAI00B,CAAhB94B,CAFC,EAGL,IAAIA,KAAKC,GAALD,CAAS,CAATA,EAAYkD,IAAI41B,CAAhB94B,CAHC,EAIL,IAAIA,KAAKC,GAALD,CAAS,CAATA,EAAYuoB,IAAIuQ,CAAhB94B,CAJC,CAAP;AAlCkB;;AA0CpB,iBAAO8uD,SAAP,CAAiBC,UAAjB,EAA6B;AAC3B,mBAAO,KAAKN,QAAL,CAAc,KAAKI,QAAL,CAAcE,UAAd,CAAd,CAAP;AA3CkB;;AA8CpB,iBAAOC,QAAP,SAA2B;AAAA,gBAAX,CAACrsD,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAW;AACzB,kBAAMuB,IAAI,IAAIzB,CAAd;AACA,kBAAMO,IAAI,IAAIN,CAAd;AACA,kBAAM2lB,IAAI,IAAI1lB,CAAd;AACA,kBAAMi2B,IAAI94B,KAAKC,GAALD,CAASoE,CAATpE,EAAYkD,CAAZlD,EAAeuoB,CAAfvoB,CAAV;AACA,mBAAO,CAAC,MAAD,EAASoE,CAAT,EAAYlB,CAAZ,EAAeqlB,CAAf,EAAkBuQ,CAAlB,CAAP;AAnDkB;;AAAA;;;;;;;;;;;;;;ACXtB;;AACA;;AAYA,cAAMsyB,QAAN,CAAe;AACb,iBAAO6D,YAAP,CAAoB3D,IAApB,EAA0B15C,EAA1B,EAA8B8mC,OAA9B,EAAuCyK,OAAvC,EAAgD9tC,MAAhD,EAAwD;AACtD,kBAAM+wC,aAAajD,QAAQpxB,QAARoxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,qBAAO;AAAT,aAArBmlD,CAAnB;;AACA,oBAAQzK,QAAQj6C,IAAhB;AACE,mBAAK,UAAL;AACE,oBAAI2nD,WAAWpoD,KAAXooD,KAAqB,IAAzB,EAA+B;AAC7BkF,uBAAKhyC,WAALgyC,GAAmBlF,WAAWpoD,KAA9BstD;AAFJ;;AAIE,oBAAIj2C,WAAW,OAAf,EAAwB;AACtB;AALJ;;AAOEi2C,qBAAKxvC,gBAALwvC,CAAsB,OAAtBA,EAA+B3vC,SAAS;AACtCwnC,0BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,2BAAO2d,MAAMspC,MAANtpC,CAAa3d;AAAtB,mBAArBmlD;AADF;AAGA;;AACF,mBAAK,OAAL;AACE,oBACEzK,QAAQ5sB,UAAR4sB,CAAmBlvC,IAAnBkvC,KAA4B,OAA5BA,IACAA,QAAQ5sB,UAAR4sB,CAAmBlvC,IAAnBkvC,KAA4B,UAF9B,EAGE;AACA,sBAAI0N,WAAWpoD,KAAXooD,KAAqB1N,QAAQ5sB,UAAR4sB,CAAmBwW,KAA5C,EAAmD;AACjD5D,yBAAKj/B,YAALi/B,CAAkB,SAAlBA,EAA6B,IAA7BA;AADF,yBAEO,IAAIlF,WAAWpoD,KAAXooD,KAAqB1N,QAAQ5sB,UAAR4sB,CAAmByW,MAA5C,EAAoD;AAGzD7D,yBAAK3F,eAAL2F,CAAqB,SAArBA;AANF;;AAQA,sBAAIj2C,WAAW,OAAf,EAAwB;AACtB;AATF;;AAWAi2C,uBAAKxvC,gBAALwvC,CAAsB,QAAtBA,EAAgC3vC,SAAS;AACvCwnC,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AACnBnlD,6BAAO2d,MAAMspC,MAANtpC,CAAa+sC,OAAb/sC,GACHA,MAAMspC,MAANtpC,CAAayzC,YAAbzzC,CAA0B,OAA1BA,CADGA,GAEHA,MAAMspC,MAANtpC,CAAayzC,YAAbzzC,CAA0B,QAA1BA;AAHe,qBAArBwnC;AADF;AAdF,uBAqBO;AACL,sBAAIiD,WAAWpoD,KAAXooD,KAAqB,IAAzB,EAA+B;AAC7BkF,yBAAKj/B,YAALi/B,CAAkB,OAAlBA,EAA2BlF,WAAWpoD,KAAtCstD;AAFG;;AAIL,sBAAIj2C,WAAW,OAAf,EAAwB;AACtB;AALG;;AAOLi2C,uBAAKxvC,gBAALwvC,CAAsB,OAAtBA,EAA+B3vC,SAAS;AACtCwnC,4BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD,6BAAO2d,MAAMspC,MAANtpC,CAAa3d;AAAtB,qBAArBmlD;AADF;AA7BJ;;AAiCE;;AACF,mBAAK,QAAL;AACE,oBAAIiD,WAAWpoD,KAAXooD,KAAqB,IAAzB,EAA+B;AAC7B,6BAAWiD,MAAX,IAAqB3Q,QAAQziC,QAA7B,EAAuC;AACrC,wBAAIozC,OAAOv9B,UAAPu9B,CAAkBrrD,KAAlBqrD,KAA4BjD,WAAWpoD,KAA3C,EAAkD;AAChDqrD,6BAAOv9B,UAAPu9B,CAAkBC,QAAlBD,GAA6B,IAA7BA;AAFmC;AADV;AADjC;;AAQEiC,qBAAKxvC,gBAALwvC,CAAsB,OAAtBA,EAA+B3vC,SAAS;AACtC,wBAAMxe,UAAUwe,MAAMspC,MAANtpC,CAAaxe,OAA7B;AACA,wBAAMa,QACJb,QAAQusD,aAARvsD,KAA0B,CAAC,CAA3BA,GACI,EADJA,GAEIA,QAAQA,QAAQusD,aAAhBvsD,EAA+Ba,KAHrC;AAIAmlD,0BAAQlxB,QAARkxB,CAAiBvxC,EAAjBuxC,EAAqB;AAAEnlD;AAAF,mBAArBmlD;AANF;AAQA;AA9DJ;AAHW;;AAqEb,iBAAOkM,aAAP,SAA6E;AAAA,gBAAxD;AAAE/D,kBAAF;AAAQ5S,qBAAR;AAAiByK,wBAAU,IAA3B;AAAiC9tC,oBAAjC;AAAyCwoC;AAAzC,aAAwD;AAC3E,kBAAM;AAAE/xB;AAAF,gBAAiB4sB,OAAvB;AACA,kBAAM4W,sBAAsBhE,gBAAgBiE,iBAA5C;;AAEA,gBAAIzjC,WAAWtiB,IAAXsiB,KAAoB,OAAxB,EAAiC;AAG/BA,yBAAWrtB,IAAXqtB,GAAkB,GAAGA,WAAWrtB,IAAK,IAAG4W,MAAtB,EAAlByW;AAPyE;;AAS3E,uBAAW,CAACpqB,GAAD,EAAM1D,KAAN,CAAX,IAA2BC,OAAOo0B,OAAPp0B,CAAe6tB,UAAf7tB,CAA3B,EAAuD;AAIrD,kBAAID,UAAU,IAAVA,IAAkBA,UAAUwB,SAA5BxB,IAAyC0D,QAAQ,QAArD,EAA+D;AAC7D;AALmD;;AAQrD,kBAAIA,QAAQ,OAAZ,EAAqB;AACnB,oBAAIA,QAAQ,aAAZ,EAA2B;AACzB4pD,uBAAKhyC,WAALgyC,GAAmBttD,KAAnBstD;AADF,uBAEO,IAAI5pD,QAAQ,OAAZ,EAAqB;AAC1B,sBAAI1D,MAAMR,MAAV,EAAkB;AAChB8tD,yBAAKj/B,YAALi/B,CAAkB5pD,GAAlB4pD,EAAuBttD,MAAMqC,IAANrC,CAAW,GAAXA,CAAvBstD;AAFwB;AAArB,uBAIA;AACL,sBAAIgE,wBAAwB5tD,QAAQ,MAARA,IAAkBA,QAAQ,WAAlD4tD,CAAJ,EAAoE;AAClE;AAFG;;AAILhE,uBAAKj/B,YAALi/B,CAAkB5pD,GAAlB4pD,EAAuBttD,KAAvBstD;AAXiB;AAArB,qBAaO;AACLrtD,uBAAO+b,MAAP/b,CAAcqtD,KAAKv/B,KAAnB9tB,EAA0BD,KAA1BC;AAtBmD;AAToB;;AAmC3E,gBAAIqxD,mBAAJ,EAAyB;AACvB,kBAEE,CAACzR,YAAYyD,iBAFf,EAGE;AACAplD,gCACE,2FADFA;AALqB;;AASvB2hD,0BAAYyD,iBAAZzD,GACEyN,IADFzN,EAEE/xB,WAAW3gB,IAFb0yC,EAGE/xB,WAAWy1B,SAHb1D;AA5CyE;;AAqD3E,gBAAIsF,WAAWr3B,WAAW0jC,MAA1B,EAAkC;AAChC,mBAAKP,YAAL,CAAkB3D,IAAlB,EAAwBx/B,WAAW0jC,MAAnC,EAA2C9W,OAA3C,EAAoDyK,OAApD;AAtDyE;AArEhE;;AAoIb,iBAAOjtC,MAAP,CAAc0lC,UAAd,EAA0B;AACxB,kBAAMuH,UAAUvH,WAAW3qC,iBAA3B;AACA,kBAAM4sC,cAAcjC,WAAWiC,WAA/B;AACA,kBAAMl0D,OAAOiyD,WAAWyP,OAAxB;AACA,kBAAMh2C,SAASumC,WAAWvmC,MAAXumC,IAAqB,SAApC;AACA,kBAAM6T,WAAWnjD,SAAS2Z,aAAT3Z,CAAuB3iB,KAAK8U,IAA5B6N,CAAjB;;AACA,gBAAI3iB,KAAKmiC,UAAT,EAAqB;AACnB,mBAAKujC,aAAL,CAAmB;AACjB/D,sBAAMmE,QADW;AAEjB/W,yBAAS/uD,IAFQ;AAGjB0rB,sBAHiB;AAIjBwoC;AAJiB,eAAnB;AAPsB;;AAcxB,kBAAM6R,QAAQ,CAAC,CAAC/lE,IAAD,EAAO,CAAC,CAAR,EAAW8lE,QAAX,CAAD,CAAd;AAEA,kBAAME,UAAU/T,WAAW9rB,GAA3B;AACA6/B,oBAAQhlC,WAARglC,CAAoBF,QAApBE;;AAEA,gBAAI/T,WAAWxlC,QAAf,EAAyB;AACvB,oBAAMthB,YAAa,UAAS8mD,WAAWxlC,QAAXwlC,CAAoB9mD,SAApB8mD,CAA8Bv7C,IAA9Bu7C,CAAmC,GAAnCA,CAAwC,GAApE;AACA+T,sBAAQ5jC,KAAR4jC,CAAc76D,SAAd66D,GAA0B76D,SAA1B66D;AArBsB;;AAyBxB,gBAAIt6C,WAAW,UAAf,EAA2B;AACzBs6C,sBAAQtjC,YAARsjC,CAAqB,OAArBA,EAA8B,kBAA9BA;AA1BsB;;AA8BxB,kBAAMC,WAAW,EAAjB;;AAEA,mBAAOF,MAAMlyD,MAANkyD,GAAe,CAAtB,EAAyB;AACvB,oBAAM,CAACG,MAAD,EAAS/vD,CAAT,EAAYwrD,IAAZ,IAAoBoE,MAAMA,MAAMlyD,MAANkyD,GAAe,CAArBA,CAA1B;;AACA,kBAAI5vD,IAAI,CAAJA,KAAU+vD,OAAO55C,QAAP45C,CAAgBryD,MAA9B,EAAsC;AACpCkyD,sBAAM34B,GAAN24B;AACA;AAJqB;;AAOvB,oBAAMnU,QAAQsU,OAAO55C,QAAP45C,CAAgB,EAAEH,MAAMA,MAAMlyD,MAANkyD,GAAe,CAArBA,EAAwB,CAAxBA,CAAlBG,CAAd;;AACA,kBAAItU,UAAU,IAAd,EAAoB;AAClB;AATqB;;AAYvB,oBAAM;AAAE98C;AAAF,kBAAW88C,KAAjB;;AACA,kBAAI98C,SAAS,OAAb,EAAsB;AACpB,sBAAM48C,OAAO/uC,SAAS0/C,cAAT1/C,CAAwBivC,MAAMv9C,KAA9BsO,CAAb;AACAsjD,yBAASxvD,IAATwvD,CAAcvU,IAAduU;AACAtE,qBAAK3gC,WAAL2gC,CAAiBjQ,IAAjBiQ;AACA;AAjBqB;;AAoBvB,kBAAIwE,SAAJ;;AACA,kBAAIvU,OAAOzvB,UAAPyvB,EAAmBwU,KAAvB,EAA8B;AAC5BD,4BAAYxjD,SAASqb,eAATrb,CAAyBivC,MAAMzvB,UAANyvB,CAAiBwU,KAA1CzjD,EAAiD7N,IAAjD6N,CAAZwjD;AADF,qBAEO;AACLA,4BAAYxjD,SAAS2Z,aAAT3Z,CAAuB7N,IAAvB6N,CAAZwjD;AAxBqB;;AA2BvBxE,mBAAK3gC,WAAL2gC,CAAiBwE,SAAjBxE;;AACA,kBAAI/P,MAAMzvB,UAAV,EAAsB;AACpB,qBAAKujC,aAAL,CAAmB;AACjB/D,wBAAMwE,SADW;AAEjBpX,2BAAS6C,KAFQ;AAGjB4H,yBAHiB;AAIjB9tC,wBAJiB;AAKjBwoC;AALiB,iBAAnB;AA7BqB;;AAsCvB,kBAAItC,MAAMtlC,QAANslC,IAAkBA,MAAMtlC,QAANslC,CAAe/9C,MAAf+9C,GAAwB,CAA9C,EAAiD;AAC/CmU,sBAAMtvD,IAANsvD,CAAW,CAACnU,KAAD,EAAQ,CAAC,CAAT,EAAYuU,SAAZ,CAAXJ;AADF,qBAEO,IAAInU,MAAMv9C,KAAV,EAAiB;AACtB,sBAAMq9C,OAAO/uC,SAAS0/C,cAAT1/C,CAAwBivC,MAAMv9C,KAA9BsO,CAAb;;AACA,oBAAIoN,kBAAQ4hC,eAAR5hC,CAAwBjb,IAAxBib,CAAJ,EAAmC;AACjCk2C,2BAASxvD,IAATwvD,CAAcvU,IAAduU;AAHoB;;AAKtBE,0BAAUnlC,WAAVmlC,CAAsBzU,IAAtByU;AA7CqB;AAhCD;;AAiGxB,uBAAWE,EAAX,IAAiBL,QAAQlF,gBAARkF,CACf,uDADeA,CAAjB,EAEG;AACDK,iBAAG3jC,YAAH2jC,CAAgB,UAAhBA,EAA4B,IAA5BA;AApGsB;;AAuGxB,mBAAO;AACLJ;AADK,aAAP;AA3OW;;AAqPb,iBAAOlC,MAAP,CAAc9R,UAAd,EAA0B;AACxB,kBAAM9mD,YAAa,UAAS8mD,WAAWxlC,QAAXwlC,CAAoB9mD,SAApB8mD,CAA8Bv7C,IAA9Bu7C,CAAmC,GAAnCA,CAAwC,GAApE;AACAA,uBAAW9rB,GAAX8rB,CAAe7vB,KAAf6vB,CAAqB9mD,SAArB8mD,GAAiC9mD,SAAjC8mD;AACAA,uBAAW9rB,GAAX8rB,CAAeyJ,MAAfzJ,GAAwB,KAAxBA;AAxPW;;AAAA;;;;;;;;;;;;;;AChBf;;AA6BA,cAAMqU,0BAA0B,MAAhC;AACA,cAAMC,oBAAoB,EAA1B;AACA,cAAMC,sBAAsB,GAA5B;AACA,cAAMC,cAAc,IAAI77C,GAAJ,EAApB;AACA,cAAM87C,sBAAsB,QAA5B;;AAEA,iBAASC,SAAT,CAAmBlgC,UAAnB,EAA+BlB,GAA/B,EAAoC;AAClC,gBAAMqhC,eAAeH,YAAYvnD,GAAZunD,CAAgBhgC,UAAhBggC,CAArB;;AACA,cAAIG,YAAJ,EAAkB;AAChB,mBAAOA,YAAP;AAHgC;;AAMlCrhC,cAAIt6B,IAAJs6B;AACAA,cAAI70B,IAAJ60B,GAAW,GAAGghC,iBAAkB,MAAK9/B,UAA1B,EAAXlB;AACA,gBAAMshC,UAAUthC,IAAIwa,WAAJxa,CAAgB,EAAhBA,CAAhB;AAGA,cAAIuhC,SAASD,QAAQE,qBAArB;AACA,cAAIC,UAAU3wD,KAAKoG,GAALpG,CAASwwD,QAAQI,sBAAjB5wD,CAAd;;AACA,cAAIywD,MAAJ,EAAY;AACVvhC,gBAAIr6B,OAAJq6B;AACA,kBAAM2hC,QAAQJ,UAAUA,SAASE,OAAnBF,CAAd;AACAL,wBAAYjvD,GAAZivD,CAAgBhgC,UAAhBggC,EAA4BS,KAA5BT;AACA,mBAAOS,KAAP;AAjBgC;;AAwBlC3hC,cAAIgP,WAAJhP,GAAkB,KAAlBA;AACAA,cAAIoV,SAAJpV,CAAc,CAAdA,EAAiB,CAAjBA,EAAoBghC,iBAApBhhC,EAAuCghC,iBAAvChhC;AACAA,cAAIiZ,UAAJjZ,CAAe,GAAfA,EAAoB,CAApBA,EAAuB,CAAvBA;AACA,cAAI4hC,SAAS5hC,IAAII,YAAJJ,CACX,CADWA,EAEX,CAFWA,EAGXghC,iBAHWhhC,EAIXghC,iBAJWhhC,EAKXluB,IALF;AAMA2vD,oBAAU,CAAVA;;AACA,eAAK,IAAI7wD,IAAIgxD,OAAOtzD,MAAPszD,GAAgB,CAAhBA,GAAoB,CAAjC,EAAoChxD,KAAK,CAAzC,EAA4CA,KAAK,CAAjD,EAAoD;AAClD,gBAAIgxD,OAAOhxD,CAAPgxD,IAAY,CAAhB,EAAmB;AACjBH,wBAAU3wD,KAAKkgC,IAALlgC,CAAUF,IAAI,CAAJA,GAAQowD,iBAAlBlwD,CAAV2wD;AACA;AAHgD;AAlClB;;AA4ClCzhC,cAAIoV,SAAJpV,CAAc,CAAdA,EAAiB,CAAjBA,EAAoBghC,iBAApBhhC,EAAuCghC,iBAAvChhC;AACAA,cAAIiZ,UAAJjZ,CAAe,GAAfA,EAAoB,CAApBA,EAAuBghC,iBAAvBhhC;AACA4hC,mBAAS5hC,IAAII,YAAJJ,CAAiB,CAAjBA,EAAoB,CAApBA,EAAuBghC,iBAAvBhhC,EAA0CghC,iBAA1ChhC,EAA6DluB,IAAtE8vD;AACAL,mBAAS,CAATA;;AACA,eAAK,IAAI3wD,IAAI,CAAR,EAAWiH,KAAK+pD,OAAOtzD,MAA5B,EAAoCsC,IAAIiH,EAAxC,EAA4CjH,KAAK,CAAjD,EAAoD;AAClD,gBAAIgxD,OAAOhxD,CAAPgxD,IAAY,CAAhB,EAAmB;AACjBL,uBAASP,oBAAoBlwD,KAAKqmC,KAALrmC,CAAWF,IAAI,CAAJA,GAAQowD,iBAAnBlwD,CAA7BywD;AACA;AAHgD;AAhDlB;;AAuDlCvhC,cAAIr6B,OAAJq6B;;AAEA,cAAIuhC,MAAJ,EAAY;AACV,kBAAMI,QAAQJ,UAAUA,SAASE,OAAnBF,CAAd;AACAL,wBAAYjvD,GAAZivD,CAAgBhgC,UAAhBggC,EAA4BS,KAA5BT;AACA,mBAAOS,KAAP;AA5DgC;;AA+DlCT,sBAAYjvD,GAAZivD,CAAgBhgC,UAAhBggC,EAA4BD,mBAA5BC;AACA,iBAAOD,mBAAP;AAlHF;;AAqHA,iBAASY,UAAT,CAAoBtmD,IAApB,EAA0BumD,IAA1B,EAAgC/2C,MAAhC,EAAwCiV,GAAxC,EAA6C;AAE3C,gBAAM+hC,UAAU3kD,SAAS2Z,aAAT3Z,CAAuB,MAAvBA,CAAhB;AACA,gBAAM4kD,oBAAoBzmD,KAAK0mD,qBAAL1mD,GACtB;AACEwqB,mBAAO,CADT;AAEEuX,yBAAa,CAFf;AAGE4kB,qBAASJ,KAAKzwD,GAALywD,KAAa,EAHxB;AAIEK,oBAAQL,KAAKK,MAJf;AAKEC,+BAAmB,IALrB;AAMEC,2BAAe,CANjB;AAOEC,yBAAa,CAPf;AAQEC,0BAAc,CARhB;AASEC,wBAAY,CATd;AAUE78C,mBAAO;AAVT,WADsBpK,GAatB;AACEwqB,mBAAO,CADT;AAEEuX,yBAAa,CAFf;AAGE4kB,qBAASJ,KAAKzwD,GAALywD,KAAa,EAHxB;AAIEK,oBAAQL,KAAKK;AAJf,WAbJ;;AAoBA5mD,eAAKknD,SAALlnD,CAAerK,IAAfqK,CAAoBwmD,OAApBxmD;;AAEA,gBAAMmnD,KAAKnvD,WAAK3N,SAAL2N,CAAegI,KAAKonD,SAALpnD,CAAe3V,SAA9B2N,EAAyCuuD,KAAKl8D,SAA9C2N,CAAX;;AACA,cAAIwyB,QAAQj1B,KAAK8xD,KAAL9xD,CAAW4xD,GAAG,CAAHA,CAAX5xD,EAAkB4xD,GAAG,CAAHA,CAAlB5xD,CAAZ;AACA,gBAAM+rB,QAAQ9R,OAAO+2C,KAAKe,QAAZ93C,CAAd;;AACA,cAAI8R,MAAMyc,QAAV,EAAoB;AAClBvT,qBAASj1B,KAAKzO,EAALyO,GAAU,CAAnBi1B;AA7ByC;;AA+B3C,gBAAM+8B,aAAahyD,KAAK8iC,KAAL9iC,CAAW4xD,GAAG,CAAHA,CAAX5xD,EAAkB4xD,GAAG,CAAHA,CAAlB5xD,CAAnB;AACA,gBAAMiyD,aAAaD,aAAa1B,UAAUvkC,MAAMqE,UAAhBkgC,EAA4BphC,GAA5BohC,CAAhC;AAEA,cAAIpgC,IAAJ,EAAUD,GAAV;;AACA,cAAIgF,UAAU,CAAd,EAAiB;AACf/E,mBAAO0hC,GAAG,CAAHA,CAAP1hC;AACAD,kBAAM2hC,GAAG,CAAHA,IAAQK,UAAdhiC;AAFF,iBAGO;AACLC,mBAAO0hC,GAAG,CAAHA,IAAQK,aAAajyD,KAAKm3B,GAALn3B,CAASi1B,KAATj1B,CAA5BkwB;AACAD,kBAAM2hC,GAAG,CAAHA,IAAQK,aAAajyD,KAAKi3B,GAALj3B,CAASi1B,KAATj1B,CAA3BiwB;AAxCyC;;AA4C3CghC,kBAAQllC,KAARklC,CAAc/gC,IAAd+gC,GAAqB,GAAG/gC,IAAK,IAA7B+gC;AACAA,kBAAQllC,KAARklC,CAAchhC,GAAdghC,GAAoB,GAAGhhC,GAAI,IAA3BghC;AACAA,kBAAQllC,KAARklC,CAAc53B,QAAd43B,GAAyB,GAAGe,UAAW,IAAvCf;AACAA,kBAAQllC,KAARklC,CAAc7gC,UAAd6gC,GAA2BllC,MAAMqE,UAAjC6gC;AAGAA,kBAAQ5kC,YAAR4kC,CAAqB,MAArBA,EAA6B,cAA7BA;AAEAA,kBAAQ33C,WAAR23C,GAAsBD,KAAKzwD,GAA3B0wD;AAEAA,kBAAQjG,GAARiG,GAAcD,KAAKhG,GAAnBiG;;AAIA,cAAIxmD,KAAKynD,qBAAT,EAAgC;AAC9BjB,oBAAQvN,OAARuN,CAAgBc,QAAhBd,GAA2BD,KAAKe,QAAhCd;AA3DyC;;AA6D3C,cAAIh8B,UAAU,CAAd,EAAiB;AACfi8B,8BAAkBj8B,KAAlBi8B,GAA0Bj8B,SAAS,MAAMj1B,KAAKzO,EAApB0jC,CAA1Bi8B;AA9DyC;;AAmE3C,cAAIiB,kBAAkB,KAAtB;;AACA,cACEnB,KAAKzwD,GAALywD,CAASxzD,MAATwzD,GAAkB,CAAlBA,IACCvmD,KAAK0mD,qBAAL1mD,IAA8B4lD,oBAAoBjpD,IAApBipD,CAAyBW,KAAKzwD,GAA9B8vD,CAFjC,EAGE;AACA8B,8BAAkB,IAAlBA;AAJF,iBAKO,IAAInB,KAAKzwD,GAALywD,KAAa,GAAbA,IAAoBA,KAAKl8D,SAALk8D,CAAe,CAAfA,MAAsBA,KAAKl8D,SAALk8D,CAAe,CAAfA,CAA9C,EAAiE;AACtE,kBAAMoB,YAAYpyD,KAAKoG,GAALpG,CAASgxD,KAAKl8D,SAALk8D,CAAe,CAAfA,CAAThxD,CAAlB;AAAA,kBACEqyD,YAAYryD,KAAKoG,GAALpG,CAASgxD,KAAKl8D,SAALk8D,CAAe,CAAfA,CAAThxD,CADd;;AAIA,gBACEoyD,cAAcC,SAAdD,IACApyD,KAAK6D,GAAL7D,CAASoyD,SAATpyD,EAAoBqyD,SAApBryD,IAAiCA,KAAKC,GAALD,CAASoyD,SAATpyD,EAAoBqyD,SAApBryD,CAAjCA,GAAkE,GAFpE,EAGE;AACAmyD,gCAAkB,IAAlBA;AAToE;AAzE7B;;AAqF3C,cAAIA,eAAJ,EAAqB;AACnB,gBAAIpmC,MAAMyc,QAAV,EAAoB;AAClB0oB,gCAAkB1kB,WAAlB0kB,GAAgCF,KAAKhrC,MAALgrC,GAAcvmD,KAAKonD,SAALpnD,CAAeoK,KAA7Dq8C;AADF,mBAEO;AACLA,gCAAkB1kB,WAAlB0kB,GAAgCF,KAAKjrC,KAALirC,GAAavmD,KAAKonD,SAALpnD,CAAeoK,KAA5Dq8C;AAJiB;AArFsB;;AA4F3CzmD,eAAK6nD,kBAAL7nD,CAAwBtJ,GAAxBsJ,CAA4BwmD,OAA5BxmD,EAAqCymD,iBAArCzmD;;AACA,cAAIA,KAAK8nD,kBAAT,EAA6B;AAC3B9nD,iBAAK+nD,WAAL/nD,CAAiBwmD,OAAjBxmD;AA9FyC;;AAiG3C,cAAIA,KAAK0mD,qBAAL1mD,IAA8BymD,kBAAkBE,OAApD,EAA6D;AAC3D,gBAAIqB,WAAW,CAAf;AAAA,gBACEC,WAAW,CADb;;AAEA,gBAAIz9B,UAAU,CAAd,EAAiB;AACfw9B,yBAAWzyD,KAAKi3B,GAALj3B,CAASi1B,KAATj1B,CAAXyyD;AACAC,yBAAW1yD,KAAKm3B,GAALn3B,CAASi1B,KAATj1B,CAAX0yD;AALyD;;AAO3D,kBAAMC,WACH,OAAMnqB,QAAN,GAAiBwoB,KAAKhrC,MAAtB,GAA+BgrC,KAAKjrC,KAApC,IAA6Ctb,KAAKonD,SAALpnD,CAAeoK,KAD/D;AAEA,kBAAM+9C,YAAYZ,UAAlB;AAEA,gBAAI9uD,CAAJ,EAAOL,CAAP;;AACA,gBAAIoyB,UAAU,CAAd,EAAiB;AACf/xB,kBAAI,CAACuvD,QAAD,EAAWC,QAAX,EAAqB,CAACA,QAAtB,EAAgCD,QAAhC,EAA0CviC,IAA1C,EAAgDD,GAAhD,CAAJ/sB;AACAL,kBAAIJ,WAAKc,0BAALd,CAAgC,CAAC,CAAD,EAAI,CAAJ,EAAOkwD,QAAP,EAAiBC,SAAjB,CAAhCnwD,EAA6DS,CAA7DT,CAAJI;AAFF,mBAGO;AACLA,kBAAI,CAACqtB,IAAD,EAAOD,GAAP,EAAYC,OAAOyiC,QAAnB,EAA6B1iC,MAAM2iC,SAAnC,CAAJ/vD;AAhByD;;AAmB3D4H,iBAAKunC,OAALvnC,CAAarK,IAAbqK,CAAkB;AAChBylB,oBAAMrtB,EAAE,CAAFA,CADU;AAEhBotB,mBAAKptB,EAAE,CAAFA,CAFW;AAGhBgwD,qBAAOhwD,EAAE,CAAFA,CAHS;AAIhBiwD,sBAAQjwD,EAAE,CAAFA,CAJQ;AAKhBitB,mBAAKmhC,OALW;AAMhB79C,oBAAM,CAACu/C,QAAD,EAAWC,SAAX,CANU;AAOhB1vD;AAPgB,aAAlBuH;AApHyC;AArH7C;;AAqPA,iBAASyL,MAAT,CAAgBzL,IAAhB,EAAsB;AACpB,cAAIA,KAAKsoD,SAAT,EAAoB;AAClB;AAFkB;;AAIpB,gBAAMnD,WAAWnlD,KAAKknD,SAAtB;AACA,gBAAMhpD,aAAa8B,KAAK8D,WAAxB;AACA,gBAAMykD,iBAAiBpD,SAASpyD,MAAhC;;AAIA,cAAIw1D,iBAAiB/C,uBAArB,EAA8C;AAC5CxlD,iBAAKwoD,cAALxoD,GAAsB,IAAtBA;AACA9B,uBAAWK,OAAXL;AACA;AAbkB;;AAgBpB,cAAI,CAAC8B,KAAK8nD,kBAAV,EAA8B;AAC5B,iBAAK,IAAIzyD,IAAI,CAAb,EAAgBA,IAAIkzD,cAApB,EAAoClzD,GAApC,EAAyC;AACvC2K,mBAAK+nD,WAAL/nD,CAAiBmlD,SAAS9vD,CAAT8vD,CAAjBnlD;AAF0B;AAhBV;;AAsBpBA,eAAKwoD,cAALxoD,GAAsB,IAAtBA;AACA9B,qBAAWK,OAAXL;AA5QF;;AA+QA,iBAASuqD,eAAT,CAAyBC,EAAzB,EAA6BvkC,MAA7B,EAAqCwJ,KAArC,EAA4C;AAC1C,cAAIjzB,SAAS,CAAb;;AACA,eAAK,IAAIrF,IAAI,CAAb,EAAgBA,IAAIs4B,KAApB,EAA2Bt4B,GAA3B,EAAgC;AAC9B,kBAAMiG,IAAIotD,GAAGvkC,QAAHukC,CAAV;;AACA,gBAAIptD,IAAI,CAAR,EAAW;AACTZ,uBAASA,SAASnF,KAAKC,GAALD,CAAS+F,CAAT/F,EAAYmF,MAAZnF,CAATmF,GAA+BY,CAAxCZ;AAH4B;AAFU;;AAQ1C,iBAAOA,MAAP;AAvRF;;AA0RA,iBAASiuD,MAAT,CAAgB3oD,IAAhB,EAAsB;AACpB,gBAAM3E,SAAS2E,KAAKunC,OAApB;AACA,gBAAM57B,WAAW3L,KAAKonD,SAAtB;AAEA,gBAAMwB,WAAWC,aAAal9C,SAAS2P,KAAtButC,EAA6Bl9C,SAAS4P,MAAtCstC,EAA8CxtD,MAA9CwtD,CAAjB;;AACA,eAAK,IAAIxzD,IAAI,CAAb,EAAgBA,IAAIuzD,SAAS71D,MAA7B,EAAqCsC,GAArC,EAA0C;AACxC,kBAAMgwB,MAAMhqB,OAAOhG,CAAPgG,EAAUgqB,GAAtB;;AACA,kBAAMyjC,gBAAgB9oD,KAAK6nD,kBAAL7nD,CAAwB5B,GAAxB4B,CAA4BqlB,GAA5BrlB,CAAtB;;AACA,gBAAI8oD,cAAct+B,KAAds+B,KAAwB,CAA5B,EAA+B;AAC7BA,4BAAc/B,WAAd+B,GAA4BztD,OAAOhG,CAAPgG,EAAUoqB,IAAVpqB,GAAiButD,SAASvzD,CAATuzD,EAAYnjC,IAAzDqjC;AACAA,4BAAc7B,UAAd6B,GAA2BztD,OAAOhG,CAAPgG,EAAUmqB,GAAVnqB,GAAgButD,SAASvzD,CAATuzD,EAAYpjC,GAAvDsjC;AACAA,4BAAc9B,YAAd8B,GAA6BF,SAASvzD,CAATuzD,EAAYR,KAAZQ,GAAoBvtD,OAAOhG,CAAPgG,EAAU+sD,KAA3DU;AACAA,4BAAchC,aAAdgC,GAA8BF,SAASvzD,CAATuzD,EAAYP,MAAZO,GAAqBvtD,OAAOhG,CAAPgG,EAAUgtD,MAA7DS;;AACA9oD,mBAAK6nD,kBAAL7nD,CAAwBtJ,GAAxBsJ,CAA4BqlB,GAA5BrlB,EAAiC8oD,aAAjC9oD;;AACA;AATsC;;AAaxC,kBAAM5N,IAAIw2D,SAASvzD,CAATuzD,CAAV;AAAA,kBACExwD,IAAIiD,OAAOhG,CAAPgG,CADN;AAEA,kBAAM5C,IAAIL,EAAEK,CAAZ;AAAA,kBACEkB,IAAIlB,EAAE,CAAFA,CADN;AAAA,kBAEE4rB,IAAI5rB,EAAE,CAAFA,CAFN;AAIA,kBAAM60B,SAAS,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAIl1B,EAAEuQ,IAAFvQ,CAAO,CAAPA,CAAJ,CAAT,EAAyB,CAACA,EAAEuQ,IAAFvQ,CAAO,CAAPA,CAAD,EAAY,CAAZ,CAAzB,EAAyCA,EAAEuQ,IAA3C,CAAf;AACA,kBAAM+/C,KAAK,IAAIK,YAAJ,CAAiB,EAAjB,CAAX;;AACA,iBAAK,IAAIntD,IAAI,CAAR,EAAWotD,KAAK17B,OAAOv6B,MAA5B,EAAoC6I,IAAIotD,EAAxC,EAA4CptD,GAA5C,EAAiD;AAC/C,oBAAMN,IAAItD,WAAKO,cAALP,CAAoBs1B,OAAO1xB,CAAP0xB,CAApBt1B,EAA+BS,CAA/BT,CAAV;;AACA0wD,iBAAG9sD,IAAI,CAAP8sD,IAAY/uD,KAAM,GAAE8rB,IAAF,GAASnqB,EAAE,CAAFA,CAAT,IAAiB3B,CAAnC+uD;AACAA,iBAAG9sD,IAAI,CAAP8sD,IAAYrkC,KAAM,GAAEmB,GAAF,GAAQlqB,EAAE,CAAFA,CAAR,IAAgB+oB,CAAlCqkC;AACAA,iBAAG9sD,IAAI,CAAP8sD,IAAY/uD,KAAM,GAAEyuD,KAAF,GAAU9sD,EAAE,CAAFA,CAAV,IAAkB3B,CAApC+uD;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAEgkC,MAAF,GAAW/sD,EAAE,CAAFA,CAAX,IAAmB+oB,CAAtCqkC;AAEAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAEoB,IAAF,GAASnqB,EAAE,CAAFA,CAAT,IAAiB,CAAC+oB,CAArCqkC;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAE6rB,GAAF,GAAQlqB,EAAE,CAAFA,CAAR,IAAgB3B,CAAnC+uD;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAE+jC,KAAF,GAAU9sD,EAAE,CAAFA,CAAV,IAAkB,CAAC+oB,CAAtCqkC;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAE0uD,MAAF,GAAW/sD,EAAE,CAAFA,CAAX,IAAmB3B,CAAtC+uD;AAEAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAE8rB,IAAF,GAASnqB,EAAE,CAAFA,CAAT,IAAiB,CAAC3B,CAArC+uD;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAEmB,GAAF,GAAQlqB,EAAE,CAAFA,CAAR,IAAgB,CAAC+oB,CAApCqkC;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAEyuD,KAAF,GAAU9sD,EAAE,CAAFA,CAAV,IAAkB,CAAC3B,CAAtC+uD;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAEgkC,MAAF,GAAW/sD,EAAE,CAAFA,CAAX,IAAmB,CAAC+oB,CAAvCqkC;AAEAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAEoB,IAAF,GAASnqB,EAAE,CAAFA,CAAT,IAAiB+oB,CAApCqkC;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAE6rB,GAAF,GAAQlqB,EAAE,CAAFA,CAAR,IAAgB,CAAC3B,CAApC+uD;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAarkC,KAAM,GAAE+jC,KAAF,GAAU9sD,EAAE,CAAFA,CAAV,IAAkB+oB,CAArCqkC;AACAA,iBAAG9sD,IAAI,EAAP8sD,IAAa/uD,KAAM,GAAE0uD,MAAF,GAAW/sD,EAAE,CAAFA,CAAX,IAAmB,CAAC3B,CAAvC+uD;AAzCsC;;AA6CxC,kBAAMO,WAAW,IAAI1zD,KAAKC,GAALD,CAASA,KAAKoG,GAALpG,CAASoE,CAATpE,CAATA,EAAsBA,KAAKoG,GAALpG,CAAS8uB,CAAT9uB,CAAtBA,CAArB;AACAuzD,0BAAc/B,WAAd+B,GAA4BL,gBAAgBC,EAAhBD,EAAoB,EAApBA,EAAwB,EAAxBA,IAA8BQ,QAA1DH;AACAA,0BAAc7B,UAAd6B,GAA2BL,gBAAgBC,EAAhBD,EAAoB,EAApBA,EAAwB,EAAxBA,IAA8BQ,QAAzDH;AACAA,0BAAc9B,YAAd8B,GAA6BL,gBAAgBC,EAAhBD,EAAoB,CAApBA,EAAuB,EAAvBA,IAA6BQ,QAA1DH;AACAA,0BAAchC,aAAdgC,GAA8BL,gBAAgBC,EAAhBD,EAAoB,EAApBA,EAAwB,EAAxBA,IAA8BQ,QAA5DH;;AACA9oD,iBAAK6nD,kBAAL7nD,CAAwBtJ,GAAxBsJ,CAA4BqlB,GAA5BrlB,EAAiC8oD,aAAjC9oD;AAvDkB;AA1RtB;;AAqVA,iBAAS6oD,YAAT,CAAsBvtC,KAAtB,EAA6BC,MAA7B,EAAqC2tC,KAArC,EAA4C;AAC1C,gBAAM7tD,SAAS6tD,MAAMnyD,GAANmyD,CAAU,UAAUx4B,GAAV,EAAer7B,CAAf,EAAkB;AACzC,mBAAO;AACLyF,kBAAI41B,IAAIjL,IADH;AAEL1qB,kBAAI21B,IAAIlL,GAFH;AAGLxqB,kBAAI01B,IAAI03B,KAHH;AAILntD,kBAAIy1B,IAAI23B,MAJH;AAKLjR,qBAAO/hD,CALF;AAML8zD,qBAAOp0D,SANF;AAOLq0D,qBAAOr0D;AAPF,aAAP;AADa,YAAf;AAWAs0D,0BAAgB/tC,KAAhB+tC,EAAuBhuD,MAAvBguD;AAEA,gBAAMT,WAAW,IAAIhxD,KAAJ,CAAUsxD,MAAMn2D,MAAhB,CAAjB;;AACA,qBAAWqF,CAAX,IAAgBiD,MAAhB,EAAwB;AACtB,kBAAMhG,IAAI+C,EAAEg/C,KAAZ;AACAwR,qBAASvzD,CAATuzD,IAAc;AACZnjC,oBAAMrtB,EAAE+wD,KADI;AAEZ3jC,mBAAK,CAFO;AAGZ4iC,qBAAOhwD,EAAEgxD,KAHG;AAIZf,sBAAQ;AAJI,aAAdO;AAjBwC;;AA2B1CM,gBAAMnyD,GAANmyD,CAAU,UAAUx4B,GAAV,EAAer7B,CAAf,EAAkB;AAC1B,kBAAMjD,IAAIw2D,SAASvzD,CAATuzD,CAAV;AAAA,kBACExwD,IAAIiD,OAAOhG,CAAPgG,CADN;AAEAjD,cAAE0C,EAAF1C,GAAOs4B,IAAIlL,GAAXptB;AACAA,cAAE2C,EAAF3C,GAAOkjB,QAAQlpB,EAAEg2D,KAAjBhwD;AACAA,cAAE4C,EAAF5C,GAAOs4B,IAAI23B,MAAXjwD;AACAA,cAAE6C,EAAF7C,GAAOkjB,QAAQlpB,EAAEqzB,IAAjBrtB;AACAA,cAAEg/C,KAAFh/C,GAAU/C,CAAV+C;AACAA,cAAE+wD,KAAF/wD,GAAUrD,SAAVqD;AACAA,cAAEgxD,KAAFhxD,GAAUrD,SAAVqD;AATF;AAWAixD,0BAAgB9tC,MAAhB8tC,EAAwBhuD,MAAxBguD;;AAEA,qBAAWjxD,CAAX,IAAgBiD,MAAhB,EAAwB;AACtB,kBAAMhG,IAAI+C,EAAEg/C,KAAZ;AACAwR,qBAASvzD,CAATuzD,EAAYpjC,GAAZojC,GAAkBxwD,EAAE+wD,KAApBP;AACAA,qBAASvzD,CAATuzD,EAAYP,MAAZO,GAAqBxwD,EAAEgxD,KAAvBR;AA3CwC;;AA6C1C,iBAAOA,QAAP;AAlYF;;AAqYA,iBAASS,eAAT,CAAyB/tC,KAAzB,EAAgCjgB,MAAhC,EAAwC;AAEtCA,iBAAOb,IAAPa,CAAY,UAAU3B,CAAV,EAAatB,CAAb,EAAgB;AAC1B,mBAAOsB,EAAEoB,EAAFpB,GAAOtB,EAAE0C,EAATpB,IAAeA,EAAE09C,KAAF19C,GAAUtB,EAAEg/C,KAAlC;AADF;AAKA,gBAAMkS,eAAe;AACnBxuD,gBAAI,CAACm2B,QADc;AAEnBl2B,gBAAI,CAACk2B,QAFc;AAGnBj2B,gBAAI,CAHe;AAInBC,gBAAIg2B,QAJe;AAKnBmmB,mBAAO,CAAC,CALW;AAMnB+R,mBAAO,CANY;AAOnBC,mBAAO;AAPY,WAArB;AASA,gBAAMG,UAAU,CACd;AACEjqC,mBAAO,CAAC2R,QADV;AAEEnrB,iBAAKmrB,QAFP;AAGEu4B,sBAAUF;AAHZ,WADc,CAAhB;;AAQA,qBAAWE,QAAX,IAAuBnuD,MAAvB,EAA+B;AAG7B,gBAAIhG,IAAI,CAAR;;AACA,mBAAOA,IAAIk0D,QAAQx2D,MAAZsC,IAAsBk0D,QAAQl0D,CAARk0D,EAAWzjD,GAAXyjD,IAAkBC,SAASzuD,EAAxD,EAA4D;AAC1D1F;AAL2B;;AAO7B,gBAAIuG,IAAI2tD,QAAQx2D,MAARw2D,GAAiB,CAAzB;;AACA,mBAAO3tD,KAAK,CAALA,IAAU2tD,QAAQ3tD,CAAR2tD,EAAWjqC,KAAXiqC,IAAoBC,SAASvuD,EAA9C,EAAkD;AAChDW;AAT2B;;AAY7B,gBAAI6tD,WAAJ,EAAiBC,gBAAjB;AACA,gBAAIxiB,CAAJ;AAAA,gBACE7Y,CADF;AAAA,gBAEEs7B,UAAU,CAAC14B,QAFb;;AAGA,iBAAKiW,IAAI7xC,CAAT,EAAY6xC,KAAKtrC,CAAjB,EAAoBsrC,GAApB,EAAyB;AACvBuiB,4BAAcF,QAAQriB,CAARqiB,CAAdE;AACAC,iCAAmBD,YAAYD,QAA/BE;AACA,kBAAIE,IAAJ;;AACA,kBAAIF,iBAAiB1uD,EAAjB0uD,GAAsBF,SAAS1uD,EAAnC,EAAuC;AAIrC8uD,uBACEF,iBAAiBtS,KAAjBsS,GAAyBF,SAASpS,KAAlCsS,GACIA,iBAAiBP,KADrBO,GAEIF,SAAS1uD,EAHf8uD;AAJF,qBAQO,IAAIF,iBAAiBN,KAAjBM,KAA2B30D,SAA/B,EAA0C;AAG/C60D,uBAAQ,kBAAiB5uD,EAAjB,GAAsBwuD,SAAS1uD,EAA/B,IAAqC,CAA7C8uD;AAHK,qBAIA;AAELA,uBAAOF,iBAAiBN,KAAxBQ;AAlBqB;;AAoBvB,kBAAIA,OAAOD,OAAX,EAAoB;AAClBA,0BAAUC,IAAVD;AArBqB;AAhBI;;AA0C7BH,qBAASL,KAATK,GAAiBG,OAAjBH;;AAGA,iBAAKtiB,IAAI7xC,CAAT,EAAY6xC,KAAKtrC,CAAjB,EAAoBsrC,GAApB,EAAyB;AACvBuiB,4BAAcF,QAAQriB,CAARqiB,CAAdE;AACAC,iCAAmBD,YAAYD,QAA/BE;;AACA,kBAAIA,iBAAiBN,KAAjBM,KAA2B30D,SAA/B,EAA0C;AAExC,oBAAI20D,iBAAiB1uD,EAAjB0uD,GAAsBF,SAAS1uD,EAAnC,EAAuC;AAGrC,sBAAI4uD,iBAAiBtS,KAAjBsS,GAAyBF,SAASpS,KAAtC,EAA6C;AAC3CsS,qCAAiBN,KAAjBM,GAAyBA,iBAAiB1uD,EAA1C0uD;AAJmC;AAAvC,uBAMO;AACLA,mCAAiBN,KAAjBM,GAAyBC,OAAzBD;AATsC;AAA1C,qBAWO,IAAIA,iBAAiBN,KAAjBM,GAAyBC,OAA7B,EAAsC;AAE3CD,iCAAiBN,KAAjBM,GAAyBn0D,KAAK6D,GAAL7D,CAASo0D,OAATp0D,EAAkBm0D,iBAAiB1uD,EAAnCzF,CAAzBm0D;AAhBqB;AA7CI;;AAkE7B,kBAAMG,iBAAiB,EAAvB;AACA,gBAAIC,eAAe,IAAnB;;AACA,iBAAK5iB,IAAI7xC,CAAT,EAAY6xC,KAAKtrC,CAAjB,EAAoBsrC,GAApB,EAAyB;AACvBuiB,4BAAcF,QAAQriB,CAARqiB,CAAdE;AACAC,iCAAmBD,YAAYD,QAA/BE;AAEA,oBAAMK,cACJL,iBAAiB1uD,EAAjB0uD,GAAsBF,SAASxuD,EAA/B0uD,GAAoCA,gBAApCA,GAAuDF,QADzD;;AAEA,kBAAIM,iBAAiBC,WAArB,EAAkC;AAEhCF,+BAAeA,eAAe92D,MAAf82D,GAAwB,CAAvCA,EAA0C/jD,GAA1C+jD,GAAgDJ,YAAY3jD,GAA5D+jD;AAFF,qBAGO;AACLA,+BAAel0D,IAAfk0D,CAAoB;AAClBvqC,yBAAOmqC,YAAYnqC,KADD;AAElBxZ,uBAAK2jD,YAAY3jD,GAFC;AAGlB0jD,4BAAUO;AAHQ,iBAApBF;AAKAC,+BAAeC,WAAfD;AAfqB;AApEI;;AAsF7B,gBAAIP,QAAQl0D,CAARk0D,EAAWjqC,KAAXiqC,GAAmBC,SAASzuD,EAAhC,EAAoC;AAClC8uD,6BAAe,CAAfA,EAAkBvqC,KAAlBuqC,GAA0BL,SAASzuD,EAAnC8uD;AACAA,6BAAeG,OAAfH,CAAuB;AACrBvqC,uBAAOiqC,QAAQl0D,CAARk0D,EAAWjqC,KADG;AAErBxZ,qBAAK0jD,SAASzuD,EAFO;AAGrByuD,0BAAUD,QAAQl0D,CAARk0D,EAAWC;AAHA,eAAvBK;AAxF2B;;AA8F7B,gBAAIL,SAASvuD,EAATuuD,GAAcD,QAAQ3tD,CAAR2tD,EAAWzjD,GAA7B,EAAkC;AAChC+jD,6BAAeA,eAAe92D,MAAf82D,GAAwB,CAAvCA,EAA0C/jD,GAA1C+jD,GAAgDL,SAASvuD,EAAzD4uD;AACAA,6BAAel0D,IAAfk0D,CAAoB;AAClBvqC,uBAAOkqC,SAASvuD,EADE;AAElB6K,qBAAKyjD,QAAQ3tD,CAAR2tD,EAAWzjD,GAFE;AAGlB0jD,0BAAUD,QAAQ3tD,CAAR2tD,EAAWC;AAHH,eAApBK;AAhG2B;;AA0G7B,iBAAK3iB,IAAI7xC,CAAT,EAAY6xC,KAAKtrC,CAAjB,EAAoBsrC,GAApB,EAAyB;AACvBuiB,4BAAcF,QAAQriB,CAARqiB,CAAdE;AACAC,iCAAmBD,YAAYD,QAA/BE;;AACA,kBAAIA,iBAAiBN,KAAjBM,KAA2B30D,SAA/B,EAA0C;AACxC;AAJqB;;AAMvB,kBAAIk1D,OAAO,KAAX;;AACA,mBACE57B,IAAIh5B,IAAI,CADV,EAEE,CAAC40D,IAAD,IAAS57B,KAAK,CAAd,IAAmBk7B,QAAQl7B,CAARk7B,EAAWjqC,KAAXiqC,IAAoBG,iBAAiB3uD,EAF1D,EAGEszB,GAHF,EAIE;AACA47B,uBAAOV,QAAQl7B,CAARk7B,EAAWC,QAAXD,KAAwBG,gBAA/BO;AAZqB;;AAcvB,mBACE57B,IAAIzyB,IAAI,CADV,EAEE,CAACquD,IAAD,IAAS57B,IAAIk7B,QAAQx2D,MAArB,IAA+Bw2D,QAAQl7B,CAARk7B,EAAWzjD,GAAXyjD,IAAkBG,iBAAiBzuD,EAFpE,EAGEozB,GAHF,EAIE;AACA47B,uBAAOV,QAAQl7B,CAARk7B,EAAWC,QAAXD,KAAwBG,gBAA/BO;AAnBqB;;AAqBvB,mBAAK57B,IAAI,CAAT,EAAY,CAAC47B,IAAD,IAAS57B,IAAIw7B,eAAe92D,MAAxC,EAAgDs7B,GAAhD,EAAqD;AACnD47B,uBAAOJ,eAAex7B,CAAfw7B,EAAkBL,QAAlBK,KAA+BH,gBAAtCO;AAtBqB;;AAwBvB,kBAAI,CAACA,IAAL,EAAW;AACTP,iCAAiBN,KAAjBM,GAAyBC,OAAzBD;AAzBqB;AA1GI;;AAuI7B9xD,kBAAM1D,SAAN0D,CAAgB4Z,MAAhB5Z,CAAuBzC,KAAvByC,CACE2xD,OADF3xD,EAEE,CAACvC,CAAD,EAAIuG,IAAIvG,CAAJuG,GAAQ,CAAZ,EAAesuD,MAAf,CAAsBL,cAAtB,CAFFjyD;AA/JoC;;AAsKtC,qBAAW6xD,WAAX,IAA0BF,OAA1B,EAAmC;AACjC,kBAAMG,mBAAmBD,YAAYD,QAArC;;AACA,gBAAIE,iBAAiBN,KAAjBM,KAA2B30D,SAA/B,EAA0C;AACxC20D,+BAAiBN,KAAjBM,GAAyBn0D,KAAK6D,GAAL7D,CAAS+lB,KAAT/lB,EAAgBm0D,iBAAiB1uD,EAAjCzF,CAAzBm0D;AAH+B;AAtKG;AArYxC;;AAmjBA,cAAMS,mBAAN,CAA0B;AACxBl2D,8BAQG;AAAA,gBARS;AACV4a,yBADU;AAEVu7C,+BAFU;AAGVtW,uBAHU;AAIVnoC,sBAJU;AAKVw5C,sBALU;AAMVkF,iCANU;AAOVC;AAPU,aAQT;AACD,iBAAKC,YAAL,GAAoB17C,WAApB;AACA,iBAAKi5C,kBAAL,GAA0BsC,iBAA1B;AACA,iBAAKI,UAAL,GAAkB1W,SAAlB;AACA,iBAAK14B,SAAL,GAAiB04B,UAAUnyC,aAA3B;AACA,iBAAKylD,SAAL,GAAiBz7C,QAAjB;AACA,iBAAKu7C,SAAL,GAAiB/B,YAAY,EAA7B;AACA,iBAAKsF,oBAAL,GAA4BJ,uBAAuB,EAAnD;AACA,iBAAK3D,qBAAL,GAA6B,CAAC,CAAC4D,oBAA/B;AACA,iBAAK7C,qBAAL,GAA6B,CAAC,CAAC7lD,WAAWwV,aAAXxV,EAA0ByV,OAAzD;AAEA,iBAAKqzC,OAAL,GAAe,IAAf;AACA,iBAAKC,uBAAL,GAA+B,IAA/B;AACA,iBAAKC,yBAAL,GAAiC,IAAjC;AACA,iBAAKC,cAAL,GAAsB,IAAtB;AACA,iBAAKhD,kBAAL,GAA0B,IAAIv1C,OAAJ,EAA1B;AACA,iBAAKk2C,cAAL,GAAsB,KAAtB;AACA,iBAAKF,SAAL,GAAiB,KAAjB;AACA,iBAAKxkD,WAAL,GAAmB7F,oCAAnB;AACA,iBAAK6sD,YAAL,GAAoB,IAApB;AACA,iBAAKvjB,OAAL,GAAe,EAAf;;AAGA,iBAAKzjC,WAAL,CAAiBzF,OAAjB,CACGoZ,OADH,CACW,MAAM;AACb,kBAAI,CAAC,KAAKivC,qBAAV,EAAiC;AAE/B,qBAAKmB,kBAAL,GAA0B,IAA1B;AAHW;;AAMb,kBAAI,KAAKgD,cAAT,EAAyB;AAGvB,qBAAKA,cAAL,CAAoB9wC,MAApB,CAA2BuB,KAA3B,GAAmC,CAAnC;AACA,qBAAKuvC,cAAL,CAAoB9wC,MAApB,CAA2BwB,MAA3B,GAAoC,CAApC;AACA,qBAAKsvC,cAAL,GAAsB,IAAtB;AAXW;AADjB,eAeGhnD,KAfH,CAeS,MAAM,CAff;AAhCsB;;AAwDxB,cAAIxF,OAAJ,GAAc;AACZ,mBAAO,KAAKyF,WAAL,CAAiBzF,OAAxB;AAzDsB;;AA+DxB4R,mBAAS;AACP,iBAAKq4C,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKoC,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CACGz6C,MADH,CACU,IAAIrb,oBAAJ,CAAmB,2BAAnB,CADV,EAEGiP,KAFH,CAES,MAAM,CAFf;;AAKA,mBAAK6mD,OAAL,GAAe,IAAf;AARK;;AAUP,gBAAI,KAAKI,YAAL,KAAsB,IAA1B,EAAgC;AAC9Bt+C,2BAAa,KAAKs+C,YAAlBt+C;AACA,mBAAKs+C,YAAL,GAAoB,IAApB;AAZK;;AAcP,iBAAKhnD,WAAL,CAAiBtF,MAAjB,CAAwB,IAAI7M,KAAJ,CAAU,2BAAV,CAAxB;AA7EsB;;AAmFxBo5D,wBAAcj8C,KAAdi8C,EAAqBC,UAArBD,EAAiC;AAC/B,iBAAK,IAAI11D,IAAI,CAAR,EAAW41D,MAAMn8C,MAAM/b,MAA5B,EAAoCsC,IAAI41D,GAAxC,EAA6C51D,GAA7C,EAAkD;AAChD,kBAAIyZ,MAAMzZ,CAANyZ,EAAShZ,GAATgZ,KAAiB/Z,SAArB,EAAgC;AAC9B,oBACE+Z,MAAMzZ,CAANyZ,EAAS/P,IAAT+P,KAAkB,yBAAlBA,IACAA,MAAMzZ,CAANyZ,EAAS/P,IAAT+P,KAAkB,oBAFpB,EAGE;AACA,wBAAMs2C,SAAS,KAAKoF,UAApB;AACA,uBAAKA,UAAL,GAAkB3oD,SAAS2Z,aAAT3Z,CAAuB,MAAvBA,CAAlB;;AACA,uBAAK2oD,UAAL,CAAgBhN,SAAhB,CAA0B3vC,GAA1B,CAA8B,eAA9B;;AACA,sBAAIiB,MAAMzZ,CAANyZ,EAAS3H,EAAT2H,KAAgB,IAApB,EAA0B;AACxB,yBAAK07C,UAAL,CAAgB5oC,YAAhB,CAA6B,IAA7B,EAAmC,GAAG9S,MAAMzZ,CAANyZ,EAAS3H,EAAZ,EAAnC;AALF;;AAOAi+C,yBAAOllC,WAAPklC,CAAmB,KAAKoF,UAAxBpF;AAVF,uBAWO,IAAIt2C,MAAMzZ,CAANyZ,EAAS/P,IAAT+P,KAAkB,kBAAtB,EAA0C;AAC/C,uBAAK07C,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,UAAlC;AAb4B;;AAe9B;AAhB8C;;AAkBhD,mBAAKT,oBAAL,CAA0B90D,IAA1B,CAA+BmZ,MAAMzZ,CAANyZ,EAAShZ,GAAxC;;AACAwwD,yBAAW,IAAXA,EAAiBx3C,MAAMzZ,CAANyZ,CAAjBw3C,EAA2B0E,UAA3B1E,EAAuC,KAAKuE,cAA5CvE;AApB6B;AAnFT;;AA8GxByB,sBAAYvB,OAAZuB,EAAqB;AACnB,kBAAMtB,oBAAoB,KAAKoB,kBAAL,CAAwBzpD,GAAxB,CAA4BooD,OAA5B,CAA1B;;AAEA,gBAAIn8D,YAAY,EAAhB;;AACA,gBAAIo8D,kBAAkB1kB,WAAlB0kB,KAAkC,CAAlCA,IAAuCA,kBAAkBE,OAA7D,EAAsE;AACpE,oBAAM;AAAE/3B,wBAAF;AAAYjJ;AAAZ,kBAA2B6gC,QAAQllC,KAAzC;;AAGA,kBACEsN,aAAa,KAAK+7B,uBAAlB/7B,IACAjJ,eAAe,KAAKilC,yBAFtB,EAGE;AACA,qBAAKC,cAAL,CAAoBj7D,IAApB,GAA2B,GAAGg/B,QAAS,IAAGjJ,UAAf,EAA3B;AACA,qBAAKglC,uBAAL,GAA+B/7B,QAA/B;AACA,qBAAKg8B,yBAAL,GAAiCjlC,UAAjC;AAVkE;;AAapE,oBAAM;AAAErK;AAAF,kBAAY,KAAKuvC,cAAL,CAAoB5rB,WAApB,CAAgCunB,QAAQ33C,WAAxC,CAAlB;;AAEA,kBAAIyM,QAAQ,CAAZ,EAAe;AACb,sBAAMlR,QAAQq8C,kBAAkB1kB,WAAlB0kB,GAAgCnrC,KAA9C;;AACA,oBAAI,KAAKorC,qBAAT,EAAgC;AAC9BD,oCAAkBr8C,KAAlBq8C,GAA0Br8C,KAA1Bq8C;AAHW;;AAKbp8D,4BAAa,UAAS+f,KAAM,GAA5B/f;AApBkE;AAJnD;;AA2BnB,gBAAIo8D,kBAAkBj8B,KAAlBi8B,KAA4B,CAAhC,EAAmC;AACjCp8D,0BAAa,UAASo8D,kBAAkBj8B,KAAM,QAAOngC,SAAzC,EAAZA;AA5BiB;;AA8BnB,gBAAIA,UAAU0I,MAAV1I,GAAmB,CAAvB,EAA0B;AACxB,kBAAI,KAAKq8D,qBAAT,EAAgC;AAC9BD,kCAAkBI,iBAAlBJ,GAAsCp8D,SAAtCo8D;AAFsB;;AAIxBD,sBAAQllC,KAARklC,CAAcn8D,SAAdm8D,GAA0Bn8D,SAA1Bm8D;AAlCiB;;AAqCnB,gBAAIC,kBAAkBE,OAAtB,EAA+B;AAC7B,mBAAK6D,UAAL,CAAgBtqC,WAAhB,CAA4BsmC,OAA5B;AAtCiB;;AAwCnB,gBAAIC,kBAAkBG,MAAtB,EAA8B;AAC5B,oBAAM9lB,KAAKj/B,SAAS2Z,aAAT3Z,CAAuB,IAAvBA,CAAX;AACAi/B,iBAAGlf,YAAHkf,CAAgB,MAAhBA,EAAwB,cAAxBA;;AACA,mBAAK0pB,UAAL,CAAgBtqC,WAAhB,CAA4B4gB,EAA5B;AA3CiB;AA9GG;;AAgKxBqqB,oBAAqB;AAAA,gBAAbC,OAAa,uEAAH,CAAG;AACnB,kBAAMltD,aAAaD,oCAAnB;AACA,gBAAI+sD,aAAax3D,OAAOwD,MAAPxD,CAAc,IAAdA,CAAjB;;AAGA,kBAAMumB,SAAS,KAAKqB,SAAL,CAAeI,aAAf,CAA6B,QAA7B,CAAf;;AACAzB,mBAAOwB,MAAPxB,GAAgBA,OAAOuB,KAAPvB,GAAe0rC,iBAA/B1rC;AAMEA,mBAAOsxC,SAAPtxC,GAAmB,IAAnBA;AAEF,iBAAK8wC,cAAL,GAAsB9wC,OAAOyH,UAAPzH,CAAkB,IAAlBA,EAAwB;AAAEsa,qBAAO;AAAT,aAAxBta,CAAtB;;AAEA,gBAAI,KAAKwwC,YAAT,EAAuB;AACrB,oBAAMe,YAAY,KAAKf,YAAL,CAAkBz7C,KAApC;AACA,oBAAMy8C,aAAa,KAAKhB,YAAL,CAAkB/6C,MAArC;;AACA,mBAAKu7C,aAAL,CAAmBO,SAAnB,EAA8BC,UAA9B;;AACArtD,yBAAWK,OAAXL;AAJF,mBAKO,IAAI,KAAK4pD,kBAAT,EAA6B;AAClC,oBAAM34C,OAAO,MAAM;AACjB,qBAAKu7C,OAAL,CAAar7C,IAAb,GAAoB5M,IAApB,CAAyB,UAAqB;AAAA,sBAApB;AAAElP,yBAAF;AAAS+b;AAAT,mBAAoB;;AAC5C,sBAAIA,IAAJ,EAAU;AACRpR,+BAAWK,OAAXL;AACA;AAH0C;;AAM5C1K,yBAAO+b,MAAP/b,CAAcw3D,UAAdx3D,EAA0BD,MAAMic,MAAhChc;;AACA,uBAAKu3D,aAAL,CAAmBx3D,MAAMub,KAAzB,EAAgCk8C,UAAhC;;AACA77C;AARF,mBASGjR,WAAWM,MATd;AADF;;AAaA,mBAAKksD,OAAL,GAAe,KAAK5C,kBAAL,CAAwBr4C,SAAxB,EAAf;AACAN;AAfK,mBAgBA;AACL,oBAAM,IAAIxd,KAAJ,CACJ,qEADI,CAAN;AAtCiB;;AA2CnBuM,uBAAWG,OAAXH,CAAmBuE,IAAnBvE,CAAwB,MAAM;AAC5B8sD,2BAAa,IAAbA;;AACA,kBAAI,CAACI,OAAL,EAAc;AAEZ3/C,uBAAO,IAAPA;AAFF,qBAGO;AAEL,qBAAKq/C,YAAL,GAAoBp6C,WAAW,MAAM;AACnCjF,yBAAO,IAAPA;AACA,uBAAKq/C,YAAL,GAAoB,IAApB;AAFkB,mBAGjBM,OAHiB16C,CAApB;AAP0B;AAA9B,eAYG,KAAK5M,WAAL,CAAiBtF,MAZpBN;AA3MsB;;AA6NxBstD,2BAAmC;AAAA,gBAApBC,UAAoB,uEAAP,KAAO;;AACjC,gBAAI,CAAC,KAAK/E,qBAAN,IAA+B,CAAC,KAAK8B,cAAzC,EAAyD;AACvD;AAF+B;;AAIjC,gBAAI,KAAKjhB,OAAL,KAAiB,IAArB,EAA2B;AACzBohB,qBAAO,IAAPA;AACA,mBAAKphB,OAAL,GAAe,IAAf;AAN+B;;AAQjC,kBAAMmkB,eAAe,EAArB;AAAA,kBACEC,aAAa,EADf;;AAGA,iBAAK,IAAIt2D,IAAI,CAAR,EAAWiH,KAAK,KAAK4qD,SAAL,CAAen0D,MAApC,EAA4CsC,IAAIiH,EAAhD,EAAoDjH,GAApD,EAAyD;AACvD,oBAAMgwB,MAAM,KAAK6hC,SAAL,CAAe7xD,CAAf,CAAZ;;AACA,oBAAMu2D,WAAW,KAAK/D,kBAAL,CAAwBzpD,GAAxB,CAA4BinB,GAA5B,CAAjB;;AAEA,kBAAI,CAACumC,SAASjF,OAAd,EAAuB;AACrB;AALqD;;AAOvD,kBAAI8E,UAAJ,EAAgB;AACdC,6BAAa34D,MAAb24D,GAAsB,CAAtBA;AACAC,2BAAW54D,MAAX44D,GAAoB,CAApBA;;AAEA,oBAAIC,SAAS/E,iBAAb,EAAgC;AAC9B6E,+BAAa/1D,IAAb+1D,CAAkBE,SAAS/E,iBAA3B6E;AALY;;AAOd,oBAAIE,SAAS3E,UAAT2E,GAAsB,CAA1B,EAA6B;AAC3BD,6BAAWh2D,IAAXg2D,CAAgB,GAAGC,SAAS3E,UAAW,IAAvC0E;AACAD,+BAAa/1D,IAAb+1D,CAAmB,cAAa,CAACE,SAAS3E,UAAW,KAArDyE;AAFF,uBAGO;AACLC,6BAAWh2D,IAAXg2D,CAAgB,CAAhBA;AAXY;;AAad,oBAAIC,SAAS5E,YAAT4E,GAAwB,CAA5B,EAA+B;AAC7BD,6BAAWh2D,IAAXg2D,CAAgB,GAAGC,SAAS5E,YAAT4E,GAAwBA,SAASxhD,KAAM,IAA1DuhD;AADF,uBAEO;AACLA,6BAAWh2D,IAAXg2D,CAAgB,CAAhBA;AAhBY;;AAkBd,oBAAIC,SAAS9E,aAAT8E,GAAyB,CAA7B,EAAgC;AAC9BD,6BAAWh2D,IAAXg2D,CAAgB,GAAGC,SAAS9E,aAAc,IAA1C6E;AADF,uBAEO;AACLA,6BAAWh2D,IAAXg2D,CAAgB,CAAhBA;AArBY;;AAuBd,oBAAIC,SAAS7E,WAAT6E,GAAuB,CAA3B,EAA8B;AAC5BD,6BAAWh2D,IAAXg2D,CAAgB,GAAGC,SAAS7E,WAAT6E,GAAuBA,SAASxhD,KAAM,IAAzDuhD;AACAD,+BAAa/1D,IAAb+1D,CACG,cAAa,CAACE,SAAS7E,WAAV,GAAwB6E,SAASxhD,KAAM,KADvDshD;AAFF,uBAKO;AACLC,6BAAWh2D,IAAXg2D,CAAgB,CAAhBA;AA7BY;;AAgCdtmC,oBAAI/D,KAAJ+D,CAAUwmC,OAAVxmC,GAAoBsmC,WAAW/1D,IAAX+1D,CAAgB,GAAhBA,CAApBtmC;;AACA,oBAAIqmC,aAAa34D,MAAjB,EAAyB;AACvBsyB,sBAAI/D,KAAJ+D,CAAUh7B,SAAVg7B,GAAsBqmC,aAAa91D,IAAb81D,CAAkB,GAAlBA,CAAtBrmC;AAlCY;AAAhB,qBAoCO;AACLA,oBAAI/D,KAAJ+D,CAAUwmC,OAAVxmC,GAAoB,IAApBA;AACAA,oBAAI/D,KAAJ+D,CAAUh7B,SAAVg7B,GAAsBumC,SAAS/E,iBAA/BxhC;AA7CqD;AAXxB;AA7NX;;AAAA;;AA+R1B,iBAASymC,eAAT,CAAyBC,gBAAzB,EAA2C;AACzC,gBAAM/rD,OAAO,IAAImqD,mBAAJ,CAAwB;AACnCt7C,yBAAak9C,iBAAiBl9C,WADK;AAEnCu7C,+BAAmB2B,iBAAiB3B,iBAFD;AAGnCtW,uBAAWiY,iBAAiBjY,SAHO;AAInCnoC,sBAAUogD,iBAAiBpgD,QAJQ;AAKnCw5C,sBAAU4G,iBAAiB5G,QALQ;AAMnCkF,iCAAqB0B,iBAAiB1B,mBANH;AAOnCC,kCAAsByB,iBAAiBzB;AAPJ,WAAxB,CAAb;;AASAtqD,eAAKmrD,OAALnrD,CAAa+rD,iBAAiBX,OAA9BprD;;AACA,iBAAOA,IAAP;AA71BF;;;;;;;;;;;;;ACgBA;;AAUA;;AACA;;AAGA,YAAIgsD,cAAc,MAAM;AACtB/3D,wBAAc;AACZvC,mCAAY,8BAAZA;AAFoB;;AAAA,SAAxB;;AASE;AACA,gBAAMu6D,eAAe;AACnBC,uBAAW,QADQ;AAEnB/lC,wBAAY,QAFO;AAGnBsJ,uBAAW;AAHQ,WAArB;AAKA,gBAAM08B,SAAS,sCAAf;AACA,gBAAMC,WAAW,8BAAjB;AACA,gBAAM91B,kBAAkB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAxB;AACA,gBAAMC,mBAAmB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAAzB;;AAEA,gBAAMpkB,kBAAkB,UACtB5b,IADsB,EAItB;AAAA,gBAFA81D,WAEA,uEAFc,EAEd;AAAA,gBADAC,eACA,uEADkB,KAClB;;AACA,gBACEp6D,IAAIigB,eAAJjgB,IACA,OAAOkgB,IAAP,KAAgB,WADhBlgB,IAEA,CAACo6D,eAHH,EAIE;AACA,qBAAOp6D,IAAIigB,eAAJjgB,CAAoB,IAAIkgB,IAAJ,CAAS,CAAC7b,IAAD,CAAT,EAAiB;AAAEwI,sBAAMstD;AAAR,eAAjB,CAApBn6D,CAAP;AANF;;AASA,kBAAMq6D,SACJ,mEADF;AAGA,gBAAIj1D,SAAU,QAAO+0D,WAAY,UAAjC;;AACA,iBAAK,IAAIh3D,IAAI,CAAR,EAAWiH,KAAK/F,KAAKxD,MAA1B,EAAkCsC,IAAIiH,EAAtC,EAA0CjH,KAAK,CAA/C,EAAkD;AAChD,oBAAMm3D,KAAKj2D,KAAKlB,CAALkB,IAAU,IAArB;AACA,oBAAMk2D,KAAKl2D,KAAKlB,IAAI,CAATkB,IAAc,IAAzB;AACA,oBAAMm2D,KAAKn2D,KAAKlB,IAAI,CAATkB,IAAc,IAAzB;AACA,oBAAMo2D,KAAKH,MAAM,CAAjB;AAAA,oBACEI,KAAO,MAAK,CAAL,KAAW,CAAX,GAAiBH,MAAM,CADhC;AAEA,oBAAMI,KAAKx3D,IAAI,CAAJA,GAAQiH,EAARjH,GAAe,MAAK,GAAL,KAAa,CAAb,GAAmBq3D,MAAM,CAAxCr3D,GAA6C,EAAxD;AACA,oBAAMy3D,KAAKz3D,IAAI,CAAJA,GAAQiH,EAARjH,GAAaq3D,KAAK,IAAlBr3D,GAAyB,EAApC;AACAiC,wBAAUi1D,OAAOI,EAAPJ,IAAaA,OAAOK,EAAPL,CAAbA,GAA0BA,OAAOM,EAAPN,CAA1BA,GAAuCA,OAAOO,EAAPP,CAAjDj1D;AArBF;;AAuBA,mBAAOA,MAAP;AA3BF;;AA8BA,gBAAMy1D,sBAAuB,YAAY;AACvC,kBAAMC,aAAa,IAAIj3D,UAAJ,CAAe,CAChC,IADgC,EAC1B,IAD0B,EACpB,IADoB,EACd,IADc,EACR,IADQ,EACF,IADE,EACI,IADJ,EACU,IADV,CAAf,CAAnB;AAGA,kBAAMk3D,qBAAqB,EAA3B;AAEA,kBAAMC,WAAW,IAAIp/B,UAAJ,CAAe,GAAf,CAAjB;;AACA,iBAAK,IAAIz4B,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAC5B,kBAAIsE,IAAItE,CAAR;;AACA,mBAAK,IAAIstC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1B,oBAAIhpC,IAAI,CAAR,EAAW;AACTA,sBAAI,aAAeA,KAAK,CAALA,GAAU,UAA7BA;AADF,uBAEO;AACLA,sBAAKA,KAAK,CAALA,GAAU,UAAfA;AAJwB;AAFA;;AAS5BuzD,uBAAS73D,CAAT63D,IAAcvzD,CAAduzD;AAhBqC;;AAmBvC,qBAASC,KAAT,CAAe52D,IAAf,EAAqB+oB,KAArB,EAA4BxZ,GAA5B,EAAiC;AAC/B,kBAAIsnD,MAAM,CAAC,CAAX;;AACA,mBAAK,IAAI/3D,IAAIiqB,KAAb,EAAoBjqB,IAAIyQ,GAAxB,EAA6BzQ,GAA7B,EAAkC;AAChC,sBAAMqE,IAAK,OAAMnD,KAAKlB,CAALkB,CAAN,IAAiB,IAA5B;AACA,sBAAM6B,IAAI80D,SAASxzD,CAATwzD,CAAV;AACAE,sBAAOA,QAAQ,CAARA,GAAah1D,CAApBg1D;AAL6B;;AAO/B,qBAAOA,MAAM,CAAC,CAAd;AA1BqC;;AA6BvC,qBAASC,aAAT,CAAuBtuD,IAAvB,EAA6B6mB,IAA7B,EAAmCrvB,IAAnC,EAAyC4tB,MAAzC,EAAiD;AAC/C,kBAAI3rB,IAAI2rB,MAAR;AACA,oBAAM8mC,MAAMrlC,KAAK7yB,MAAjB;AAEAwD,mBAAKiC,CAALjC,IAAW00D,OAAO,EAAPA,GAAa,IAAxB10D;AACAA,mBAAKiC,IAAI,CAATjC,IAAe00D,OAAO,EAAPA,GAAa,IAA5B10D;AACAA,mBAAKiC,IAAI,CAATjC,IAAe00D,OAAO,CAAPA,GAAY,IAA3B10D;AACAA,mBAAKiC,IAAI,CAATjC,IAAc00D,MAAM,IAApB10D;AACAiC,mBAAK,CAALA;AAEAjC,mBAAKiC,CAALjC,IAAUwI,KAAK/I,UAAL+I,CAAgB,CAAhBA,IAAqB,IAA/BxI;AACAA,mBAAKiC,IAAI,CAATjC,IAAcwI,KAAK/I,UAAL+I,CAAgB,CAAhBA,IAAqB,IAAnCxI;AACAA,mBAAKiC,IAAI,CAATjC,IAAcwI,KAAK/I,UAAL+I,CAAgB,CAAhBA,IAAqB,IAAnCxI;AACAA,mBAAKiC,IAAI,CAATjC,IAAcwI,KAAK/I,UAAL+I,CAAgB,CAAhBA,IAAqB,IAAnCxI;AACAiC,mBAAK,CAALA;AAEAjC,mBAAKG,GAALH,CAASqvB,IAATrvB,EAAeiC,CAAfjC;AACAiC,mBAAKotB,KAAK7yB,MAAVyF;AAEA,oBAAM40D,MAAMD,MAAM52D,IAAN42D,EAAYhpC,SAAS,CAArBgpC,EAAwB30D,CAAxB20D,CAAZ;AACA52D,mBAAKiC,CAALjC,IAAW62D,OAAO,EAAPA,GAAa,IAAxB72D;AACAA,mBAAKiC,IAAI,CAATjC,IAAe62D,OAAO,EAAPA,GAAa,IAA5B72D;AACAA,mBAAKiC,IAAI,CAATjC,IAAe62D,OAAO,CAAPA,GAAY,IAA3B72D;AACAA,mBAAKiC,IAAI,CAATjC,IAAc62D,MAAM,IAApB72D;AApDqC;;AAuDvC,qBAAS+2D,OAAT,CAAiB/2D,IAAjB,EAAuB+oB,KAAvB,EAA8BxZ,GAA9B,EAAmC;AACjC,kBAAIpM,IAAI,CAAR;AACA,kBAAItB,IAAI,CAAR;;AACA,mBAAK,IAAI/C,IAAIiqB,KAAb,EAAoBjqB,IAAIyQ,GAAxB,EAA6B,EAAEzQ,CAA/B,EAAkC;AAChCqE,oBAAK,MAAKnD,KAAKlB,CAALkB,IAAU,IAAf,KAAwB,KAA7BmD;AACAtB,oBAAK,KAAIsB,CAAJ,IAAS,KAAdtB;AAL+B;;AAOjC,qBAAQA,KAAK,EAALA,GAAWsB,CAAnB;AA9DqC;;AAuEvC,qBAAS6zD,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,kBAAI,CAAC9uD,iBAAL,EAAe;AAIb,uBAAO+uD,wBAAwBD,QAAxBC,CAAP;AAL2B;;AAO7B,kBAAI;AAUF,oBAAIntC,KAAJ;;AAEA,oBAAII,SAAS/hB,QAAQC,QAARD,CAAiBiyC,IAA1BlwB,KAAmC,CAAvC,EAA0C;AACxCJ,0BAAQktC,QAARltC;AADF,uBAEO;AAELA,0BAAQ3f,OAAO4tC,IAAP5tC,CAAY6sD,QAAZ7sD,CAAR2f;AAhBA;;AAkBF,sBAAMowB,SAAS5+B,OAAuBA,CAAC,MAADA,CAAvBA,CAAgCy7C,WAAhCz7C,CAA4CwO,KAA5CxO,EAAmD;AAChE7gB,yBAAO;AADyD,iBAAnD6gB,CAAf;;AAGA,uBAAO4+B,kBAAkB36C,UAAlB26C,GAA+BA,MAA/BA,GAAwC,IAAI36C,UAAJ,CAAe26C,MAAf,CAA/C;AArBF,gBAsBE,OAAOt+C,CAAP,EAAU;AACVX,gCACE,kEAAkEW,CADpEX;AA9B2B;;AAmC7B,qBAAOg8D,wBAAwBD,QAAxBC,CAAP;AA1GqC;;AA8GvC,qBAASA,uBAAT,CAAiCD,QAAjC,EAA2C;AACzC,kBAAIvC,MAAMuC,SAASz6D,MAAnB;AACA,oBAAM26D,iBAAiB,MAAvB;AAEA,oBAAMC,gBAAgBp4D,KAAKkgC,IAALlgC,CAAU01D,MAAMyC,cAAhBn4D,CAAtB;AACA,oBAAMq4D,OAAO,IAAI73D,UAAJ,CAAe,IAAIk1D,GAAJ,GAAU0C,gBAAgB,CAA1B,GAA8B,CAA7C,CAAb;AACA,kBAAIE,KAAK,CAAT;AACAD,mBAAKC,IAALD,IAAa,IAAbA;AACAA,mBAAKC,IAALD,IAAa,IAAbA;AAEA,kBAAIt3D,MAAM,CAAV;;AACA,qBAAO20D,MAAMyC,cAAb,EAA6B;AAE3BE,qBAAKC,IAALD,IAAa,IAAbA;AACAA,qBAAKC,IAALD,IAAa,IAAbA;AACAA,qBAAKC,IAALD,IAAa,IAAbA;AACAA,qBAAKC,IAALD,IAAa,IAAbA;AACAA,qBAAKC,IAALD,IAAa,IAAbA;AACAA,qBAAKl3D,GAALk3D,CAASJ,SAAS93D,QAAT83D,CAAkBl3D,GAAlBk3D,EAAuBl3D,MAAMo3D,cAA7BF,CAATI,EAAuDC,EAAvDD;AACAC,sBAAMH,cAANG;AACAv3D,uBAAOo3D,cAAPp3D;AACA20D,uBAAOyC,cAAPzC;AArBuC;;AAyBzC2C,mBAAKC,IAALD,IAAa,IAAbA;AACAA,mBAAKC,IAALD,IAAa3C,MAAM,IAAnB2C;AACAA,mBAAKC,IAALD,IAAc3C,OAAO,CAAPA,GAAY,IAA1B2C;AACAA,mBAAKC,IAALD,IAAa,CAAC3C,GAAD,GAAO,MAAP,GAAgB,IAA7B2C;AACAA,mBAAKC,IAALD,IAAe,EAAC3C,GAAD,GAAO,MAAP,KAAkB,CAAlB,GAAuB,IAAtC2C;AACAA,mBAAKl3D,GAALk3D,CAASJ,SAAS93D,QAAT83D,CAAkBl3D,GAAlBk3D,CAATI,EAAiCC,EAAjCD;AACAC,oBAAML,SAASz6D,MAATy6D,GAAkBl3D,GAAxBu3D;AAEA,oBAAMC,QAAQR,QAAQE,QAARF,EAAkB,CAAlBA,EAAqBE,SAASz6D,MAA9Bu6D,CAAd;AACAM,mBAAKC,IAALD,IAAcE,SAAS,EAATA,GAAe,IAA7BF;AACAA,mBAAKC,IAALD,IAAcE,SAAS,EAATA,GAAe,IAA7BF;AACAA,mBAAKC,IAALD,IAAcE,SAAS,CAATA,GAAc,IAA5BF;AACAA,mBAAKC,IAALD,IAAaE,QAAQ,IAArBF;AACA,qBAAOA,IAAP;AApJqC;;AAuJvC,qBAASG,MAAT,CAAgB9gC,OAAhB,EAAyBmF,IAAzB,EAA+Bk6B,eAA/B,EAAgD0B,MAAhD,EAAwD;AACtD,oBAAM1yC,QAAQ2R,QAAQ3R,KAAtB;AACA,oBAAMC,SAAS0R,QAAQ1R,MAAvB;AACA,kBAAI0yC,QAAJ,EAAcC,SAAd,EAAyB3gC,QAAzB;AACA,oBAAMz4B,QAAQm4B,QAAQ12B,IAAtB;;AAEA,sBAAQ67B,IAAR;AACE,qBAAK9wC,gBAAUC,cAAf;AACE2sE,8BAAY,CAAZA;AACAD,6BAAW,CAAXA;AACA1gC,6BAAYjS,QAAQ,CAARA,IAAc,CAA1BiS;AACA;;AACF,qBAAKjsC,gBAAUE,SAAf;AACE0sE,8BAAY,CAAZA;AACAD,6BAAW,CAAXA;AACA1gC,6BAAWjS,QAAQ,CAAnBiS;AACA;;AACF,qBAAKjsC,gBAAUG,UAAf;AACEysE,8BAAY,CAAZA;AACAD,6BAAW,CAAXA;AACA1gC,6BAAWjS,QAAQ,CAAnBiS;AACA;;AACF;AACE,wBAAM,IAAI57B,KAAJ,CAAU,gBAAV,CAAN;AAjBJ;;AAqBA,oBAAM67D,WAAW,IAAIz3D,UAAJ,CAAgB,KAAIw3B,QAAJ,IAAgBhS,MAAhC,CAAjB;AACA,kBAAI4yC,iBAAiB,CAArB;AAAA,kBACEC,cAAc,CADhB;;AAEA,mBAAK,IAAItwC,IAAI,CAAb,EAAgBA,IAAIvC,MAApB,EAA4B,EAAEuC,CAA9B,EAAiC;AAC/B0vC,yBAASW,gBAATX,IAA6B,CAA7BA;AACAA,yBAAS92D,GAAT82D,CACE14D,MAAMY,QAANZ,CAAes5D,WAAft5D,EAA4Bs5D,cAAc7gC,QAA1Cz4B,CADF04D,EAEEW,cAFFX;AAIAY,+BAAe7gC,QAAf6gC;AACAD,kCAAkB5gC,QAAlB4gC;AArCoD;;AAwCtD,kBAAI/7B,SAAS9wC,gBAAUC,cAAnB6wC,IAAqC47B,MAAzC,EAAiD;AAE/CG,iCAAiB,CAAjBA;;AACA,qBAAK,IAAIrwC,IAAI,CAAb,EAAgBA,IAAIvC,MAApB,EAA4BuC,GAA5B,EAAiC;AAC/BqwC;;AACA,uBAAK,IAAI94D,IAAI,CAAb,EAAgBA,IAAIk4B,QAApB,EAA8Bl4B,GAA9B,EAAmC;AACjCm4D,6BAASW,gBAATX,KAA8B,IAA9BA;AAH6B;AAHc;AAxCK;;AAmDtD,oBAAMa,OAAO,IAAIt4D,UAAJ,CAAe,CACzBulB,SAAS,EAATA,GAAe,IADU,EAEzBA,SAAS,EAATA,GAAe,IAFU,EAGzBA,SAAS,CAATA,GAAc,IAHW,EAI1BA,QAAQ,IAJkB,EAKzBC,UAAU,EAAVA,GAAgB,IALS,EAMzBA,UAAU,EAAVA,GAAgB,IANS,EAOzBA,UAAU,CAAVA,GAAe,IAPU,EAQ1BA,SAAS,IARiB,EAS1B0yC,QAT0B,EAU1BC,SAV0B,EAW1B,IAX0B,EAY1B,IAZ0B,EAa1B,IAb0B,CAAf,CAAb;AAeA,oBAAMN,OAAOL,YAAYC,QAAZD,CAAb;AAGA,oBAAMe,YACJtB,WAAWj6D,MAAXi6D,GAAoBC,qBAAqB,CAAzCD,GAA6CqB,KAAKt7D,MAAlDi6D,GAA2DY,KAAK76D,MADlE;AAEA,oBAAMwD,OAAO,IAAIR,UAAJ,CAAeu4D,SAAf,CAAb;AACA,kBAAInqC,SAAS,CAAb;AACA5tB,mBAAKG,GAALH,CAASy2D,UAATz2D,EAAqB4tB,MAArB5tB;AACA4tB,wBAAU6oC,WAAWj6D,MAArBoxB;AACAkpC,4BAAc,MAAdA,EAAsBgB,IAAtBhB,EAA4B92D,IAA5B82D,EAAkClpC,MAAlCkpC;AACAlpC,wBAAU8oC,qBAAqBoB,KAAKt7D,MAApCoxB;AACAkpC,4BAAc,OAAdA,EAAuBO,IAAvBP,EAA6B92D,IAA7B82D,EAAmClpC,MAAnCkpC;AACAlpC,wBAAU8oC,qBAAqBW,KAAK76D,MAApCoxB;AACAkpC,4BAAc,MAAdA,EAAsB,IAAIt3D,UAAJ,CAAe,CAAf,CAAtBs3D,EAAyC92D,IAAzC82D,EAA+ClpC,MAA/CkpC;AAEA,qBAAOl7C,gBAAgB5b,IAAhB4b,EAAsB,WAAtBA,EAAmCm6C,eAAnCn6C,CAAP;AAxOqC;;AA4OvC,mBAAO,SAAS46C,mBAAT,CAA6B9/B,OAA7B,EAAsCq/B,eAAtC,EAAuD0B,MAAvD,EAA+D;AACpE,oBAAM57B,OACJnF,QAAQmF,IAARnF,KAAiBl4B,SAAjBk4B,GAA6B3rC,gBAAUC,cAAvC0rC,GAAwDA,QAAQmF,IADlE;AAEA,qBAAO27B,OAAO9gC,OAAP8gC,EAAgB37B,IAAhB27B,EAAsBzB,eAAtByB,EAAuCC,MAAvCD,CAAP;AAHF;AA5O2B,aAA7B;;AAmPA,gBAAMQ,aAAN,CAAoB;AAClBt6D,0BAAc;AACZ,mBAAK46B,aAAL,GAAqB,CAArB;AACA,mBAAK1I,UAAL,GAAkB8lC,aAAa9lC,UAA/B;AACA,mBAAKyI,QAAL,GAAgB,CAAhB;AAEA,mBAAKE,UAAL,GAAkB1vC,qBAAlB;AACA,mBAAK4vC,UAAL,GAAkB3vC,0BAAlB;AACA,mBAAK4vC,OAAL,GAAe,CAAf;AACA,mBAAKM,iBAAL,GAAyB5uC,wBAAkBC,IAA3C;AACA,mBAAKmuC,eAAL,GAAuB,CAAvB;AAGA,mBAAKlR,CAAL,GAAS,CAAT;AACA,mBAAKC,CAAL,GAAS,CAAT;AAGA,mBAAKoR,KAAL,GAAa,CAAb;AACA,mBAAKC,KAAL,GAAa,CAAb;AAGA,mBAAKC,WAAL,GAAmB,CAAnB;AACA,mBAAKC,WAAL,GAAmB,CAAnB;AACA,mBAAKC,UAAL,GAAkB,CAAlB;AACA,mBAAKE,QAAL,GAAgB,CAAhB;AAGA,mBAAKC,SAAL,GAAiBw8B,aAAax8B,SAA9B;AACA,mBAAKC,WAAL,GAAmB,SAAnB;AAEA,mBAAKE,SAAL,GAAiB,CAAjB;AACA,mBAAKC,WAAL,GAAmB,CAAnB;AACA,mBAAKC,SAAL,GAAiB,CAAjB;AACA,mBAAKgE,QAAL,GAAgB,EAAhB;AACA,mBAAKD,OAAL,GAAe,EAAf;AACA,mBAAKE,UAAL,GAAkB,CAAlB;AAEA,mBAAKiH,SAAL,GAAiB,EAAjB;AACA,mBAAKC,SAAL,GAAiB,CAAjB;AAEA,mBAAKuzB,YAAL,GAAoB,EAApB;AAGA,mBAAKC,aAAL,GAAqB,IAArB;AACA,mBAAKC,SAAL,GAAiB,IAAjB;AAEA,mBAAKC,MAAL,GAAc,EAAd;AA9CgB;;AAiDlBhxC,oBAAQ;AACN,qBAAOnqB,OAAOwD,MAAPxD,CAAc,IAAdA,CAAP;AAlDgB;;AAqDlB28B,4BAAgBtS,CAAhBsS,EAAmBrS,CAAnBqS,EAAsB;AACpB,mBAAKtS,CAAL,GAASA,CAAT;AACA,mBAAKC,CAAL,GAASA,CAAT;AAvDgB;;AAAA;;AA4DpB,mBAAS8wC,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B,gBAAIC,SAAS,EAAb;AACA,kBAAMvpB,MAAM,EAAZ;;AAEA,uBAAWwpB,aAAX,IAA4BF,MAA5B,EAAoC;AAClC,kBAAIE,cAAcC,EAAdD,KAAqB,MAAzB,EAAiC;AAC/BD,uBAAOn5D,IAAPm5D,CAAY;AAAEl2B,wBAAM,EAAR;AAAYo2B,sBAAI,OAAhB;AAAyBlgD,yBAAO;AAAhC,iBAAZggD;AACAvpB,oBAAI5vC,IAAJ4vC,CAASupB,MAATvpB;AACAupB,yBAASA,OAAOA,OAAO/7D,MAAP+7D,GAAgB,CAAvBA,EAA0BhgD,KAAnCggD;AACA;AALgC;;AAQlC,kBAAIC,cAAcC,EAAdD,KAAqB,SAAzB,EAAoC;AAClCD,yBAASvpB,IAAIjZ,GAAJiZ,EAATupB;AADF,qBAEO;AACLA,uBAAOn5D,IAAPm5D,CAAYC,aAAZD;AAXgC;AAJR;;AAkB5B,mBAAOA,MAAP;AA1WF;;AAoXA,mBAASG,EAAT,CAAY17D,KAAZ,EAAmB;AACjB,gBAAIrC,OAAOC,SAAPD,CAAiBqC,KAAjBrC,CAAJ,EAA6B;AAC3B,qBAAOqC,MAAMuE,QAANvE,EAAP;AAFe;;AAIjB,kBAAM8wB,IAAI9wB,MAAM27D,OAAN37D,CAAc,EAAdA,CAAV;AACA,gBAAI8B,IAAIgvB,EAAEtxB,MAAFsxB,GAAW,CAAnB;;AACA,gBAAIA,EAAEhvB,CAAFgvB,MAAS,GAAb,EAAkB;AAChB,qBAAOA,CAAP;AAPe;;AAWjB,eAAG;AACDhvB;AADF,qBAESgvB,EAAEhvB,CAAFgvB,MAAS,GAFlB;;AAGA,mBAAOA,EAAEjG,SAAFiG,CAAY,CAAZA,EAAeA,EAAEhvB,CAAFgvB,MAAS,GAATA,GAAehvB,CAAfgvB,GAAmBhvB,IAAI,CAAtCgvB,CAAP;AAlYF;;AA8YA,mBAAS8qC,EAAT,CAAY12D,CAAZ,EAAe;AACb,gBAAIA,EAAE,CAAFA,MAAS,CAATA,IAAcA,EAAE,CAAFA,MAAS,CAA3B,EAA8B;AAC5B,kBAAIA,EAAE,CAAFA,MAAS,CAATA,IAAcA,EAAE,CAAFA,MAAS,CAA3B,EAA8B;AAC5B,oBAAIA,EAAE,CAAFA,MAAS,CAATA,IAAcA,EAAE,CAAFA,MAAS,CAA3B,EAA8B;AAC5B,yBAAO,EAAP;AAF0B;;AAI5B,uBAAQ,SAAQw2D,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,GAArC;AAL0B;;AAO5B,kBAAIx2D,EAAE,CAAFA,MAASA,EAAE,CAAFA,CAATA,IAAiBA,EAAE,CAAFA,MAAS,CAACA,EAAE,CAAFA,CAA/B,EAAqC;AACnC,sBAAMiB,IAAKnE,KAAK65D,IAAL75D,CAAUkD,EAAE,CAAFA,CAAVlD,IAAkB,GAAlBA,GAAyBA,KAAKzO,EAAzC;AACA,uBAAQ,UAASmoE,GAAGv1D,CAAHu1D,CAAM,GAAvB;AAT0B;AAA9B,mBAWO;AACL,kBAAIx2D,EAAE,CAAFA,MAAS,CAATA,IAAcA,EAAE,CAAFA,MAAS,CAAvBA,IAA4BA,EAAE,CAAFA,MAAS,CAArCA,IAA0CA,EAAE,CAAFA,MAAS,CAAvD,EAA0D;AACxD,uBAAQ,aAAYw2D,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,GAAzC;AAFG;AAZM;;AAiBb,mBACG,UAASA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,IAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,GAAlE,GACD,GAAGA,GAAGx2D,EAAE,CAAFA,CAAHw2D,CAAS,GAFd;AA/ZF;;AAwaA,cAAII,YAAY,CAAhB;AACA,cAAIC,YAAY,CAAhB;AACA,cAAIC,eAAe,CAAnB;AAEAvD,8CAAc,MAAM;AAClB/3D,wBAAYuV,UAAZvV,EAAwBwV,IAAxBxV,EAAuD;AAAA,kBAAzBq4D,eAAyB,uEAAP,KAAO;AACrD,mBAAK9Y,UAAL,GAAkB,IAAIz2B,4BAAJ,EAAlB;AAEA,mBAAK2J,OAAL,GAAe,IAAI6nC,aAAJ,EAAf;AACA,mBAAKiB,eAAL,GAAuBpwE,qBAAvB;AACA,mBAAKqwE,cAAL,GAAsB,EAAtB;AACA,mBAAKC,UAAL,GAAkB,EAAlB;AACA,mBAAKlmD,UAAL,GAAkBA,UAAlB;AACA,mBAAKC,IAAL,GAAYA,IAAZ;AACA,mBAAKmtB,WAAL,GAAmB,IAAnB;AACA,mBAAKC,aAAL,GAAqB,KAArB;AAEA,mBAAK84B,UAAL,GAAkB,KAAlB;AACA,mBAAKC,aAAL,GAAqBp8D,OAAOwD,MAAPxD,CAAc,IAAdA,CAArB;AACA,mBAAKq8D,QAAL,GAAgB,IAAhB;AACA,mBAAKvD,eAAL,GAAuB,CAAC,CAACA,eAAzB;AAKA,mBAAKwD,kBAAL,GAA0B,EAA1B;;AACA,yBAAWrsB,EAAX,IAAiBh6C,SAAjB,EAAsB;AACpB,qBAAKqmE,kBAAL,CAAwBrmE,UAAIg6C,EAAJh6C,CAAxB,IAAmCg6C,EAAnC;AAtBmD;AADrC;;AA2BlBt5C,mBAAO;AACL,mBAAKslE,cAAL,CAAoB95D,IAApB,CAAyB,KAAK65D,eAA9B;AACA,oBAAMpjC,MAAM,KAAK1F,OAAjB;AACA,mBAAKgpC,UAAL,CAAgB/5D,IAAhB,CAAqBy2B,GAArB;AACA,mBAAK1F,OAAL,GAAe0F,IAAIzO,KAAJyO,EAAf;AA/BgB;;AAkClBhiC,sBAAU;AACR,mBAAKolE,eAAL,GAAuB,KAAKC,cAAL,CAAoBnjC,GAApB,EAAvB;AACA,mBAAK5F,OAAL,GAAe,KAAKgpC,UAAL,CAAgBpjC,GAAhB,EAAf;AACA,mBAAKsK,WAAL,GAAmB,IAAnB;AACA,mBAAKm5B,IAAL,GAAY,IAAZ;AAtCgB;;AAyClB5uB,kBAAMryB,KAANqyB,EAAa;AACX,mBAAKh3C,IAAL;AACA,mBAAK6lE,aAAL,CAAmBlhD,KAAnB;AACA,mBAAK1kB,OAAL;AA5CgB;;AA+ClB6lE,6BAAiBrjD,YAAjBqjD,EAA+B;AAC7B,oBAAMpjD,UAAUD,aAAaC,OAA7B;AACA,oBAAMC,YAAYF,aAAaE,SAA/B;;AAEA,mBAAK,IAAIzX,IAAI,CAAR,EAAWiH,KAAKuQ,QAAQ9Z,MAA7B,EAAqCsC,IAAIiH,EAAzC,EAA6CjH,GAA7C,EAAkD;AAChD,oBAAIwX,QAAQxX,CAARwX,MAAepjB,UAAIC,UAAvB,EAAmC;AACjC;AAF8C;;AAKhD,2BAAW2J,GAAX,IAAkByZ,UAAUzX,CAAVyX,CAAlB,EAAgC;AAC9B,wBAAMisB,WAAW1lC,IAAIT,UAAJS,CAAe,IAAfA,IAAuB,KAAKmW,UAA5BnW,GAAyC,KAAKoW,IAA/D;AACA,wBAAMpL,UAAU,IAAIC,OAAJ,CAAYC,WAAW;AACrCw6B,6BAAS36B,GAAT26B,CAAa1lC,GAAb0lC,EAAkBx6B,OAAlBw6B;AADc,oBAAhB;AAGA,uBAAKrS,OAAL,CAAa8nC,YAAb,CAA0B74D,IAA1B,CAA+B0I,OAA/B;AAV8C;AAJrB;;AAiB7B,qBAAOC,QAAQ+E,GAAR/E,CAAY,KAAKooB,OAAL,CAAa8nC,YAAzBlwD,CAAP;AAhEgB;;AAmElBjU,sBAAUqP,CAAVrP,EAAa+N,CAAb/N,EAAgBsP,CAAhBtP,EAAmBwO,CAAnBxO,EAAsB+H,CAAtB/H,EAAyB+/B,CAAzB//B,EAA4B;AAC1B,oBAAMmlE,kBAAkB,CAAC91D,CAAD,EAAItB,CAAJ,EAAOuB,CAAP,EAAUd,CAAV,EAAazG,CAAb,EAAgBg4B,CAAhB,CAAxB;AACA,mBAAKolC,eAAL,GAAuBx3D,WAAK3N,SAAL2N,CACrB,KAAKw3D,eADgBx3D,EAErBw3D,eAFqBx3D,CAAvB;AAIA,mBAAK+3D,IAAL,GAAY,IAAZ;AAzEgB;;AA4ElBG,mBAAOtjD,YAAPsjD,EAAqBvkD,QAArBukD,EAA+B;AAC7B,mBAAKvkD,QAAL,GAAgBA,QAAhB;;AAEA,oBAAMwkD,aAAa,KAAKv9C,WAAL,CAAiBjH,QAAjB,CAAnB;;AACA,qBAAO,KAAKskD,gBAAL,CAAsBrjD,YAAtB,EAAoCnK,IAApC,CAAyC,MAAM;AACpD,qBAAK+sD,eAAL,GAAuBpwE,qBAAvB;AACA,qBAAK4wE,aAAL,CAAmB,KAAKI,aAAL,CAAmBxjD,YAAnB,CAAnB;AACA,uBAAOujD,UAAP;AAHK,gBAAP;AAhFgB;;AAuFlBC,0BAAcxjD,YAAdwjD,EAA4B;AAC1B,oBAAMC,oBAAoB,KAAKP,kBAA/B;AACA,oBAAMhjD,YAAYF,aAAaE,SAA/B;AACA,oBAAMD,UAAUD,aAAaC,OAA7B;AACA,oBAAMgiD,SAAS,EAAf;;AACA,mBAAK,IAAIx5D,IAAI,CAAR,EAAWiH,KAAKuQ,QAAQ9Z,MAA7B,EAAqCsC,IAAIiH,EAAzC,EAA6CjH,GAA7C,EAAkD;AAChD,sBAAMujC,OAAO/rB,QAAQxX,CAARwX,CAAb;AACAgiD,uBAAOl5D,IAAPk5D,CAAY;AACVj2B,sBADU;AAEVo2B,sBAAIqB,kBAAkBz3B,IAAlBy3B,CAFM;AAGV1pC,wBAAM7Z,UAAUzX,CAAVyX;AAHI,iBAAZ+hD;AAPwB;;AAa1B,qBAAOD,aAAaC,MAAbD,CAAP;AApGgB;;AAuGlBoB,0BAAclB,MAAdkB,EAAsB;AACpB,yBAAWM,aAAX,IAA4BxB,MAA5B,EAAoC;AAClC,sBAAME,KAAKsB,cAActB,EAAzB;AACA,sBAAMp2B,OAAO03B,cAAc13B,IAA3B;AACA,sBAAMjS,OAAO2pC,cAAc3pC,IAA3B;;AAEA,wBAAQiS,OAAO,CAAf;AACE,uBAAKnvC,UAAI+B,SAAT;AACE,yBAAKA,SAAL;AACA;;AACF,uBAAK/B,UAAIC,UAAT;AAEE;;AACF,uBAAKD,UAAIoC,UAAT;AACE,yBAAKA,UAAL,CAAgB86B,IAAhB;AACA;;AACF,uBAAKl9B,UAAIyC,kBAAT;AACE,yBAAKA,kBAAL,CAAwBy6B,KAAK,CAALA,CAAxB,EAAiCA,KAAK,CAALA,CAAjC;AACA;;AACF,uBAAKl9B,UAAIqC,OAAT;AACE,yBAAKA,OAAL,CAAa66B,IAAb;AACA;;AACF,uBAAKl9B,UAAI4C,QAAT;AACE,yBAAKA,QAAL,CAAcs6B,KAAK,CAALA,CAAd;AACA;;AACF,uBAAKl9B,UAAI6C,cAAT;AACE,yBAAKD,QAAL,CAAcs6B,KAAK,CAALA,CAAd;AACA;;AACF,uBAAKl9B,UAAIgC,OAAT;AACE,yBAAKA,OAAL;AACA;;AACF,uBAAKhC,UAAIwC,QAAT;AACE,yBAAKA,QAAL,CAAc06B,KAAK,CAALA,CAAd,EAAuBA,KAAK,CAALA,CAAvB;AACA;;AACF,uBAAKl9B,UAAIiC,cAAT;AACE,yBAAKA,cAAL,CAAoBi7B,KAAK,CAALA,CAApB;AACA;;AACF,uBAAKl9B,UAAIkC,cAAT;AACE,yBAAKA,cAAL,CAAoBg7B,KAAK,CAALA,CAApB;AACA;;AACF,uBAAKl9B,UAAImC,SAAT;AACE,yBAAKA,SAAL,CAAe+6B,KAAK,CAALA,CAAf;AACA;;AACF,uBAAKl9B,UAAI0C,aAAT;AACE,yBAAKA,aAAL,CACEw6B,KAAK,CAALA,CADF,EAEEA,KAAK,CAALA,CAFF,EAGEA,KAAK,CAALA,CAHF,EAIEA,KAAK,CAALA,CAJF,EAKEA,KAAK,CAALA,CALF,EAMEA,KAAK,CAALA,CANF;AAQA;;AACF,uBAAKl9B,UAAIuC,WAAT;AACE,yBAAKA,WAAL,CAAiB26B,KAAK,CAALA,CAAjB;AACA;;AACF,uBAAKl9B,UAAIsC,oBAAT;AACE,yBAAKA,oBAAL,CAA0B46B,KAAK,CAALA,CAA1B;AACA;;AACF,uBAAKl9B,UAAIE,YAAT;AACE,yBAAKA,YAAL,CAAkBg9B,KAAK,CAALA,CAAlB;AACA;;AACF,uBAAKl9B,UAAII,WAAT;AACE,yBAAKA,WAAL,CAAiB88B,KAAK,CAALA,CAAjB;AACA;;AACF,uBAAKl9B,UAAIG,UAAT;AACE,yBAAKA,UAAL,CAAgB+8B,KAAK,CAALA,CAAhB;AACA;;AACF,uBAAKl9B,UAAIK,aAAT;AACE,yBAAKA,aAAL,CAAmB68B,KAAK,CAALA,CAAnB;AACA;;AACF,uBAAKl9B,UAAI2D,eAAT;AACE,yBAAKA,eAAL,CAAqBu5B,KAAK,CAALA,CAArB,EAA8BA,KAAK,CAALA,CAA9B,EAAuCA,KAAK,CAALA,CAAvC;AACA;;AACF,uBAAKl9B,UAAI0D,iBAAT;AACE,yBAAKA,iBAAL,CAAuBw5B,KAAK,CAALA,CAAvB,EAAgCA,KAAK,CAALA,CAAhC,EAAyCA,KAAK,CAALA,CAAzC;AACA;;AACF,uBAAKl9B,UAAIqD,eAAT;AACE,yBAAKA,eAAL,CAAqB65B,IAArB;AACA;;AACF,uBAAKl9B,UAAIuD,aAAT;AACE,yBAAKA,aAAL,CAAmB25B,IAAnB;AACA;;AACF,uBAAKl9B,UAAI8D,WAAT;AACE,yBAAKA,WAAL,CAAiBo5B,KAAK,CAALA,CAAjB;AACA;;AACF,uBAAKl9B,UAAIM,OAAT;AACE,yBAAKA,OAAL,CAAa48B,KAAK,CAALA,CAAb,EAAsBA,KAAK,CAALA,CAAtB;AACA;;AACF,uBAAKl9B,UAAIO,kBAAT;AACE,yBAAKA,kBAAL,CAAwB28B,KAAK,CAALA,CAAxB;AACA;;AACF,uBAAKl9B,UAAIQ,WAAT;AACE,yBAAKA,WAAL,CAAiB08B,KAAK,CAALA,CAAjB;AACA;;AACF,uBAAKl9B,UAAIS,SAAT;AACE,yBAAKA,SAAL,CAAey8B,KAAK,CAALA,CAAf;AACA;;AACF,uBAAKl9B,UAAIsB,IAAT;AACE,yBAAKA,IAAL;AACA;;AACF,uBAAKtB,UAAIuB,MAAT;AACE,yBAAKA,MAAL;AACA;;AACF,uBAAKvB,UAAIoB,MAAT;AACE,yBAAKA,MAAL;AACA;;AACF,uBAAKpB,UAAIwB,UAAT;AACE,yBAAKA,UAAL;AACA;;AACF,uBAAKxB,UAAIyB,YAAT;AACE,yBAAKA,YAAL;AACA;;AACF,uBAAKzB,UAAI6B,IAAT;AACE,yBAAKA,IAAL,CAAU,SAAV;AACA;;AACF,uBAAK7B,UAAI8B,MAAT;AACE,yBAAKD,IAAL,CAAU,SAAV;AACA;;AACF,uBAAK7B,UAAI0F,wBAAT;AACE,yBAAKA,wBAAL;AACA;;AACF,uBAAK1F,UAAIqF,iBAAT;AACE,yBAAKA,iBAAL,CAAuB63B,KAAK,CAALA,CAAvB;AACA;;AACF,uBAAKl9B,UAAIsF,uBAAT;AACE,yBAAKA,uBAAL,CAA6B43B,KAAK,CAALA,CAA7B;AACA;;AACF,uBAAKl9B,UAAImF,qBAAT;AACE,yBAAKA,qBAAL,CAA2B+3B,KAAK,CAALA,CAA3B;AACA;;AACF,uBAAKl9B,UAAI0E,qBAAT;AACE,yBAAKA,qBAAL,CAA2Bw4B,KAAK,CAALA,CAA3B,EAAoCA,KAAK,CAALA,CAApC;AACA;;AACF,uBAAKl9B,UAAI2E,mBAAT;AACE,yBAAKA,mBAAL;AACA;;AACF,uBAAK3E,UAAIkB,SAAT;AACE,yBAAKA,SAAL;AACA;;AACF,uBAAKlB,UAAIqB,WAAT;AACE,yBAAKA,WAAL;AACA;;AACF,uBAAKrB,UAAI0B,eAAT;AACE,yBAAKA,eAAL;AACA;;AACF,uBAAK1B,UAAI2B,iBAAT;AACE,yBAAKA,iBAAL;AACA;;AACF,uBAAK3B,UAAI2C,QAAT;AACE,yBAAKA,QAAL;AACA;;AACF,uBAAK3C,UAAIY,SAAT;AACE,yBAAKA,SAAL,CACEs8B,KAAK,CAALA,CADF,EAEEA,KAAK,CAALA,CAFF,EAGEA,KAAK,CAALA,CAHF,EAIEA,KAAK,CAALA,CAJF,EAKEA,KAAK,CAALA,CALF,EAMEA,KAAK,CAALA,CANF;AAQA;;AACF,uBAAKl9B,UAAI2F,aAAT;AACE,yBAAKA,aAAL,CAAmBu3B,KAAK,CAALA,CAAnB,EAA4BA,KAAK,CAALA,CAA5B;AACA;;AACF,uBAAKl9B,UAAI4B,OAAT;AACE,yBAAKA,OAAL;AACA;;AACF,uBAAK,EAAL;AACE,yBAAK81C,KAAL,CAAWmvB,cAAcxhD,KAAzB;AACA;;AACF;AACErd,oCAAM,0BAAyBu9D,EAA1B,EAALv9D;AACA;AAvKJ;AANkB;AAvGJ;;AAyRlB9F,2BAAe0jC,WAAf1jC,EAA4B;AAC1B,mBAAK+6B,OAAL,CAAa2I,WAAb,GAA2BA,WAA3B;AA1RgB;;AA6RlB3jC,2BAAe0jC,WAAf1jC,EAA4B;AAC1B,mBAAKg7B,OAAL,CAAa0I,WAAb,GAA2BA,WAA3B;AA9RgB;;AAiSlBhjC,uBAAW;AACT,mBAAKH,QAAL,CAAc,CAAd,EAAiB,KAAKy6B,OAAL,CAAauI,OAA9B;AAlSgB;;AAqSlB9iC,0BAAcuN,CAAdvN,EAAiBiM,CAAjBjM,EAAoBwN,CAApBxN,EAAuB0M,CAAvB1M,EAA0BiG,CAA1BjG,EAA6Bi+B,CAA7Bj+B,EAAgC;AAC9B,oBAAMu6B,UAAU,KAAKA,OAArB;AACAA,sBAAQoI,UAARpI,GAAqBA,QAAQ6pC,UAAR7pC,GAAqB,CAAChtB,CAAD,EAAItB,CAAJ,EAAOuB,CAAP,EAAUd,CAAV,EAAazG,CAAb,EAAgBg4B,CAAhB,CAA1C1D;AACAA,sBAAQqI,eAARrI,GAA0BnxB,KAAK8iC,KAAL9iC,CAAWmE,CAAXnE,EAAc6C,CAAd7C,CAA1BmxB;AAEAA,sBAAQ7I,CAAR6I,GAAYA,QAAQwI,KAARxI,GAAgB,CAA5BA;AACAA,sBAAQ5I,CAAR4I,GAAYA,QAAQyI,KAARzI,GAAgB,CAA5BA;AAEAA,sBAAQ8pC,OAAR9pC,GAAkB,EAAlBA;AACAA,sBAAQ+pC,OAAR/pC,GAAkB,EAAlBA;AACAA,sBAAQgqC,KAARhqC,GAAgB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAhBkL;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,aAAnCA,EAAkDA,QAAQf,UAA1De;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CACE,IADFA,EAEE,WAFFA,EAGE,GAAGuoC,GAAGvoC,QAAQkI,QAAXqgC,CAAqB,IAH1BvoC;AAKAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,GAAnCA,EAAwCuoC,GAAG,CAACvoC,QAAQ5I,CAAZmxC,CAAxCvoC;AAEAA,sBAAQkqC,UAARlqC,GAAqB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAArBkL;AACAA,sBAAQkqC,UAARlqC,CAAmBxG,WAAnBwG,CAA+BA,QAAQgqC,KAAvChqC;AAzTgB;;AA4TlBl7B,wBAAY;AACV,oBAAMk7B,UAAU,KAAKA,OAArB;AACAA,sBAAQ7I,CAAR6I,GAAYA,QAAQwI,KAARxI,GAAgB,CAA5BA;AACAA,sBAAQ5I,CAAR4I,GAAYA,QAAQyI,KAARzI,GAAgB,CAA5BA;AACAA,sBAAQoI,UAARpI,GAAqBtnC,qBAArBsnC;AACAA,sBAAQ6pC,UAAR7pC,GAAqBtnC,qBAArBsnC;AACAA,sBAAQqI,eAARrI,GAA0B,CAA1BA;AACAA,sBAAQgqC,KAARhqC,GAAgB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAhBkL;AACAA,sBAAQkqC,UAARlqC,GAAqB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAArBkL;AACAA,sBAAQmqC,MAARnqC,GAAiB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,OAA9B,CAAjBkL;AACAA,sBAAQ8pC,OAAR9pC,GAAkB,EAAlBA;AACAA,sBAAQ+pC,OAAR/pC,GAAkB,EAAlBA;AAvUgB;;AA0UlBz6B,qBAAS4xB,CAAT5xB,EAAY6xB,CAAZ7xB,EAAe;AACb,oBAAMy6B,UAAU,KAAKA,OAArB;AACAA,sBAAQ7I,CAAR6I,GAAYA,QAAQwI,KAARxI,IAAiB7I,CAA7B6I;AACAA,sBAAQ5I,CAAR4I,GAAYA,QAAQyI,KAARzI,IAAiB5I,CAA7B4I;AAEAA,sBAAQ8pC,OAAR9pC,GAAkB,EAAlBA;AACAA,sBAAQ+pC,OAAR/pC,GAAkB,EAAlBA;AACAA,sBAAQgqC,KAARhqC,GAAgB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAhBkL;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,aAAnCA,EAAkDA,QAAQf,UAA1De;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CACE,IADFA,EAEE,WAFFA,EAGE,GAAGuoC,GAAGvoC,QAAQkI,QAAXqgC,CAAqB,IAH1BvoC;AAKAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,GAAnCA,EAAwCuoC,GAAG,CAACvoC,QAAQ5I,CAAZmxC,CAAxCvoC;AAxVgB;;AA2VlBr6B,qBAASuxC,MAATvxC,EAAiB;AACf,oBAAMq6B,UAAU,KAAKA,OAArB;AACA,oBAAM92B,OAAO82B,QAAQ92B,IAArB;AACA,oBAAMg/B,WAAWlI,QAAQkI,QAAzB;;AACA,kBAAIA,aAAa,CAAjB,EAAoB;AAClB;AALa;;AAQf,oBAAMC,gBAAgBnI,QAAQmI,aAA9B;AACA,oBAAMO,cAAc1I,QAAQ0I,WAA5B;AACA,oBAAMC,cAAc3I,QAAQ2I,WAA5B;AACA,oBAAMuN,gBAAgBlW,QAAQkW,aAA9B;AACA,oBAAMtN,aAAa5I,QAAQ4I,UAAR5I,GAAqBkW,aAAxC;AACA,oBAAMmB,WAAWnuC,KAAKmuC,QAAtB;AACA,oBAAMC,aAAaD,WAAW,CAAXA,GAAe,CAAC,CAAnC;AACA,oBAAME,kBAAkBruC,KAAKquC,eAA7B;AACA,oBAAMC,oBAAoBtP,WAAWlI,QAAQsI,UAARtI,CAAmB,CAAnBA,CAArC;AAEA,kBAAI7I,IAAI,CAAR;;AACA,yBAAWwgB,KAAX,IAAoBT,MAApB,EAA4B;AAC1B,oBAAIS,UAAU,IAAd,EAAoB;AAElBxgB,uBAAK+e,gBAAgBvN,WAArBxR;AACA;AAHF,uBAIO,IAAI,OAAOwgB,KAAP,KAAiB,QAArB,EAA+B;AACpCxgB,uBAAMmgB,aAAaK,KAAbL,GAAqBpP,QAArBoP,GAAiC,IAAvCngB;AACA;AAPwB;;AAU1B,sBAAM4e,UAAW,OAAM8B,OAAN,GAAgBlP,WAAhB,GAA8B,CAA9B,IAAmCD,WAApD;AACA,sBAAM7I,YAAY8X,MAAMG,QAAxB;AACA,oBAAIE,OAAJ,EAAaC,OAAb;AACA,oBAAIrjB,QAAQ+iB,MAAM/iB,KAAlB;;AACA,oBAAIyiB,QAAJ,EAAc;AACZ,sBAAIc,EAAJ;AACA,wBAAMD,UAAUP,MAAMO,OAANP,IAAiBJ,eAAjC;AACAY,uBAAKR,MAAMO,OAANP,GAAgBO,QAAQ,CAARA,CAAhBP,GAA6B/iB,QAAQ,GAA1CujB;AACAA,uBAAK,CAACA,EAAD,GAAMX,iBAAXW;AACA,wBAAMC,KAAKF,QAAQ,CAARA,IAAaV,iBAAxB;AAEA5iB,0BAAQsjB,UAAU,CAACA,QAAQ,CAARA,CAAXA,GAAwBtjB,KAAhCA;AACAojB,4BAAUG,KAAKhQ,aAAf6P;AACAC,4BAAW,KAAIG,EAAJ,IAAUjQ,aAArB8P;AATF,uBAUO;AACLD,4BAAU7gB,IAAIgR,aAAd6P;AACAC,4BAAU,CAAVA;AA1BwB;;AA6B1B,oBAAIN,MAAMc,QAANd,IAAkBzuC,KAAK6yB,WAA3B,EAAwC;AACtCiE,0BAAQ8pC,OAAR9pC,CAAgB/wB,IAAhB+wB,CAAqBA,QAAQ7I,CAAR6I,GAAYgY,OAAjChY;;AACA,sBAAIqX,QAAJ,EAAc;AACZrX,4BAAQ+pC,OAAR/pC,CAAgB/wB,IAAhB+wB,CAAqB,CAACA,QAAQ5I,CAAT,GAAa6gB,OAAlCjY;AAHoC;;AAKtCA,0BAAQgqC,KAARhqC,CAAc7X,WAAd6X,IAA6BH,SAA7BG;AALF,uBAMO,CAnCmB;;AA0C1B,oBAAI4Y,SAAJ;;AACA,oBAAIvB,QAAJ,EAAc;AACZuB,8BAAYhkB,QAAQ4iB,iBAAR5iB,GAA4BmhB,UAAUG,aAAlD0C;AADF,uBAEO;AACLA,8BAAYhkB,QAAQ4iB,iBAAR5iB,GAA4BmhB,UAAUG,aAAlD0C;AA9CwB;;AAiD1BzhB,qBAAKyhB,SAALzhB;AApEa;;AAsEf6I,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CACE,IADFA,EAEE,GAFFA,EAGEA,QAAQ8pC,OAAR9pC,CAAgB3vB,GAAhB2vB,CAAoBuoC,EAApBvoC,EAAwB9wB,IAAxB8wB,CAA6B,GAA7BA,CAHFA;;AAKA,kBAAIqX,QAAJ,EAAc;AACZrX,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CACE,IADFA,EAEE,GAFFA,EAGEA,QAAQ+pC,OAAR/pC,CAAgB3vB,GAAhB2vB,CAAoBuoC,EAApBvoC,EAAwB9wB,IAAxB8wB,CAA6B,GAA7BA,CAHFA;AADF,qBAMO;AACLA,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,GAAnCA,EAAwCuoC,GAAG,CAACvoC,QAAQ5I,CAAZmxC,CAAxCvoC;AAlFa;;AAqFf,kBAAIqX,QAAJ,EAAc;AACZrX,wBAAQ5I,CAAR4I,IAAa7I,CAAb6I;AADF,qBAEO;AACLA,wBAAQ7I,CAAR6I,IAAa7I,IAAIyR,UAAjB5I;AAxFa;;AA2FfA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,aAAnCA,EAAkDA,QAAQf,UAA1De;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CACE,IADFA,EAEE,WAFFA,EAGE,GAAGuoC,GAAGvoC,QAAQkI,QAAXqgC,CAAqB,IAH1BvoC;;AAKA,kBAAIA,QAAQwlC,SAARxlC,KAAsBulC,aAAaC,SAAvC,EAAkD;AAChDxlC,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,YAAnCA,EAAiDA,QAAQwlC,SAAzDxlC;AAlGa;;AAoGf,kBAAIA,QAAQP,UAARO,KAAuBulC,aAAa9lC,UAAxC,EAAoD;AAClDO,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,aAAnCA,EAAkDA,QAAQP,UAA1DO;AArGa;;AAwGf,oBAAM8W,iBACJ9W,QAAQ6I,iBAAR7I,GAA4B/lC,wBAAkBS,gBADhD;;AAEA,kBACEo8C,mBAAmB78C,wBAAkBC,IAArC48C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA,oBAAI4lC,QAAQ+I,SAAR/I,KAAsBulC,aAAax8B,SAAvC,EAAkD;AAChD/I,0BAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,MAAnCA,EAA2CA,QAAQ+I,SAAnD/I;AAFF;;AAIA,oBAAIA,QAAQkJ,SAARlJ,GAAoB,CAAxB,EAA2B;AACzBA,0BAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,cAAnCA,EAAmDA,QAAQkJ,SAA3DlJ;AALF;AAHF,qBAUO,IAAIA,QAAQ6I,iBAAR7I,KAA8B/lC,wBAAkBQ,WAApD,EAAiE;AAGtEulC,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,MAAnCA,EAA2C,aAA3CA;AAHK,qBAIA;AACLA,wBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,MAAnCA,EAA2C,MAA3CA;AAzHa;;AA4Hf,kBACE8W,mBAAmB78C,wBAAkBE,MAArC28C,IACAA,mBAAmB78C,wBAAkBG,WAFvC,EAGE;AACA,sBAAMgwE,iBAAiB,KAAKpqC,QAAQqI,eAARrI,IAA2B,CAAhC,CAAvB;;AACA,qBAAKqqC,oBAAL,CAA0BrqC,QAAQgqC,KAAlC,EAAyCI,cAAzC;AAjIa;;AAuIf,kBAAIhiC,aAAapI,QAAQoI,UAAzB;;AACA,kBAAIpI,QAAQ8I,QAAR9I,KAAqB,CAAzB,EAA4B;AAC1BoI,6BAAaA,WAAW71B,KAAX61B,EAAbA;AACAA,2BAAW,CAAXA,KAAiBpI,QAAQ8I,QAAzBV;AA1Ia;;AA6IfpI,sBAAQkqC,UAARlqC,CAAmBiqC,cAAnBjqC,CACE,IADFA,EAEE,WAFFA,EAGE,GAAGyoC,GAAGrgC,UAAHqgC,CAAe,UAASF,GAAG3/B,UAAH2/B,CAAe,OAH5CvoC;AAKAA,sBAAQkqC,UAARlqC,CAAmBiqC,cAAnBjqC,CAAkCylC,MAAlCzlC,EAA0C,WAA1CA,EAAuD,UAAvDA;AACAA,sBAAQkqC,UAARlqC,CAAmBxG,WAAnBwG,CAA+BA,QAAQgqC,KAAvChqC;AACAA,sBAAQmqC,MAARnqC,CAAexG,WAAfwG,CAA2BA,QAAQkqC,UAAnClqC;;AAEA,mBAAKsqC,qBAAL,GAA6B9wC,WAA7B,CAAyCwG,QAAQkqC,UAAjD;AAjfgB;;AAoflB1kE,+BAAmB2xB,CAAnB3xB,EAAsB4xB,CAAtB5xB,EAAyB;AACvB,mBAAKL,UAAL,CAAgB,CAACiyB,CAAjB;AACA,mBAAK7xB,QAAL,CAAc4xB,CAAd,EAAiBC,CAAjB;AAtfgB;;AAyflBmzC,yBAAat0B,OAAbs0B,EAAsB;AACpB,kBAAI,CAACt0B,QAAQpmC,IAAb,EAAmB;AACjB,sBAAM,IAAI5E,KAAJ,CACJ,2CACE,6DAFE,CAAN;AAFkB;;AAOpB,kBAAI,CAAC,KAAKk+D,QAAV,EAAoB;AAClB,qBAAKA,QAAL,GAAgB,KAAKrc,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAhB;AACA,qBAAKq0C,QAAL,CAAcc,cAAd,CAA6B,IAA7B,EAAmC,MAAnC,EAA2C,UAA3C;AACA,qBAAKO,IAAL,CAAUhxC,WAAV,CAAsB,KAAK2vC,QAA3B;AAVkB;;AAapB,oBAAMt9D,MAAM4f,gBACVwqB,QAAQpmC,IADE4b,EAEVwqB,QAAQtW,QAFElU,EAGV,KAAKm6C,eAHKn6C,CAAZ;AAKA,mBAAK09C,QAAL,CAAchhD,WAAd,IACG,8BAA6B8tB,QAAQvX,UAAW,IAAhD,GACA,aAAY7yB,GAAI,QAFnB;AA3gBgB;;AAghBlBzG,oBAAQwI,OAARxI,EAAiB;AACf,oBAAM46B,UAAU,KAAKA,OAArB;AACA,oBAAMiW,UAAU,KAAKnzB,UAAL,CAAgBpL,GAAhB,CAAoB9J,QAAQ,CAARA,CAApB,CAAhB;AACA,kBAAIqU,OAAOrU,QAAQ,CAARA,CAAX;AACAoyB,sBAAQ92B,IAAR82B,GAAeiW,OAAfjW;;AAEA,kBACE,KAAKipC,UAAL,IACA,CAAChzB,QAAQla,WADT,IAEA,CAAC,KAAKmtC,aAAL,CAAmBjzB,QAAQvX,UAA3B,CAHH,EAIE;AACA,qBAAK6rC,YAAL,CAAkBt0B,OAAlB;AACA,qBAAKizB,aAAL,CAAmBjzB,QAAQvX,UAA3B,IAAyCuX,OAAzC;AAZa;;AAcfjW,sBAAQsI,UAARtI,GAAqBiW,QAAQ3N,UAAR2N,IAAsBt9C,0BAA3CqnC;AAEA,kBAAIoW,OAAO,QAAX;;AACA,kBAAIH,QAAQjK,KAAZ,EAAmB;AACjBoK,uBAAO,KAAPA;AADF,qBAEO,IAAIH,QAAQG,IAAZ,EAAkB;AACvBA,uBAAO,MAAPA;AApBa;;AAsBf,oBAAMC,SAASJ,QAAQI,MAARJ,GAAiB,QAAjBA,GAA4B,QAA3C;;AAEA,kBAAIh0B,OAAO,CAAX,EAAc;AACZA,uBAAO,CAACA,IAARA;AACA+d,wBAAQkW,aAARlW,GAAwB,CAAC,CAAzBA;AAFF,qBAGO;AACLA,wBAAQkW,aAARlW,GAAwB,CAAxBA;AA5Ba;;AA8BfA,sBAAQkI,QAARlI,GAAmB/d,IAAnB+d;AACAA,sBAAQf,UAARe,GAAqBiW,QAAQvX,UAA7BsB;AACAA,sBAAQP,UAARO,GAAqBoW,IAArBpW;AACAA,sBAAQwlC,SAARxlC,GAAoBqW,MAApBrW;AAEAA,sBAAQgqC,KAARhqC,GAAgB,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAhBkL;AACAA,sBAAQgqC,KAARhqC,CAAciqC,cAAdjqC,CAA6B,IAA7BA,EAAmC,GAAnCA,EAAwCuoC,GAAG,CAACvoC,QAAQ5I,CAAZmxC,CAAxCvoC;AACAA,sBAAQ8pC,OAAR9pC,GAAkB,EAAlBA;AACAA,sBAAQ+pC,OAAR/pC,GAAkB,EAAlBA;AAtjBgB;;AAyjBlBj7B,sBAAU;AACR,oBAAMi7B,UAAU,KAAKA,OAArB;;AACA,kBACEA,QAAQ6I,iBAAR7I,GAA4B/lC,wBAAkBU,gBAA9CqlC,IACAA,QAAQkqC,UAARlqC,EAAoByqC,aAApBzqC,EAFF,EAGE;AAEAA,wBAAQunB,OAARvnB,GAAkBA,QAAQkqC,UAA1BlqC;AACA,qBAAKp7B,IAAL,CAAU,SAAV;AACA,qBAAKD,OAAL;AATM;AAzjBQ;;AAukBlB1B,yBAAa2xB,KAAb3xB,EAAoB;AAClB,kBAAI2xB,QAAQ,CAAZ,EAAe;AACb,qBAAKoL,OAAL,CAAaoJ,SAAb,GAAyBxU,KAAzB;AAFgB;AAvkBF;;AA6kBlB1xB,uBAAW03B,KAAX13B,EAAkB;AAChB,mBAAK88B,OAAL,CAAamN,OAAb,GAAuByC,gBAAgBhV,KAAhBgV,CAAvB;AA9kBgB;;AAilBlBzsC,wBAAYy3B,KAAZz3B,EAAmB;AACjB,mBAAK68B,OAAL,CAAaoN,QAAb,GAAwByC,iBAAiBjV,KAAjBiV,CAAxB;AAllBgB;;AAqlBlBzsC,0BAAcixC,KAAdjxC,EAAqB;AACnB,mBAAK48B,OAAL,CAAaqN,UAAb,GAA0BgH,KAA1B;AAtlBgB;;AAylBlBq2B,2BAAevhC,WAAfuhC,EAA4B;AAC1B,mBAAK1qC,OAAL,CAAamJ,WAAb,GAA2BA,WAA3B;AA1lBgB;;AA6lBlB1iC,8BAAkB+K,CAAlB/K,EAAqBgL,CAArBhL,EAAwBiL,CAAxBjL,EAA2B;AACzB,mBAAKu5B,OAAL,CAAagJ,WAAb,GAA2B13B,WAAKC,YAALD,CAAkBE,CAAlBF,EAAqBG,CAArBH,EAAwBI,CAAxBJ,CAA3B;AA9lBgB;;AAimBlBq5D,yBAAazhC,SAAbyhC,EAAwB;AACtB,mBAAK3qC,OAAL,CAAakJ,SAAb,GAAyBA,SAAzB;AAlmBgB;;AAqmBlBxiC,4BAAgB8K,CAAhB9K,EAAmB+K,CAAnB/K,EAAsBgL,CAAtBhL,EAAyB;AACvB,mBAAKs5B,OAAL,CAAa+I,SAAb,GAAyBz3B,WAAKC,YAALD,CAAkBE,CAAlBF,EAAqBG,CAArBH,EAAwBI,CAAxBJ,CAAzB;AACA,mBAAK0uB,OAAL,CAAagqC,KAAb,GAAqB,KAAKld,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAArB;AACA,mBAAKkL,OAAL,CAAa8pC,OAAb,GAAuB,EAAvB;AACA,mBAAK9pC,OAAL,CAAa+pC,OAAb,GAAuB,EAAvB;AAzmBgB;;AA4mBlB3jE,4BAAgB65B,IAAhB75B,EAAsB;AACpB,mBAAK45B,OAAL,CAAagJ,WAAb,GAA2B,KAAK4hC,mBAAL,CAAyB3qC,IAAzB,CAA3B;AA7mBgB;;AAgnBlB35B,0BAAc25B,IAAd35B,EAAoB;AAClB,mBAAK05B,OAAL,CAAa+I,SAAb,GAAyB,KAAK6hC,mBAAL,CAAyB3qC,IAAzB,CAAzB;AAjnBgB;;AAonBlBp5B,wBAAYo5B,IAAZp5B,EAAkB;AAChB,oBAAM+tB,QAAQ,KAAK3P,QAAL,CAAc2P,KAA5B;AACA,oBAAMC,SAAS,KAAK5P,QAAL,CAAc4P,MAA7B;;AACA,oBAAMqlB,MAAM5oC,WAAKqB,gBAALrB,CAAsB,KAAKw3D,eAA3Bx3D,CAAZ;;AACA,oBAAM6oC,KAAK7oC,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAI,CAAJ,CAApBA,EAA4B4oC,GAA5B5oC,CAAX;;AACA,oBAAM8oC,KAAK9oC,WAAKO,cAALP,CAAoB,CAAC,CAAD,EAAIujB,MAAJ,CAApBvjB,EAAiC4oC,GAAjC5oC,CAAX;;AACA,oBAAM+oC,KAAK/oC,WAAKO,cAALP,CAAoB,CAACsjB,KAAD,EAAQ,CAAR,CAApBtjB,EAAgC4oC,GAAhC5oC,CAAX;;AACA,oBAAMgpC,KAAKhpC,WAAKO,cAALP,CAAoB,CAACsjB,KAAD,EAAQC,MAAR,CAApBvjB,EAAqC4oC,GAArC5oC,CAAX;;AACA,oBAAM4C,KAAKrF,KAAKC,GAALD,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMsF,KAAKtF,KAAKC,GAALD,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMuF,KAAKvF,KAAK6D,GAAL7D,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AACA,oBAAMwF,KAAKxF,KAAK6D,GAAL7D,CAASsrC,GAAG,CAAHA,CAATtrC,EAAgBurC,GAAG,CAAHA,CAAhBvrC,EAAuBwrC,GAAG,CAAHA,CAAvBxrC,EAA8ByrC,GAAG,CAAHA,CAA9BzrC,CAAX;AAEA,oBAAM2E,OAAO,KAAKs5C,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACAthB,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+BU,EAA/BV;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+BW,EAA/BX;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,OAA1BA,EAAmCY,KAAKF,EAAxCV;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,QAA1BA,EAAoCa,KAAKF,EAAzCX;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,MAA1BA,EAAkC,KAAKq3D,mBAAL,CAAyB5qC,IAAzB,CAAlCzsB;;AACA,kBAAI,KAAKwsB,OAAL,CAAakJ,SAAb,GAAyB,CAA7B,EAAgC;AAC9B11B,qBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,cAA1BA,EAA0C,KAAKwsB,OAAL,CAAakJ,SAAvD11B;AApBc;;AAsBhB,mBAAK82D,qBAAL,GAA6B9wC,WAA7B,CAAyChmB,IAAzC;AA1oBgB;;AAgpBlBo3D,gCAAoB3qC,IAApB2qC,EAA0B;AACxB,kBAAI3qC,KAAK,CAALA,MAAY,eAAhB,EAAiC;AAC/B,uBAAO,KAAK6qC,kBAAL,CAAwB7qC,IAAxB,CAAP;AAFsB;;AAIxB,qBAAO,KAAK4qC,mBAAL,CAAyB5qC,IAAzB,CAAP;AAppBgB;;AA0pBlB6qC,+BAAmB7qC,IAAnB6qC,EAAyB;AACvB,oBAAMpxB,QAAQzZ,KAAK,CAALA,CAAd;AACA,oBAAM/Z,eAAe+Z,KAAK,CAALA,CAArB;AACA,oBAAM8Z,SAAS9Z,KAAK,CAALA,KAAWvnC,qBAA1B;AACA,oBAAM,CAACwb,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,IAAmB4rB,KAAK,CAALA,CAAzB;AACA,oBAAM8hB,QAAQ9hB,KAAK,CAALA,CAAd;AACA,oBAAM+hB,QAAQ/hB,KAAK,CAALA,CAAd;AACA,oBAAMgiB,YAAYhiB,KAAK,CAALA,CAAlB;AAEA,oBAAM8qC,WAAY,UAASlC,cAAV,EAAjB;;AACA,oBAAM,CAACmC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,GAAhB,IAAuB75D,WAAKiC,aAALjC,CAAmB,CAC9C,GAAGA,WAAKO,cAALP,CAAoB,CAAC4C,EAAD,EAAKC,EAAL,CAApB7C,EAA8ByoC,MAA9BzoC,CAD2C,EAE9C,GAAGA,WAAKO,cAALP,CAAoB,CAAC8C,EAAD,EAAKC,EAAL,CAApB/C,EAA8ByoC,MAA9BzoC,CAF2C,CAAnBA,CAA7B;;AAIA,oBAAM,CAAC85D,MAAD,EAASC,MAAT,IAAmB/5D,WAAKwB,6BAALxB,CAAmCyoC,MAAnCzoC,CAAzB;;AACA,oBAAMg6D,SAASvpB,QAAQqpB,MAAvB;AACA,oBAAMG,SAASvpB,QAAQqpB,MAAvB;AAEA,oBAAMG,SAAS,KAAK1e,UAAL,CAAgBh4B,aAAhB,CAA8B,aAA9B,CAAf;AACA02C,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,IAA5BA,EAAkCT,QAAlCS;AACAA,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,cAA5BA,EAA4C,gBAA5CA;AACAA,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,OAA5BA,EAAqCF,MAArCE;AACAA,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,QAA5BA,EAAsCD,MAAtCC;AACAA,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,GAA5BA,EAAiC,GAAGR,GAAH,EAAjCQ;AACAA,qBAAOvB,cAAPuB,CAAsB,IAAtBA,EAA4B,GAA5BA,EAAiC,GAAGP,GAAH,EAAjCO;AAGA,oBAAMvwC,MAAM,KAAKA,GAAjB;AACA,oBAAM6tC,kBAAkB,KAAKA,eAA7B;AACA,oBAAM//B,YAAY,KAAK/I,OAAL,CAAa+I,SAA/B;AACA,oBAAMC,cAAc,KAAKhJ,OAAL,CAAagJ,WAAjC;AAEA,oBAAMuR,OAAO,KAAKuS,UAAL,CAAgBx8C,MAAhB,CAAuB46D,MAAMF,GAA7B,EAAkCG,MAAMF,GAAxC,CAAb;AACA,mBAAKhwC,GAAL,GAAWsf,IAAX;AACA,mBAAKuuB,eAAL,GAAuB/uB,MAAvB;;AACA,kBAAIkI,cAAc,CAAlB,EAAqB;AACnB,sBAAMkB,WAAW7xC,WAAKC,YAALD,CAAkB,GAAGooC,KAArBpoC,CAAjB;;AACA,qBAAK0uB,OAAL,CAAa+I,SAAb,GAAyBoa,QAAzB;AACA,qBAAKnjB,OAAL,CAAagJ,WAAb,GAA2Bma,QAA3B;AAtCqB;;AAwCvB,mBAAKmmB,aAAL,CAAmB,KAAKI,aAAL,CAAmBxjD,YAAnB,CAAnB;AAGA,mBAAK+U,GAAL,GAAWA,GAAX;AACA,mBAAK6tC,eAAL,GAAuBA,eAAvB;AACA,mBAAK9oC,OAAL,CAAa+I,SAAb,GAAyBA,SAAzB;AACA,mBAAK/I,OAAL,CAAagJ,WAAb,GAA2BA,WAA3B;AAEAwiC,qBAAOhyC,WAAPgyC,CAAmBjxB,KAAKkxB,UAALlxB,CAAgB,CAAhBA,CAAnBixB;AACA,mBAAKhB,IAAL,CAAUhxC,WAAV,CAAsBgyC,MAAtB;AACA,qBAAQ,QAAOT,QAAS,GAAxB;AA5sBgB;;AAktBlBF,gCAAoB5qC,IAApB4qC,EAA0B;AACxB,kBAAI,OAAO5qC,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,uBAAO,KAAKld,IAAL,CAAUrL,GAAV,CAAcuoB,IAAd,CAAPA;AAFsB;;AAIxB,sBAAQA,KAAK,CAALA,CAAR;AACE,qBAAK,aAAL;AACE,wBAAMyrC,YAAa,UAAS7C,cAAV,EAAlB;AACA,wBAAM8C,aAAa1rC,KAAK,CAALA,CAAnB;AACA,sBAAI2rC,QAAJ;;AAEA,0BAAQ3rC,KAAK,CAALA,CAAR;AACE,yBAAK,OAAL;AACE,4BAAM4rC,SAAS5rC,KAAK,CAALA,CAAf;AACA,4BAAM6rC,SAAS7rC,KAAK,CAALA,CAAf;AACA2rC,iCAAW,KAAK9e,UAAL,CAAgBh4B,aAAhB,CAA8B,oBAA9B,CAAX82C;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCF,SAApCE;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,eAA9BA,EAA+C,gBAA/CA;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCC,OAAO,CAAPA,CAApCD;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCC,OAAO,CAAPA,CAApCD;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCE,OAAO,CAAPA,CAApCF;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCE,OAAO,CAAPA,CAApCF;AACA;;AACF,yBAAK,QAAL;AACE,4BAAMG,aAAa9rC,KAAK,CAALA,CAAnB;AACA,4BAAM+rC,cAAc/rC,KAAK,CAALA,CAApB;AACA,4BAAMgsC,cAAchsC,KAAK,CAALA,CAApB;AACA,4BAAMisC,eAAejsC,KAAK,CAALA,CAArB;AACA2rC,iCAAW,KAAK9e,UAAL,CAAgBh4B,aAAhB,CAA8B,oBAA9B,CAAX82C;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCF,SAApCE;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,eAA9BA,EAA+C,gBAA/CA;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCI,YAAY,CAAZA,CAApCJ;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCI,YAAY,CAAZA,CAApCJ;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,GAA9BA,EAAmCM,YAAnCN;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCG,WAAW,CAAXA,CAApCH;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCG,WAAW,CAAXA,CAApCH;AACAA,+BAAS3B,cAAT2B,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCK,WAApCL;AACA;;AACF;AACE,4BAAM,IAAI3gE,KAAJ,CAAW,6BAA4Bg1B,KAAK,CAALA,CAA7B,EAAV,CAAN;AA5BJ;;AA8BA,6BAAW+d,SAAX,IAAwB2tB,UAAxB,EAAoC;AAClC,0BAAMQ,OAAO,KAAKrf,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACAq3C,yBAAKlC,cAALkC,CAAoB,IAApBA,EAA0B,QAA1BA,EAAoCnuB,UAAU,CAAVA,CAApCmuB;AACAA,yBAAKlC,cAALkC,CAAoB,IAApBA,EAA0B,YAA1BA,EAAwCnuB,UAAU,CAAVA,CAAxCmuB;AACAP,6BAASpyC,WAAToyC,CAAqBO,IAArBP;AAvCJ;;AAyCE,uBAAKpB,IAAL,CAAUhxC,WAAV,CAAsBoyC,QAAtB;AACA,yBAAQ,QAAOF,SAAU,GAAzB;;AACF,qBAAK,MAAL;AACE3gE,kCAAK,4BAALA;AACA,yBAAO,IAAP;;AACF,qBAAK,OAAL;AACE,yBAAO,SAAP;;AACF;AACE,wBAAM,IAAIE,KAAJ,CAAW,oBAAmBg1B,KAAK,CAALA,CAApB,EAAV,CAAN;AAlDJ;AAttBgB;;AA4wBlB58B,oBAAQixC,SAARjxC,EAAmBkxC,SAAnBlxC,EAA8B;AAC5B,mBAAK28B,OAAL,CAAasU,SAAb,GAAyBA,SAAzB;AACA,mBAAKtU,OAAL,CAAauU,SAAb,GAAyBA,SAAzB;AA9wBgB;;AAixBlB7rC,0BAAcysC,GAAdzsC,EAAmBu3B,IAAnBv3B,EAAyB;AACvB,oBAAMs3B,UAAU,KAAKA,OAArB;AACA,kBAAI7I,IAAI6I,QAAQ7I,CAAhB;AAAA,kBACEC,IAAI4I,QAAQ5I,CADd;AAEA,kBAAIjlB,IAAI,EAAR;AACA,kBAAI+C,IAAI,CAAR;;AAEA,yBAAW6nC,EAAX,IAAiB5H,GAAjB,EAAsB;AACpB,wBAAQ4H,KAAK,CAAb;AACE,uBAAKh6C,UAAImB,SAAT;AACEizB,wBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACA,0BAAMxC,QAAQqL,KAAK/qB,GAAL+qB,CAAd;AACA,0BAAMpL,SAASoL,KAAK/qB,GAAL+qB,CAAf;AACA,0BAAMqV,KAAKne,IAAIvC,KAAf;AACA,0BAAM2gB,KAAKne,IAAIvC,MAAf;AACA1iB,sBAAElD,IAAFkD,CACE,GADFA,EAEEo2D,GAAGpxC,CAAHoxC,CAFFp2D,EAGEo2D,GAAGnxC,CAAHmxC,CAHFp2D,EAIE,GAJFA,EAKEo2D,GAAGjzB,EAAHizB,CALFp2D,EAMEo2D,GAAGnxC,CAAHmxC,CANFp2D,EAOE,GAPFA,EAQEo2D,GAAGjzB,EAAHizB,CARFp2D,EASEo2D,GAAGhzB,EAAHgzB,CATFp2D,EAUE,GAVFA,EAWEo2D,GAAGpxC,CAAHoxC,CAXFp2D,EAYEo2D,GAAGhzB,EAAHgzB,CAZFp2D,EAaE,GAbFA;AAeA;;AACF,uBAAKpP,UAAIa,MAAT;AACEuzB,wBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACAjlB,sBAAElD,IAAFkD,CAAO,GAAPA,EAAYo2D,GAAGpxC,CAAHoxC,CAAZp2D,EAAmBo2D,GAAGnxC,CAAHmxC,CAAnBp2D;AACA;;AACF,uBAAKpP,UAAIc,MAAT;AACEszB,wBAAI8I,KAAK/qB,GAAL+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,GAAL+qB,CAAJ7I;AACAjlB,sBAAElD,IAAFkD,CAAO,GAAPA,EAAYo2D,GAAGpxC,CAAHoxC,CAAZp2D,EAAmBo2D,GAAGnxC,CAAHmxC,CAAnBp2D;AACA;;AACF,uBAAKpP,UAAIe,OAAT;AACEqzB,wBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACAjlB,sBAAElD,IAAFkD,CACE,GADFA,EAEEo2D,GAAGtoC,KAAK/qB,CAAL+qB,CAAHsoC,CAFFp2D,EAGEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CAHFp2D,EAIEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CAJFp2D,EAKEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CALFp2D,EAMEo2D,GAAGpxC,CAAHoxC,CANFp2D,EAOEo2D,GAAGnxC,CAAHmxC,CAPFp2D;AASA+C,yBAAK,CAALA;AACA;;AACF,uBAAKnS,UAAIgB,QAAT;AACEoO,sBAAElD,IAAFkD,CACE,GADFA,EAEEo2D,GAAGpxC,CAAHoxC,CAFFp2D,EAGEo2D,GAAGnxC,CAAHmxC,CAHFp2D,EAIEo2D,GAAGtoC,KAAK/qB,CAAL+qB,CAAHsoC,CAJFp2D,EAKEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CALFp2D,EAMEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CANFp2D,EAOEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CAPFp2D;AASAglB,wBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACAliB,yBAAK,CAALA;AACA;;AACF,uBAAKnS,UAAIiB,QAAT;AACEmzB,wBAAI8I,KAAK/qB,IAAI,CAAT+qB,CAAJ9I;AACAC,wBAAI6I,KAAK/qB,IAAI,CAAT+qB,CAAJ7I;AACAjlB,sBAAElD,IAAFkD,CACE,GADFA,EAEEo2D,GAAGtoC,KAAK/qB,CAAL+qB,CAAHsoC,CAFFp2D,EAGEo2D,GAAGtoC,KAAK/qB,IAAI,CAAT+qB,CAAHsoC,CAHFp2D,EAIEo2D,GAAGpxC,CAAHoxC,CAJFp2D,EAKEo2D,GAAGnxC,CAAHmxC,CALFp2D,EAMEo2D,GAAGpxC,CAAHoxC,CANFp2D,EAOEo2D,GAAGnxC,CAAHmxC,CAPFp2D;AASA+C,yBAAK,CAALA;AACA;;AACF,uBAAKnS,UAAIkB,SAAT;AACEkO,sBAAElD,IAAFkD,CAAO,GAAPA;AACA;AA9EJ;AARqB;;AA0FvBA,kBAAIA,EAAEjD,IAAFiD,CAAO,GAAPA,CAAJA;;AAEA,kBACE6tB,QAAQ6V,IAAR7V,IACAmV,IAAI9oC,MAAJ8oC,GAAa,CADbnV,IAEAmV,IAAI,CAAJA,MAAWpyC,UAAImB,SAFf87B,IAGAmV,IAAI,CAAJA,MAAWpyC,UAAIa,MAJjB,EAKE;AAIAuO,oBAAI6tB,QAAQ6V,IAAR7V,CAAaosC,cAAbpsC,CAA4B,IAA5BA,EAAkC,GAAlCA,IAAyC7tB,CAA7CA;AATF,qBAUO;AACL6tB,wBAAQ6V,IAAR7V,GAAe,KAAK8sB,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAfkL;;AACA,qBAAKsqC,qBAAL,GAA6B9wC,WAA7B,CAAyCwG,QAAQ6V,IAAjD;AAxGqB;;AA2GvB7V,sBAAQ6V,IAAR7V,CAAaiqC,cAAbjqC,CAA4B,IAA5BA,EAAkC,GAAlCA,EAAuC7tB,CAAvC6tB;AACAA,sBAAQ6V,IAAR7V,CAAaiqC,cAAbjqC,CAA4B,IAA5BA,EAAkC,MAAlCA,EAA0C,MAA1CA;AAIAA,sBAAQunB,OAARvnB,GAAkBA,QAAQ6V,IAA1B7V;AACAA,sBAAQyJ,eAARzJ,CAAwB7I,CAAxB6I,EAA2B5I,CAA3B4I;AAl4BgB;;AAq4BlBr7B,sBAAU;AACR,oBAAMq7B,UAAU,KAAKA,OAArB;AAGAA,sBAAQ6V,IAAR7V,GAAe,IAAfA;;AAEA,kBAAI,CAAC,KAAKkQ,WAAV,EAAuB;AACrB;AAPM;;AASR,kBAAI,CAAClQ,QAAQunB,OAAb,EAAsB;AACpB,qBAAKrX,WAAL,GAAmB,IAAnB;AACA;AAXM;;AAeR,oBAAMm8B,SAAU,WAAU1D,WAAX,EAAf;AACA,oBAAM2D,WAAW,KAAKxf,UAAL,CAAgBh4B,aAAhB,CAA8B,cAA9B,CAAjB;AACAw3C,uBAASrC,cAATqC,CAAwB,IAAxBA,EAA8B,IAA9BA,EAAoCD,MAApCC;AACAA,uBAASrC,cAATqC,CAAwB,IAAxBA,EAA8B,WAA9BA,EAA2C7D,GAAG,KAAKK,eAARL,CAA3C6D;AAGA,oBAAMC,cAAcvsC,QAAQunB,OAARvnB,CAAgB4wB,SAAhB5wB,CAA0B,IAA1BA,CAApB;;AACA,kBAAI,KAAKkQ,WAAL,KAAqB,SAAzB,EAAoC;AAClCq8B,4BAAYtC,cAAZsC,CAA2B,IAA3BA,EAAiC,WAAjCA,EAA8C,SAA9CA;AADF,qBAEO;AACLA,4BAAYtC,cAAZsC,CAA2B,IAA3BA,EAAiC,WAAjCA,EAA8C,SAA9CA;AAzBM;;AA2BR,mBAAKr8B,WAAL,GAAmB,IAAnB;AACAo8B,uBAAS9yC,WAAT8yC,CAAqBC,WAArBD;AACA,mBAAK9B,IAAL,CAAUhxC,WAAV,CAAsB8yC,QAAtB;;AAEA,kBAAItsC,QAAQ+nC,aAAZ,EAA2B;AAGzB/nC,wBAAQgoC,SAARhoC,GAAoB,IAApBA;;AACA,2BAAW2F,IAAX,IAAmB,KAAKqjC,UAAxB,EAAoC;AAClCrjC,uBAAKqiC,SAALriC,GAAiB,IAAjBA;AALuB;;AAQzB2mC,yBAASrC,cAATqC,CAAwB,IAAxBA,EAA8B,WAA9BA,EAA2CtsC,QAAQ+nC,aAAnDuE;AAvCM;;AAyCRtsC,sBAAQ+nC,aAAR/nC,GAAyB,QAAOqsC,MAAO,GAAvCrsC;AAEA,mBAAKqpC,IAAL,GAAY,IAAZ;AAh7BgB;;AAm7BlBzkE,iBAAKyT,IAALzT,EAAW;AACT,mBAAKsrC,WAAL,GAAmB73B,IAAnB;AAp7BgB;;AAu7BlBpU,wBAAY;AACV,oBAAM+7B,UAAU,KAAKA,OAArB;;AACA,kBAAIA,QAAQ6V,IAAZ,EAAkB;AAChB,sBAAM1jC,IAAI,GAAG6tB,QAAQ6V,IAAR7V,CAAaosC,cAAbpsC,CAA4B,IAA5BA,EAAkC,GAAlCA,CAAuC,GAApD;AACAA,wBAAQ6V,IAAR7V,CAAaiqC,cAAbjqC,CAA4B,IAA5BA,EAAkC,GAAlCA,EAAuC7tB,CAAvC6tB;AAJQ;AAv7BM;;AA+7BlB76B,uBAAWojC,OAAXpjC,EAAoB;AAClB,mBAAK66B,OAAL,CAAauI,OAAb,GAAuB,CAACA,OAAxB;AAh8BgB;;AAm8BlBjjC,wBAAYwjC,QAAZxjC,EAAsB;AACpB,mBAAK06B,OAAL,CAAa8I,QAAb,GAAwBA,QAAxB;AAp8BgB;;AAu8BlBzjC,iCAAqBwjC,iBAArBxjC,EAAwC;AACtC,mBAAK26B,OAAL,CAAa6I,iBAAb,GAAiCA,iBAAjC;AAx8BgB;;AA28BlB3jC,sBAAUwe,KAAVxe,EAAiB;AACf,mBAAK86B,OAAL,CAAa4I,UAAb,GAA0BllB,QAAQ,GAAlC;AA58BgB;;AA+8BlBpgB,+BAAmB4gB,MAAnB5gB,EAA2B,CA/8BT;;AAm9BlBC,wBAAYixC,QAAZjxC,EAAsB,CAn9BJ;;AAu9BlBC,sBAAUixC,MAAVjxC,EAAkB;AAChB,yBAAW,CAAC+M,GAAD,EAAM1D,KAAN,CAAX,IAA2B4nC,MAA3B,EAAmC;AACjC,wBAAQlkC,GAAR;AACE,uBAAK,IAAL;AACE,yBAAKtN,YAAL,CAAkB4J,KAAlB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAK3J,UAAL,CAAgB2J,KAAhB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAK1J,WAAL,CAAiB0J,KAAjB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAKzJ,aAAL,CAAmByJ,KAAnB;AACA;;AACF,uBAAK,GAAL;AACE,yBAAKxJ,OAAL,CAAawJ,MAAM,CAANA,CAAb,EAAuBA,MAAM,CAANA,CAAvB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAKvJ,kBAAL,CAAwBuJ,KAAxB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAKtJ,WAAL,CAAiBsJ,KAAjB;AACA;;AACF,uBAAK,MAAL;AACE,yBAAKzH,OAAL,CAAayH,KAAb;AACA;;AACF,uBAAK,IAAL;AACE,yBAAK69D,cAAL,CAAoB79D,KAApB;AACA;;AACF,uBAAK,IAAL;AACE,yBAAK89D,YAAL,CAAkB99D,KAAlB;AACA;;AACF;AACE9B,oCAAM,wCAAuCwF,GAAxC,EAALxF;AACA;AAjCJ;AAFc;AAv9BA;;AA+/BlB1G,mBAAO;AACL,oBAAM27B,UAAU,KAAKA,OAArB;;AACA,kBAAIA,QAAQunB,OAAZ,EAAqB;AACnBvnB,wBAAQunB,OAARvnB,CAAgBiqC,cAAhBjqC,CAA+B,IAA/BA,EAAqC,MAArCA,EAA6CA,QAAQ+I,SAArD/I;AACAA,wBAAQunB,OAARvnB,CAAgBiqC,cAAhBjqC,CAA+B,IAA/BA,EAAqC,cAArCA,EAAqDA,QAAQkJ,SAA7DlJ;AACA,qBAAKr7B,OAAL;AALG;AA//BW;;AAwgClBR,qBAAS;AACP,oBAAM67B,UAAU,KAAKA,OAArB;;AACA,kBAAIA,QAAQunB,OAAZ,EAAqB;AACnB,qBAAK8iB,oBAAL,CAA0BrqC,QAAQunB,OAAlC;;AACAvnB,wBAAQunB,OAARvnB,CAAgBiqC,cAAhBjqC,CAA+B,IAA/BA,EAAqC,MAArCA,EAA6C,MAA7CA;AACA,qBAAKr7B,OAAL;AALK;AAxgCS;;AAohClB0lE,iCAAqB9iB,OAArB8iB,EAAkD;AAAA,kBAApBD,cAAoB,uEAAH,CAAG;AAChD,oBAAMpqC,UAAU,KAAKA,OAArB;AACA,kBAAIsU,YAAYtU,QAAQsU,SAAxB;;AACA,kBAAI81B,mBAAmB,CAAnBA,IAAwB91B,UAAUjoC,MAAVioC,GAAmB,CAA/C,EAAkD;AAChDA,4BAAYA,UAAUjkC,GAAVikC,CAAc,UAAUznC,KAAV,EAAiB;AACzC,yBAAOu9D,iBAAiBv9D,KAAxB;AADU,kBAAZynC;AAJ8C;;AAQhDiT,sBAAQ0iB,cAAR1iB,CAAuB,IAAvBA,EAA6B,QAA7BA,EAAuCvnB,QAAQgJ,WAA/Cue;AACAA,sBAAQ0iB,cAAR1iB,CAAuB,IAAvBA,EAA6B,gBAA7BA,EAA+CvnB,QAAQmJ,WAAvDoe;AACAA,sBAAQ0iB,cAAR1iB,CAAuB,IAAvBA,EAA6B,mBAA7BA,EAAkDghB,GAAGvoC,QAAQqN,UAAXk7B,CAAlDhhB;AACAA,sBAAQ0iB,cAAR1iB,CAAuB,IAAvBA,EAA6B,gBAA7BA,EAA+CvnB,QAAQmN,OAAvDoa;AACAA,sBAAQ0iB,cAAR1iB,CAAuB,IAAvBA,EAA6B,iBAA7BA,EAAgDvnB,QAAQoN,QAAxDma;AACAA,sBAAQ0iB,cAAR1iB,CACE,IADFA,EAEE,cAFFA,EAGEghB,GAAG6B,iBAAiBpqC,QAAQoJ,SAA5Bm/B,IAAyC,IAH3ChhB;AAKAA,sBAAQ0iB,cAAR1iB,CACE,IADFA,EAEE,kBAFFA,EAGEjT,UAAUjkC,GAAVikC,CAAci0B,EAAdj0B,EAAkBplC,IAAlBolC,CAAuB,GAAvBA,CAHFiT;AAKAA,sBAAQ0iB,cAAR1iB,CACE,IADFA,EAEE,mBAFFA,EAGEghB,GAAG6B,iBAAiBpqC,QAAQuU,SAA5Bg0B,IAAyC,IAH3ChhB;AA3iCgB;;AAkjClBjjD,qBAAS;AACP,kBAAI,KAAK07B,OAAL,CAAaunB,OAAjB,EAA0B;AACxB,qBAAKvnB,OAAL,CAAaunB,OAAb,CAAqB0iB,cAArB,CAAoC,IAApC,EAA0C,WAA1C,EAAuD,SAAvD;AAFK;;AAIP,mBAAK5lE,IAAL;AAtjCgB;;AAyjClBE,yBAAa;AAGX,mBAAKJ,MAAL;AACA,mBAAKE,IAAL;AA7jCgB;;AAgkClBG,2BAAe;AACb,kBAAI,KAAKw7B,OAAL,CAAaunB,OAAjB,EAA0B;AACxB,qBAAKvnB,OAAL,CAAaunB,OAAb,CAAqB0iB,cAArB,CAAoC,IAApC,EAA0C,WAA1C,EAAuD,SAAvD;AAFW;;AAIb,mBAAK1lE,UAAL;AApkCgB;;AAukClBH,0BAAc;AACZ,mBAAKH,SAAL;AACA,mBAAKE,MAAL;AAzkCgB;;AA4kClBM,8BAAkB;AAChB,mBAAKR,SAAL;AACA,mBAAKM,UAAL;AA9kCgB;;AAilClBG,gCAAoB;AAClB,mBAAKT,SAAL;AACA,mBAAKO,YAAL;AAnlCgB;;AAslClBiE,uCAA2B;AACzB,oBAAM+K,OAAO,KAAKs5C,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACAthB,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+B,GAA/BA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+B,GAA/BA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,OAA1BA,EAAmC,KAAnCA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,QAA1BA,EAAoC,KAApCA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,MAA1BA,EAAkC,KAAKwsB,OAAL,CAAa+I,SAA/Cv1B;;AAEA,mBAAK82D,qBAAL,GAA6B9wC,WAA7B,CAAyChmB,IAAzC;AA9lCgB;;AAimClBpL,8BAAkB4pB,KAAlB5pB,EAAyB;AACvB,oBAAMm+B,UAAUvU,MAAM9lB,UAAN8lB,CAAiB,IAAjBA,IACZ,KAAKlP,UAAL,CAAgBpL,GAAhB,CAAoBsa,KAApB,CADYA,GAEZ,KAAKjP,IAAL,CAAUrL,GAAV,CAAcsa,KAAd,CAFJ;;AAGA,kBAAI,CAACuU,OAAL,EAAc;AACZx7B,gCAAM,kCAAiCinB,KAAM,mBAA7CjnB;AACA;AANqB;;AAQvB,mBAAK1C,uBAAL,CAA6Bk+B,OAA7B;AAzmCgB;;AA4mClBl+B,oCAAwBk+B,OAAxBl+B,EAAiC2+B,IAAjC3+B,EAAuC;AACrC,oBAAMusB,QAAQ2R,QAAQ3R,KAAtB;AACA,oBAAMC,SAAS0R,QAAQ1R,MAAvB;AAEA,oBAAM23C,SAASnG,oBAAoB9/B,OAApB8/B,EAA6B,KAAKT,eAAlCS,EAAmD,CAAC,CAACr/B,IAArDq/B,CAAf;AACA,oBAAMoG,WAAW,KAAK3f,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAjB;AACA23C,uBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,GAA9BA,EAAmC,GAAnCA;AACAA,uBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,GAA9BA,EAAmC,GAAnCA;AACAA,uBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,OAA9BA,EAAuClE,GAAG3zC,KAAH2zC,CAAvCkE;AACAA,uBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,QAA9BA,EAAwClE,GAAG1zC,MAAH0zC,CAAxCkE;AACA,mBAAKzsC,OAAL,CAAaunB,OAAb,GAAuBklB,QAAvB;AACA,mBAAK7nE,IAAL,CAAU,SAAV;AAEA,oBAAM8nE,QAAQ,KAAK5f,UAAL,CAAgBh4B,aAAhB,CAA8B,WAA9B,CAAd;AACA43C,oBAAMzC,cAANyC,CAAqBhH,QAArBgH,EAA+B,YAA/BA,EAA6CF,MAA7CE;AACAA,oBAAMzC,cAANyC,CAAqB,IAArBA,EAA2B,GAA3BA,EAAgC,GAAhCA;AACAA,oBAAMzC,cAANyC,CAAqB,IAArBA,EAA2B,GAA3BA,EAAgCnE,GAAG,CAAC1zC,MAAJ0zC,CAAhCmE;AACAA,oBAAMzC,cAANyC,CAAqB,IAArBA,EAA2B,OAA3BA,EAAoCnE,GAAG3zC,KAAH2zC,IAAY,IAAhDmE;AACAA,oBAAMzC,cAANyC,CAAqB,IAArBA,EAA2B,QAA3BA,EAAqCnE,GAAG1zC,MAAH0zC,IAAa,IAAlDmE;AACAA,oBAAMzC,cAANyC,CACE,IADFA,EAEE,WAFFA,EAGG,SAAQnE,GAAG,IAAI3zC,KAAP2zC,CAAc,IAAGA,GAAG,CAAC,CAAD,GAAK1zC,MAAR0zC,CAAgB,GAH5CmE;;AAKA,kBAAI1lC,IAAJ,EAAU;AACRA,qBAAKxN,WAALwN,CAAiB0lC,KAAjB1lC;AADF,qBAEO;AACL,qBAAKsjC,qBAAL,GAA6B9wC,WAA7B,CAAyCkzC,KAAzC;AA3BmC;AA5mCrB;;AA2oClBxkE,kCAAsBq+B,OAAtBr+B,EAA+B;AAC7B,oBAAM83B,UAAU,KAAKA,OAArB;AACA,oBAAMpL,QAAQ2R,QAAQ3R,KAAtB;AACA,oBAAMC,SAAS0R,QAAQ1R,MAAvB;AACA,oBAAMkU,YAAY/I,QAAQ+I,SAA1B;AAEA/I,sBAAQioC,MAARjoC,GAAkB,OAAM4oC,WAAP,EAAjB5oC;AACA,oBAAMgH,OAAO,KAAK8lB,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACAkS,mBAAKijC,cAALjjC,CAAoB,IAApBA,EAA0B,IAA1BA,EAAgChH,QAAQioC,MAAxCjhC;AAEA,oBAAMxzB,OAAO,KAAKs5C,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAb;AACAthB,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+B,GAA/BA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,GAA1BA,EAA+B,GAA/BA;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,OAA1BA,EAAmC+0D,GAAG3zC,KAAH2zC,CAAnC/0D;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,QAA1BA,EAAoC+0D,GAAG1zC,MAAH0zC,CAApC/0D;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,MAA1BA,EAAkCu1B,SAAlCv1B;AACAA,mBAAKy2D,cAALz2D,CAAoB,IAApBA,EAA0B,MAA1BA,EAAmC,QAAOwsB,QAAQioC,MAAO,GAAzDz0D;AAEA,mBAAKg3D,IAAL,CAAUhxC,WAAV,CAAsBwN,IAAtB;;AACA,mBAAKsjC,qBAAL,GAA6B9wC,WAA7B,CAAyChmB,IAAzC;;AAEA,mBAAKnL,uBAAL,CAA6Bk+B,OAA7B,EAAsCS,IAAtC;AAhqCgB;;AAmqClBv/B,kCAAsBsyC,MAAtBtyC,EAA8B8yC,IAA9B9yC,EAAoC;AAClC,kBAAIyJ,MAAMspC,OAANtpC,CAAc6oC,MAAd7oC,KAAyB6oC,OAAO1tC,MAAP0tC,KAAkB,CAA/C,EAAkD;AAChD,qBAAKp2C,SAAL,CACEo2C,OAAO,CAAPA,CADF,EAEEA,OAAO,CAAPA,CAFF,EAGEA,OAAO,CAAPA,CAHF,EAIEA,OAAO,CAAPA,CAJF,EAKEA,OAAO,CAAPA,CALF,EAMEA,OAAO,CAAPA,CANF;AAFgC;;AAYlC,kBAAIQ,IAAJ,EAAU;AACR,sBAAM3lB,QAAQ2lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAxB;AACA,sBAAM1lB,SAAS0lB,KAAK,CAALA,IAAUA,KAAK,CAALA,CAAzB;AAEA,sBAAMkyB,WAAW,KAAK3f,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAAjB;AACA23C,yBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,GAA9BA,EAAmClyB,KAAK,CAALA,CAAnCkyB;AACAA,yBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,GAA9BA,EAAmClyB,KAAK,CAALA,CAAnCkyB;AACAA,yBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,OAA9BA,EAAuClE,GAAG3zC,KAAH2zC,CAAvCkE;AACAA,yBAASxC,cAATwC,CAAwB,IAAxBA,EAA8B,QAA9BA,EAAwClE,GAAG1zC,MAAH0zC,CAAxCkE;AACA,qBAAKzsC,OAAL,CAAaunB,OAAb,GAAuBklB,QAAvB;AACA,qBAAK7nE,IAAL,CAAU,SAAV;AACA,qBAAKD,OAAL;AAvBgC;AAnqClB;;AA8rClB+C,kCAAsB,CA9rCJ;;AAmsClBwkB,wBAAYjH,QAAZiH,EAAsB;AACpB,oBAAM+O,MAAM,KAAK6xB,UAAL,CAAgBx8C,MAAhB,CAAuB2U,SAAS2P,KAAhC,EAAuC3P,SAAS4P,MAAhD,CAAZ;AAGA,oBAAM83C,cAAc,KAAK7f,UAAL,CAAgBh4B,aAAhB,CAA8B,UAA9B,CAApB;AACAmG,kBAAIzB,WAAJyB,CAAgB0xC,WAAhB1xC;AACA,mBAAKuvC,IAAL,GAAYmC,WAAZ;AAIA,oBAAMC,YAAY,KAAK9f,UAAL,CAAgBh4B,aAAhB,CAA8B,OAA9B,CAAlB;AACA83C,wBAAU3C,cAAV2C,CAAyB,IAAzBA,EAA+B,WAA/BA,EAA4CnE,GAAGxjD,SAASthB,SAAZ8kE,CAA5CmE;AACA3xC,kBAAIzB,WAAJyB,CAAgB2xC,SAAhB3xC;AAKA,mBAAKA,GAAL,GAAW2xC,SAAX;AAEA,qBAAO3xC,GAAP;AAttCgB;;AA4tClB4xC,+BAAmB;AACjB,kBAAI,CAAC,KAAK7sC,OAAL,CAAagoC,SAAlB,EAA6B;AAC3B,sBAAMA,YAAY,KAAKlb,UAAL,CAAgBh4B,aAAhB,CAA8B,OAA9B,CAAlB;AACAkzC,0BAAUiC,cAAVjC,CAAyB,IAAzBA,EAA+B,WAA/BA,EAA4C,KAAKhoC,OAAL,CAAa+nC,aAAzDC;AACA,qBAAK/sC,GAAL,CAASzB,WAAT,CAAqBwuC,SAArB;AACA,qBAAKhoC,OAAL,CAAagoC,SAAb,GAAyBA,SAAzB;AALe;;AAOjB,qBAAO,KAAKhoC,OAAL,CAAagoC,SAApB;AAnuCgB;;AAyuClBsC,oCAAwB;AACtB,kBAAI,CAAC,KAAKjB,IAAV,EAAgB;AACd,qBAAKA,IAAL,GAAY,KAAKvc,UAAL,CAAgBh4B,aAAhB,CAA8B,OAA9B,CAAZ;AACA,qBAAKu0C,IAAL,CAAUY,cAAV,CAAyB,IAAzB,EAA+B,WAA/B,EAA4CxB,GAAG,KAAKK,eAARL,CAA5C;;AACA,oBAAI,KAAKzoC,OAAL,CAAa+nC,aAAjB,EAAgC;AAC9B,uBAAK8E,gBAAL,GAAwBrzC,WAAxB,CAAoC,KAAK6vC,IAAzC;AADF,uBAEO;AACL,uBAAKpuC,GAAL,CAASzB,WAAT,CAAqB,KAAK6vC,IAA1B;AANY;AADM;;AAUtB,qBAAO,KAAKA,IAAZ;AAnvCgB;;AAAA,WAApB/D;AAndF;;;;;;;;;;;;ACgBA;;AAMA;;AAKA;;AAMA,cAAMnlC,KAAK/U,OAAuBA,CAAC,IAADA,CAAlC;;AACA,cAAM0hD,OAAO1hD,OAAuBA,CAAC,MAADA,CAApC;;AACA,cAAM2hD,QAAQ3hD,OAAuBA,CAAC,OAADA,CAArC;;AACA,cAAMvf,MAAMuf,OAAuBA,CAAC,KAADA,CAAnC;;AAEA,cAAM4hD,eAAe,yBAArB;;AAEA,iBAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,gBAAMC,YAAYthE,IAAIuhE,KAAJvhE,CAAUqhE,SAAVrhE,CAAlB;;AACA,cAAIshE,UAAUrhE,QAAVqhE,KAAuB,OAAvBA,IAAkCA,UAAUE,IAAhD,EAAsD;AACpD,mBAAOF,SAAP;AAHyB;;AAM3B,cAAI,gBAAgBl3D,IAAhB,CAAqBi3D,SAArB,CAAJ,EAAqC;AACnC,mBAAOrhE,IAAIuhE,KAAJvhE,CAAW,WAAUqhE,SAAX,EAAVrhE,CAAP;AAPyB;;AAU3B,cAAI,CAACshE,UAAUE,IAAf,EAAqB;AACnBF,sBAAUrhE,QAAVqhE,GAAqB,OAArBA;AAXyB;;AAa3B,iBAAOA,SAAP;AArDF;;AAwDA,cAAMG,aAAN,CAAoB;AAClB//D,sBAAYiM,MAAZjM,EAAoB;AAClB,iBAAKiM,MAAL,GAAcA,MAAd;AACA,iBAAK3N,GAAL,GAAWohE,SAASzzD,OAAO3N,GAAhBohE,CAAX;AACA,iBAAKM,MAAL,GACE,KAAK1hE,GAAL,CAASC,QAAT,KAAsB,OAAtB,IAAiC,KAAKD,GAAL,CAASC,QAAT,KAAsB,QADzD;AAGA,iBAAK0hE,OAAL,GAAe,KAAK3hE,GAAL,CAASC,QAAT,KAAsB,OAArC;AACA,iBAAK2Q,WAAL,GAAoB,KAAK8wD,MAAL,IAAe/zD,OAAOiD,WAAtB,IAAsC,EAA1D;AAEA,iBAAK8rC,kBAAL,GAA0B,IAA1B;AACA,iBAAKklB,oBAAL,GAA4B,EAA5B;AAXgB;;AAclB,cAAIzkB,sBAAJ,GAA6B;AAC3B,mBAAO,KAAKT,kBAAL,EAAyBU,OAAzB,IAAoC,CAA3C;AAfgB;;AAkBlB95B,0BAAgB;AACdjkB,8BACE,CAAC,KAAKq9C,kBADRr9C,EAEE,sDAFFA;AAIA,iBAAKq9C,kBAAL,GAA0B,KAAKilB,OAAL,GACtB,IAAIE,yBAAJ,CAA8B,IAA9B,CADsB,GAEtB,IAAIC,uBAAJ,CAA4B,IAA5B,CAFJ;AAGA,mBAAO,KAAKplB,kBAAZ;AA1BgB;;AA6BlBr4B,yBAAe0I,KAAf1I,EAAsB9Q,GAAtB8Q,EAA2B;AACzB,gBAAI9Q,OAAO,KAAK4pC,sBAAhB,EAAwC;AACtC,qBAAO,IAAP;AAFuB;;AAIzB,kBAAM/4B,cAAc,KAAKu9C,OAAL,GAChB,IAAII,0BAAJ,CAA+B,IAA/B,EAAqCh1C,KAArC,EAA4CxZ,GAA5C,CADgB,GAEhB,IAAIyuD,wBAAJ,CAA6B,IAA7B,EAAmCj1C,KAAnC,EAA0CxZ,GAA1C,CAFJ;;AAGA,iBAAKquD,oBAAL,CAA0Bx+D,IAA1B,CAA+BghB,WAA/B;;AACA,mBAAOA,WAAP;AArCgB;;AAwClBhB,4BAAkBlX,MAAlBkX,EAA0B;AACxB,gBAAI,KAAKs5B,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBh/B,MAAxB,CAA+BxR,MAA/B;AAFsB;;AAIxB,uBAAW2Q,MAAX,IAAqB,KAAK+kD,oBAAL,CAA0Bl7D,KAA1B,CAAgC,CAAhC,CAArB,EAAyD;AACvDmW,qBAAOa,MAAPb,CAAc3Q,MAAd2Q;AALsB;AAxCR;;AAAA;;;;AAkDpB,cAAMolD,cAAN,CAAqB;AACnBvgE,sBAAYm3C,MAAZn3C,EAAoB;AAClB,iBAAKwgE,IAAL,GAAYrpB,OAAO74C,GAAnB;AACA,iBAAK29C,KAAL,GAAa,KAAb;AACA,iBAAKwkB,YAAL,GAAoB,IAApB;AACA,iBAAKlwD,UAAL,GAAkB,IAAlB;AACA,kBAAMtE,SAASkrC,OAAOlrC,MAAtB;AACA,iBAAK8uC,cAAL,GAAsB9uC,OAAOnN,MAA7B;AACA,iBAAK48C,OAAL,GAAe,CAAf;AACA,iBAAKQ,SAAL,GAAiB,IAAjB;AAEA,iBAAKwkB,aAAL,GAAqBz0D,OAAO4B,YAAP5B,IAAuB,KAA5C;AACA,iBAAK00D,eAAL,GAAuB10D,OAAOW,cAA9B;;AACA,gBAAI,CAAC,KAAK+zD,eAAN,IAAyB,CAAC,KAAKD,aAAnC,EAAkD;AAChD,mBAAKA,aAAL,GAAqB,IAArB;AAbgB;;AAgBlB,iBAAK7lB,qBAAL,GAA6B,CAAC5uC,OAAO6B,aAArC;AACA,iBAAKgtC,iBAAL,GAAyB,CAAC7uC,OAAO4B,YAAjC;AAEA,iBAAK+yD,eAAL,GAAuB,IAAvB;AACA,iBAAKC,eAAL,GAAuB72D,oCAAvB;AACA,iBAAK82D,kBAAL,GAA0B92D,oCAA1B;AAtBiB;;AAyBnB,cAAIsY,YAAJ,GAAmB;AACjB,mBAAO,KAAKw+C,kBAAL,CAAwB12D,OAA/B;AA1BiB;;AA6BnB,cAAI8Z,QAAJ,GAAe;AACb,mBAAO,KAAKg4B,SAAZ;AA9BiB;;AAiCnB,cAAIz5B,aAAJ,GAAoB;AAClB,mBAAO,KAAKs4B,cAAZ;AAlCiB;;AAqCnB,cAAIv4B,gBAAJ,GAAuB;AACrB,mBAAO,KAAKs4B,iBAAZ;AAtCiB;;AAyCnB,cAAIv4B,oBAAJ,GAA2B;AACzB,mBAAO,KAAKs4B,qBAAZ;AA1CiB;;AA6CnB,gBAAMz/B,IAAN,GAAa;AACX,kBAAM,KAAKylD,eAAL,CAAqBz2D,OAA3B;;AACA,gBAAI,KAAK6xC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AAHS;;AAKX,gBAAI,KAAKolD,YAAT,EAAuB;AACrB,oBAAM,KAAKA,YAAX;AANS;;AASX,kBAAMj/D,QAAQ,KAAKo/D,eAAL,CAAqBxlD,IAArB,EAAd;;AACA,gBAAI5Z,UAAU,IAAd,EAAoB;AAClB,mBAAKq/D,eAAL,GAAuB72D,oCAAvB;AACA,qBAAO,KAAKoR,IAAL,EAAP;AAZS;;AAcX,iBAAKsgC,OAAL,IAAgBl6C,MAAM1C,MAAtB;;AACA,gBAAI,KAAKyR,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgB;AACdgB,wBAAQ,KAAKmqC,OADC;AAEdlqC,uBAAO,KAAKupC;AAFE,eAAhB;AAhBS;;AAsBX,kBAAM13C,SAAS,IAAIvB,UAAJ,CAAeN,KAAf,EAAsB6B,MAArC;AACA,mBAAO;AAAE/D,qBAAO+D,MAAT;AAAiBgY,oBAAM;AAAvB,aAAP;AApEiB;;AAuEnBW,iBAAOxR,MAAPwR,EAAe;AAGb,gBAAI,CAAC,KAAK4kD,eAAV,EAA2B;AACzB,mBAAKG,MAAL,CAAYv2D,MAAZ;;AACA;AALW;;AAOb,iBAAKo2D,eAAL,CAAqBnwD,OAArB,CAA6BjG,MAA7B;AA9EiB;;AAiFnBu2D,iBAAOv2D,MAAPu2D,EAAe;AACb,iBAAKN,YAAL,GAAoBj2D,MAApB;;AACA,iBAAKq2D,eAAL,CAAqBv2D,OAArB;AAnFiB;;AAsFnB02D,6BAAmB/lD,cAAnB+lD,EAAmC;AACjC,iBAAKJ,eAAL,GAAuB3lD,cAAvB;AACAA,2BAAe2D,EAAf3D,CAAkB,UAAlBA,EAA8B,MAAM;AAClC,mBAAK4lD,eAAL,CAAqBv2D,OAArB;AADF;AAIA2Q,2BAAe2D,EAAf3D,CAAkB,KAAlBA,EAAyB,MAAM;AAE7BA,6BAAexK,OAAfwK;AACA,mBAAKghC,KAAL,GAAa,IAAb;;AACA,mBAAK4kB,eAAL,CAAqBv2D,OAArB;AAJF;AAOA2Q,2BAAe2D,EAAf3D,CAAkB,OAAlBA,EAA2BzQ,UAAU;AACnC,mBAAKu2D,MAAL,CAAYv2D,MAAZ;AADF;;AAMA,gBAAI,CAAC,KAAKqwC,qBAAN,IAA+B,KAAKC,iBAAxC,EAA2D;AACzD,mBAAKimB,MAAL,CAAY,IAAIpgE,oBAAJ,CAAmB,uBAAnB,CAAZ;AApB+B;;AAwBjC,gBAAI,KAAK8/D,YAAT,EAAuB;AACrB,mBAAKG,eAAL,CAAqBnwD,OAArB,CAA6B,KAAKgwD,YAAlC;AAzB+B;AAtFhB;;AAAA;;AAoHrB,cAAMQ,eAAN,CAAsB;AACpBjhE,sBAAYm3C,MAAZn3C,EAAoB;AAClB,iBAAKwgE,IAAL,GAAYrpB,OAAO74C,GAAnB;AACA,iBAAK29C,KAAL,GAAa,KAAb;AACA,iBAAKwkB,YAAL,GAAoB,IAApB;AACA,iBAAKlwD,UAAL,GAAkB,IAAlB;AACA,iBAAKmrC,OAAL,GAAe,CAAf;AACA,iBAAKklB,eAAL,GAAuB,IAAvB;AACA,iBAAKC,eAAL,GAAuB72D,oCAAvB;AACA,kBAAMiC,SAASkrC,OAAOlrC,MAAtB;AACA,iBAAK4uC,qBAAL,GAA6B,CAAC5uC,OAAO6B,aAArC;AAVkB;;AAapB,cAAIyU,oBAAJ,GAA2B;AACzB,mBAAO,KAAKs4B,qBAAZ;AAdkB;;AAiBpB,gBAAMz/B,IAAN,GAAa;AACX,kBAAM,KAAKylD,eAAL,CAAqBz2D,OAA3B;;AACA,gBAAI,KAAK6xC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AAHS;;AAKX,gBAAI,KAAKolD,YAAT,EAAuB;AACrB,oBAAM,KAAKA,YAAX;AANS;;AASX,kBAAMj/D,QAAQ,KAAKo/D,eAAL,CAAqBxlD,IAArB,EAAd;;AACA,gBAAI5Z,UAAU,IAAd,EAAoB;AAClB,mBAAKq/D,eAAL,GAAuB72D,oCAAvB;AACA,qBAAO,KAAKoR,IAAL,EAAP;AAZS;;AAcX,iBAAKsgC,OAAL,IAAgBl6C,MAAM1C,MAAtB;;AACA,gBAAI,KAAKyR,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgB;AAAEgB,wBAAQ,KAAKmqC;AAAf,eAAhB;AAhBS;;AAmBX,kBAAMr4C,SAAS,IAAIvB,UAAJ,CAAeN,KAAf,EAAsB6B,MAArC;AACA,mBAAO;AAAE/D,qBAAO+D,MAAT;AAAiBgY,oBAAM;AAAvB,aAAP;AArCkB;;AAwCpBW,iBAAOxR,MAAPwR,EAAe;AAGb,gBAAI,CAAC,KAAK4kD,eAAV,EAA2B;AACzB,mBAAKG,MAAL,CAAYv2D,MAAZ;;AACA;AALW;;AAOb,iBAAKo2D,eAAL,CAAqBnwD,OAArB,CAA6BjG,MAA7B;AA/CkB;;AAkDpBu2D,iBAAOv2D,MAAPu2D,EAAe;AACb,iBAAKN,YAAL,GAAoBj2D,MAApB;;AACA,iBAAKq2D,eAAL,CAAqBv2D,OAArB;AApDkB;;AAuDpB02D,6BAAmB/lD,cAAnB+lD,EAAmC;AACjC,iBAAKJ,eAAL,GAAuB3lD,cAAvB;AACAA,2BAAe2D,EAAf3D,CAAkB,UAAlBA,EAA8B,MAAM;AAClC,mBAAK4lD,eAAL,CAAqBv2D,OAArB;AADF;AAIA2Q,2BAAe2D,EAAf3D,CAAkB,KAAlBA,EAAyB,MAAM;AAE7BA,6BAAexK,OAAfwK;AACA,mBAAKghC,KAAL,GAAa,IAAb;;AACA,mBAAK4kB,eAAL,CAAqBv2D,OAArB;AAJF;AAOA2Q,2BAAe2D,EAAf3D,CAAkB,OAAlBA,EAA2BzQ,UAAU;AACnC,mBAAKu2D,MAAL,CAAYv2D,MAAZ;AADF;;AAKA,gBAAI,KAAKi2D,YAAT,EAAuB;AACrB,mBAAKG,eAAL,CAAqBnwD,OAArB,CAA6B,KAAKgwD,YAAlC;AAnB+B;AAvDf;;AAAA;;AA+EtB,iBAASS,oBAAT,CAA8BtB,SAA9B,EAAyCuB,OAAzC,EAAkD;AAChD,iBAAO;AACL5iE,sBAAUqhE,UAAUrhE,QADf;AAEL6iE,kBAAMxB,UAAUwB,IAFX;AAGLtB,kBAAMF,UAAUyB,QAHX;AAILpzD,kBAAM2xD,UAAU3xD,IAJX;AAKLq6B,kBAAMs3B,UAAUt3B,IALX;AAMLg5B,oBAAQ,KANH;AAOLH;AAPK,WAAP;AA9SF;;AAyTA,cAAMf,uBAAN,SAAsCG,cAAtC,CAAqD;AACnDvgE,sBAAYm3C,MAAZn3C,EAAoB;AAClB,kBAAMm3C,MAAN;;AAEA,kBAAMoqB,iBAAiB35C,YAAY;AACjC,kBAAIA,SAAS45C,UAAT55C,KAAwB,GAA5B,EAAiC;AAC/B,sBAAM3O,QAAQ,IAAI1Y,yBAAJ,CAAyB,gBAAe,KAAKigE,IAAK,IAAlD,CAAd;AACA,qBAAKC,YAAL,GAAoBxnD,KAApB;;AACA,qBAAK6nD,kBAAL,CAAwBv2D,MAAxB,CAA+B0O,KAA/B;;AACA;AAL+B;;AAOjC,mBAAK6nD,kBAAL,CAAwBx2D,OAAxB;;AACA,mBAAK02D,kBAAL,CAAwBp5C,QAAxB;;AAEA,oBAAM65C,oBAAoB1hE,QAAQ;AAGhC,uBAAO,KAAK6gE,eAAL,CAAqBO,OAArB,CAA6BphE,KAAKqqB,WAALrqB,EAA7B,CAAP;AAHF;;AAKA,oBAAM;AAAE2hE,kCAAF;AAAsBC;AAAtB,kBACJC,qDAAiC;AAC/BH,iCAD+B;AAE/BzB,wBAAQ7oB,OAAO6oB,MAFgB;AAG/BpzD,gCAAgB,KAAK+zD,eAHU;AAI/B9yD,8BAAc,KAAK6yD;AAJY,eAAjCkB,CADF;AAQA,mBAAK9mB,iBAAL,GAAyB4mB,kBAAzB;AAEA,mBAAK3mB,cAAL,GAAsB4mB,mBAAmB,KAAK5mB,cAA9C;AAEA,mBAAKmB,SAAL,GAAiB2lB,8CAA0BJ,iBAA1BI,CAAjB;AA3BF;;AA8BA,iBAAKC,QAAL,GAAgB,IAAhB;;AACA,gBAAI,KAAKtB,IAAL,CAAUjiE,QAAV,KAAuB,OAA3B,EAAoC;AAClC,mBAAKujE,QAAL,GAAgBvC,KAAKt3C,OAALs3C,CACd2B,qBAAqB,KAAKV,IAA1BU,EAAgC/pB,OAAOjoC,WAAvCgyD,CADc3B,EAEdgC,cAFchC,CAAhB;AADF,mBAKO;AACL,mBAAKuC,QAAL,GAAgBtC,MAAMv3C,OAANu3C,CACd0B,qBAAqB,KAAKV,IAA1BU,EAAgC/pB,OAAOjoC,WAAvCgyD,CADc1B,EAEd+B,cAFc/B,CAAhB;AAxCgB;;AA8ClB,iBAAKsC,QAAL,CAAcljD,EAAd,CAAiB,OAAjB,EAA0BpU,UAAU;AAClC,mBAAKi2D,YAAL,GAAoBj2D,MAApB;;AACA,mBAAKs2D,kBAAL,CAAwBv2D,MAAxB,CAA+BC,MAA/B;AAFF;;AAOA,iBAAKs3D,QAAL,CAAcjwD,GAAd;AAtDiD;;AAAA;;AA0DrD,cAAMyuD,wBAAN,SAAuCW,eAAvC,CAAuD;AACrDjhE,sBAAYm3C,MAAZn3C,EAAoBqrB,KAApBrrB,EAA2B6R,GAA3B7R,EAAgC;AAC9B,kBAAMm3C,MAAN;AAEA,iBAAK4qB,YAAL,GAAoB,EAApB;;AACA,uBAAW5iC,QAAX,IAAuBgY,OAAOjoC,WAA9B,EAA2C;AACzC,oBAAM5P,QAAQ63C,OAAOjoC,WAAPioC,CAAmBhY,QAAnBgY,CAAd;;AACA,kBAAI,OAAO73C,KAAP,KAAiB,WAArB,EAAkC;AAChC;AAHuC;;AAKzC,mBAAKyiE,YAAL,CAAkB5iC,QAAlB,IAA8B7/B,KAA9B;AAT4B;;AAW9B,iBAAKyiE,YAAL,CAAkBC,KAAlB,GAA2B,SAAQ32C,KAAM,IAAGxZ,MAAM,CAAxB,EAA1B;;AAEA,kBAAM0vD,iBAAiB35C,YAAY;AACjC,kBAAIA,SAAS45C,UAAT55C,KAAwB,GAA5B,EAAiC;AAC/B,sBAAM3O,QAAQ,IAAI1Y,yBAAJ,CAAyB,gBAAe,KAAKigE,IAAK,IAAlD,CAAd;AACA,qBAAKC,YAAL,GAAoBxnD,KAApB;AACA;AAJ+B;;AAMjC,mBAAK+nD,kBAAL,CAAwBp5C,QAAxB;AANF;;AASA,iBAAKk6C,QAAL,GAAgB,IAAhB;;AACA,gBAAI,KAAKtB,IAAL,CAAUjiE,QAAV,KAAuB,OAA3B,EAAoC;AAClC,mBAAKujE,QAAL,GAAgBvC,KAAKt3C,OAALs3C,CACd2B,qBAAqB,KAAKV,IAA1BU,EAAgC,KAAKa,YAArCb,CADc3B,EAEdgC,cAFchC,CAAhB;AADF,mBAKO;AACL,mBAAKuC,QAAL,GAAgBtC,MAAMv3C,OAANu3C,CACd0B,qBAAqB,KAAKV,IAA1BU,EAAgC,KAAKa,YAArCb,CADc1B,EAEd+B,cAFc/B,CAAhB;AA7B4B;;AAmC9B,iBAAKsC,QAAL,CAAcljD,EAAd,CAAiB,OAAjB,EAA0BpU,UAAU;AAClC,mBAAKi2D,YAAL,GAAoBj2D,MAApB;AADF;;AAGA,iBAAKs3D,QAAL,CAAcjwD,GAAd;AAvCmD;;AAAA;;AA2CvD,cAAMsuD,yBAAN,SAAwCI,cAAxC,CAAuD;AACrDvgE,sBAAYm3C,MAAZn3C,EAAoB;AAClB,kBAAMm3C,MAAN;AAEA,gBAAI7O,OAAOx/B,mBAAmB,KAAK03D,IAAL,CAAUl4B,IAA7Bx/B,CAAX;;AAGA,gBAAI22D,aAAa/2D,IAAb+2D,CAAkB,KAAKe,IAAL,CAAU/zD,IAA5BgzD,CAAJ,EAAuC;AACrCn3B,qBAAOA,KAAK9/B,OAAL8/B,CAAa,KAAbA,EAAoB,EAApBA,CAAPA;AAPgB;;AAUlB1V,eAAGqvC,KAAHrvC,CAAS0V,IAAT1V,EAAe,CAAC3Z,KAAD,EAAQipD,IAAR,KAAiB;AAC9B,kBAAIjpD,KAAJ,EAAW;AACT,oBAAIA,MAAM9Y,IAAN8Y,KAAe,QAAnB,EAA6B;AAC3BA,0BAAQ,IAAI1Y,yBAAJ,CAAyB,gBAAe+nC,IAAK,IAA7C,CAARrvB;AAFO;;AAIT,qBAAKwnD,YAAL,GAAoBxnD,KAApB;;AACA,qBAAK6nD,kBAAL,CAAwBv2D,MAAxB,CAA+B0O,KAA/B;;AACA;AAP4B;;AAU9B,mBAAK8hC,cAAL,GAAsBmnB,KAAKxtD,IAA3B;;AAEA,mBAAKssD,kBAAL,CAAwBpuC,GAAGuvC,gBAAHvvC,CAAoB0V,IAApB1V,CAAxB;;AACA,mBAAKkuC,kBAAL,CAAwBx2D,OAAxB;AAbF;AAXmD;;AAAA;;AA6BvD,cAAM+1D,0BAAN,SAAyCY,eAAzC,CAAyD;AACvDjhE,sBAAYm3C,MAAZn3C,EAAoBqrB,KAApBrrB,EAA2B6R,GAA3B7R,EAAgC;AAC9B,kBAAMm3C,MAAN;AAEA,gBAAI7O,OAAOx/B,mBAAmB,KAAK03D,IAAL,CAAUl4B,IAA7Bx/B,CAAX;;AAGA,gBAAI22D,aAAa/2D,IAAb+2D,CAAkB,KAAKe,IAAL,CAAU/zD,IAA5BgzD,CAAJ,EAAuC;AACrCn3B,qBAAOA,KAAK9/B,OAAL8/B,CAAa,KAAbA,EAAoB,EAApBA,CAAPA;AAP4B;;AAU9B,iBAAK04B,kBAAL,CAAwBpuC,GAAGuvC,gBAAHvvC,CAAoB0V,IAApB1V,EAA0B;AAAEvH,mBAAF;AAASxZ,mBAAKA,MAAM;AAApB,aAA1B+gB,CAAxB;AAXqD;;AAAA;;;;;;;;;;;;;;;;AC5azD;;AAKA;;AACA;;AAEA,iBAASgvC,gCAAT,SAKG;AAAA,cALuC;AACxCH,6BADwC;AAExCzB,kBAFwC;AAGxCpzD,0BAHwC;AAIxCiB;AAJwC,WAKvC;AACDlQ,4BAAOiP,iBAAiB,CAAxBjP,EAA2B,2CAA3BA;AACA,gBAAMykE,eAAe;AACnBV,gCAAoB,KADD;AAEnBC,6BAAiB7gE;AAFE,WAArB;AAKA,gBAAMhC,SAAS2tB,SAASg1C,kBAAkB,gBAAlBA,CAATh1C,EAA8C,EAA9CA,CAAf;;AACA,cAAI,CAACxvB,OAAOC,SAAPD,CAAiB6B,MAAjB7B,CAAL,EAA+B;AAC7B,mBAAOmlE,YAAP;AATD;;AAYDA,uBAAaT,eAAbS,GAA+BtjE,MAA/BsjE;;AAEA,cAAItjE,UAAU,IAAI8N,cAAlB,EAAkC;AAGhC,mBAAOw1D,YAAP;AAjBD;;AAoBD,cAAIv0D,gBAAgB,CAACmyD,MAArB,EAA6B;AAC3B,mBAAOoC,YAAP;AArBD;;AAuBD,cAAIX,kBAAkB,eAAlBA,MAAuC,OAA3C,EAAoD;AAClD,mBAAOW,YAAP;AAxBD;;AA2BD,gBAAMC,kBAAkBZ,kBAAkB,kBAAlBA,KAAyC,UAAjE;;AACA,cAAIY,oBAAoB,UAAxB,EAAoC;AAClC,mBAAOD,YAAP;AA7BD;;AAgCDA,uBAAaV,kBAAbU,GAAkC,IAAlCA;AACA,iBAAOA,YAAP;AA7DF;;AAgEA,iBAASP,yBAAT,CAAmCJ,iBAAnC,EAAsD;AACpD,gBAAMa,qBAAqBb,kBAAkB,qBAAlBA,CAA3B;;AACA,cAAIa,kBAAJ,EAAwB;AACtB,gBAAIp+C,WAAWq+C,kEAAwCD,kBAAxCC,CAAf;;AACA,gBAAIr+C,SAAS+G,QAAT/G,CAAkB,GAAlBA,CAAJ,EAA4B;AAC1B,kBAAI;AACFA,2BAAWpb,mBAAmBob,QAAnBpb,CAAXob;AADF,gBAEE,OAAOjlB,EAAP,EAAW,CAHa;AAFN;;AAOtB,gBAAIorB,8BAAUnG,QAAVmG,CAAJ,EAAyB;AACvB,qBAAOnG,QAAP;AARoB;AAF4B;;AAapD,iBAAO,IAAP;AA7EF;;AAgFA,iBAASs+C,yBAAT,CAAmC/hE,MAAnC,EAA2CnC,GAA3C,EAAgD;AAC9C,cAAImC,WAAW,GAAXA,IAAmBA,WAAW,CAAXA,IAAgBnC,IAAIK,UAAJL,CAAe,OAAfA,CAAvC,EAAiE;AAC/D,mBAAO,IAAIiC,yBAAJ,CAAwB,kBAAkBjC,GAAlB,GAAwB,IAAhD,CAAP;AAF4C;;AAI9C,iBAAO,IAAIkC,iCAAJ,CACJ,+BAA8BC,MAAO,2BAA0BnC,GAAI,IAD/D,EAELmC,MAFK,CAAP;AApFF;;AA0FA,iBAASgiE,sBAAT,CAAgChiE,MAAhC,EAAwC;AACtC,iBAAOA,WAAW,GAAXA,IAAkBA,WAAW,GAApC;AA3FF;;;;;;;;;;;;;ACeA;;AAeA,iBAAS8hE,uCAAT,CAAiDD,kBAAjD,EAAqE;AACnE,cAAII,qBAAqB,IAAzB;AAGA,cAAIpxB,MAAMqxB,cAAc,aAAdA,EAA6B,GAA7BA,EAAkC53C,IAAlC43C,CAAuCL,kBAAvCK,CAAV;;AACA,cAAIrxB,GAAJ,EAAS;AACPA,kBAAMA,IAAI,CAAJA,CAANA;AACA,gBAAIptB,WAAW0+C,eAAetxB,GAAfsxB,CAAf;AACA1+C,uBAAWjb,SAASib,QAATjb,CAAXib;AACAA,uBAAW2+C,cAAc3+C,QAAd2+C,CAAX3+C;AACAA,uBAAW4+C,cAAc5+C,QAAd4+C,CAAX5+C;AACA,mBAAO6+C,cAAc7+C,QAAd6+C,CAAP;AAXiE;;AAiBnEzxB,gBAAM0xB,gBAAgBV,kBAAhBU,CAAN1xB;;AACA,cAAIA,GAAJ,EAAS;AAEP,kBAAMptB,WAAW4+C,cAAcxxB,GAAdwxB,CAAjB;AACA,mBAAOC,cAAc7+C,QAAd6+C,CAAP;AArBiE;;AAyBnEzxB,gBAAMqxB,cAAc,UAAdA,EAA0B,GAA1BA,EAA+B53C,IAA/B43C,CAAoCL,kBAApCK,CAANrxB;;AACA,cAAIA,GAAJ,EAAS;AACPA,kBAAMA,IAAI,CAAJA,CAANA;AACA,gBAAIptB,WAAW0+C,eAAetxB,GAAfsxB,CAAf;AACA1+C,uBAAW4+C,cAAc5+C,QAAd4+C,CAAX5+C;AACA,mBAAO6+C,cAAc7+C,QAAd6+C,CAAP;AA9BiE;;AAoCnE,mBAASJ,aAAT,CAAuBM,gBAAvB,EAAyCC,KAAzC,EAAgD;AAC9C,mBAAO,IAAI52C,MAAJ,CACL,gBACE22C,gBADF,GAEE,WAFF,GAKE,GALF,GAME,kBANF,GAOE,GAPF,GAQE,yBARF,GASE,GAVG,EAWLC,KAXK,CAAP;AArCiE;;AAmDnE,mBAASC,UAAT,CAAoBn7D,QAApB,EAA8B1I,KAA9B,EAAqC;AACnC,gBAAI0I,QAAJ,EAAc;AACZ,kBAAI,CAAC,iBAAiBU,IAAjB,CAAsBpJ,KAAtB,CAAL,EAAmC;AACjC,uBAAOA,KAAP;AAFU;;AAIZ,kBAAI;AACF,sBAAM2I,UAAU,IAAIC,WAAJ,CAAgBF,QAAhB,EAA0B;AAAEG,yBAAO;AAAT,iBAA1B,CAAhB;AACA,sBAAM9E,SAASzB,yBAActC,KAAdsC,CAAf;AACAtC,wBAAQ2I,QAAQG,MAARH,CAAe5E,MAAf4E,CAAR3I;AACAojE,qCAAqB,KAArBA;AAJF,gBAKE,OAAOvkE,CAAP,EAAU,CATA;AADqB;;AAcnC,mBAAOmB,KAAP;AAjEiE;;AAmEnE,mBAASyjE,aAAT,CAAuBzjE,KAAvB,EAA8B;AAC5B,gBAAIojE,sBAAsB,cAAch6D,IAAd,CAAmBpJ,KAAnB,CAA1B,EAAqD;AAEnDA,sBAAQ6jE,WAAW,OAAXA,EAAoB7jE,KAApB6jE,CAAR7jE;;AACA,kBAAIojE,kBAAJ,EAAwB;AAEtBpjE,wBAAQ6jE,WAAW,YAAXA,EAAyB7jE,KAAzB6jE,CAAR7jE;AALiD;AADzB;;AAS5B,mBAAOA,KAAP;AA5EiE;;AA8EnE,mBAAS0jE,eAAT,CAAyBI,qBAAzB,EAAgD;AAC9C,kBAAM72C,UAAU,EAAhB;AACA,gBAAI1tB,KAAJ;AAGA,kBAAMwkE,OAAOV,cAAc,iCAAdA,EAAiD,IAAjDA,CAAb;;AACA,mBAAQ,SAAQU,KAAKt4C,IAALs4C,CAAUD,qBAAVC,CAAR,MAA8C,IAAtD,EAA4D;AAC1D,kBAAI,GAAGz/D,CAAH,EAAM0/D,IAAN,EAAYC,IAAZ,IAAoB1kE,KAAxB;AACA+E,kBAAI6oB,SAAS7oB,CAAT6oB,EAAY,EAAZA,CAAJ7oB;;AACA,kBAAIA,KAAK2oB,OAAT,EAAkB;AAEhB,oBAAI3oB,MAAM,CAAV,EAAa;AACX;AAHc;;AAKhB;AARwD;;AAU1D2oB,sBAAQ3oB,CAAR2oB,IAAa,CAAC+2C,IAAD,EAAOC,IAAP,CAAbh3C;AAhB4C;;AAkB9C,kBAAMi3C,QAAQ,EAAd;;AACA,iBAAK,IAAI5/D,IAAI,CAAb,EAAgBA,IAAI2oB,QAAQztB,MAA5B,EAAoC,EAAE8E,CAAtC,EAAyC;AACvC,kBAAI,EAAEA,KAAK2oB,OAAP,CAAJ,EAAqB;AAEnB;AAHqC;;AAKvC,kBAAI,CAAC+2C,IAAD,EAAOC,IAAP,IAAeh3C,QAAQ3oB,CAAR2oB,CAAnB;AACAg3C,qBAAOX,eAAeW,IAAfX,CAAPW;;AACA,kBAAID,IAAJ,EAAU;AACRC,uBAAOt6D,SAASs6D,IAATt6D,CAAPs6D;;AACA,oBAAI3/D,MAAM,CAAV,EAAa;AACX2/D,yBAAOV,cAAcU,IAAdV,CAAPU;AAHM;AAP6B;;AAavCC,oBAAM9hE,IAAN8hE,CAAWD,IAAXC;AAhC4C;;AAkC9C,mBAAOA,MAAM7hE,IAAN6hE,CAAW,EAAXA,CAAP;AAhHiE;;AAkHnE,mBAASZ,cAAT,CAAwBtjE,KAAxB,EAA+B;AAC7B,gBAAIA,MAAMX,UAANW,CAAiB,GAAjBA,CAAJ,EAA2B;AACzB,oBAAMkkE,QAAQlkE,MAAM0F,KAAN1F,CAAY,CAAZA,EAAe8tD,KAAf9tD,CAAqB,KAArBA,CAAd;;AAEA,mBAAK,IAAI8B,IAAI,CAAb,EAAgBA,IAAIoiE,MAAM1kE,MAA1B,EAAkC,EAAEsC,CAApC,EAAuC;AACrC,sBAAMqiE,YAAYD,MAAMpiE,CAANoiE,EAASlmD,OAATkmD,CAAiB,GAAjBA,CAAlB;;AACA,oBAAIC,cAAc,CAAC,CAAnB,EAAsB;AACpBD,wBAAMpiE,CAANoiE,IAAWA,MAAMpiE,CAANoiE,EAASx+D,KAATw+D,CAAe,CAAfA,EAAkBC,SAAlBD,CAAXA;AACAA,wBAAM1kE,MAAN0kE,GAAepiE,IAAI,CAAnBoiE;AAJmC;;AAMrCA,sBAAMpiE,CAANoiE,IAAWA,MAAMpiE,CAANoiE,EAASh7D,OAATg7D,CAAiB,QAAjBA,EAA2B,IAA3BA,CAAXA;AATuB;;AAWzBlkE,sBAAQkkE,MAAM7hE,IAAN6hE,CAAW,GAAXA,CAARlkE;AAZ2B;;AAc7B,mBAAOA,KAAP;AAhIiE;;AAkInE,mBAASujE,aAAT,CAAuBa,QAAvB,EAAiC;AAE/B,kBAAMC,cAAcD,SAASpmD,OAATomD,CAAiB,GAAjBA,CAApB;;AACA,gBAAIC,gBAAgB,CAAC,CAArB,EAAwB;AAItB,qBAAOD,QAAP;AAP6B;;AAS/B,kBAAM17D,WAAW07D,SAAS1+D,KAAT0+D,CAAe,CAAfA,EAAkBC,WAAlBD,CAAjB;AACA,kBAAME,YAAYF,SAAS1+D,KAAT0+D,CAAeC,cAAc,CAA7BD,CAAlB;AAEA,kBAAMpkE,QAAQskE,UAAUp7D,OAAVo7D,CAAkB,SAAlBA,EAA6B,EAA7BA,CAAd;AACA,mBAAOT,WAAWn7D,QAAXm7D,EAAqB7jE,KAArB6jE,CAAP;AA/IiE;;AAiJnE,mBAASL,aAAT,CAAuBxjE,KAAvB,EAA8B;AAW5B,gBAAI,CAACA,MAAMX,UAANW,CAAiB,IAAjBA,CAAD,IAA2B,uBAAuBoJ,IAAvB,CAA4BpJ,KAA5B,CAA/B,EAAmE;AACjE,qBAAOA,KAAP;AAZ0B;;AAqB5B,mBAAOA,MAAMkJ,OAANlJ,CACL,gDADKA,EAEL,UAAUitB,OAAV,EAAmBs3C,OAAnB,EAA4B77D,QAA5B,EAAsCggB,IAAtC,EAA4C;AAC1C,kBAAIhgB,aAAa,GAAbA,IAAoBA,aAAa,GAArC,EAA0C;AAExCggB,uBAAOA,KAAKxf,OAALwf,CAAa,IAAbA,EAAmB,GAAnBA,CAAPA;AACAA,uBAAOA,KAAKxf,OAALwf,CAAa,oBAAbA,EAAmC,UAAUnpB,KAAV,EAAiBilE,GAAjB,EAAsB;AAC9D,yBAAO9iE,OAAOC,YAAPD,CAAoByrB,SAASq3C,GAATr3C,EAAc,EAAdA,CAApBzrB,CAAP;AADK,kBAAPgnB;AAGA,uBAAOm7C,WAAWU,OAAXV,EAAoBn7C,IAApBm7C,CAAP;AAPwC;;AAS1C,kBAAI;AACFn7C,uBAAOgI,KAAKhI,IAALgI,CAAPhI;AADF,gBAEE,OAAO7pB,CAAP,EAAU,CAX8B;;AAY1C,qBAAOglE,WAAWU,OAAXV,EAAoBn7C,IAApBm7C,CAAP;AAdG,cAAP;AAtKiE;;AAyLnE,iBAAO,EAAP;AAvNF;;;;;;;;;;;;;ACeA;;AAKA;;AAMA;AAMA,cAAMY,cAAc,GAApB;AACA,cAAMC,2BAA2B,GAAjC;;AAEA,iBAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,gBAAM5hE,OAAO4hE,IAAIt8C,QAAjB;;AACA,cAAI,OAAOtlB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,mBAAOA,IAAP;AAHyB;;AAK3B,gBAAMw3C,QAAQl4C,yBAAcU,IAAdV,CAAd;AACA,iBAAOk4C,MAAMz2C,MAAb;AAzCF;;AA4CA,cAAM8gE,cAAN,CAAqB;AACnBnkE,sBAAY1B,GAAZ0B,EAA4B;AAAA,gBAAX0yB,IAAW,uEAAJ,EAAI;AAC1B,iBAAKp0B,GAAL,GAAWA,GAAX;AACA,iBAAK0hE,MAAL,GAAc,YAAYt3D,IAAZ,CAAiBpK,GAAjB,CAAd;AACA,iBAAK4Q,WAAL,GAAoB,KAAK8wD,MAAL,IAAettC,KAAKxjB,WAApB,IAAoC3P,OAAOwD,MAAPxD,CAAc,IAAdA,CAAxD;AACA,iBAAK4P,eAAL,GAAuBujB,KAAKvjB,eAALujB,IAAwB,KAA/C;;AACA,iBAAK0xC,MAAL,GACE1xC,KAAK0xC,MAAL1xC,IACA,SAAS2xC,qBAAT,GAAiC;AAC/B,qBAAO,IAAIn8C,cAAJ,EAAP;AAHJ;;AAMA,iBAAKo8C,SAAL,GAAiB,CAAjB;AACA,iBAAKC,eAAL,GAAuBhlE,OAAOwD,MAAPxD,CAAc,IAAdA,CAAvB;AAbiB;;AAgBnBilE,uBAAanzD,KAAbmzD,EAAoB3yD,GAApB2yD,EAAyBC,SAAzBD,EAAoC;AAClC,kBAAM9xC,OAAO;AACXrhB,mBADW;AAEXQ;AAFW,aAAb;;AAIA,uBAAWxS,IAAX,IAAmBolE,SAAnB,EAA8B;AAC5B/xC,mBAAKrzB,IAALqzB,IAAa+xC,UAAUplE,IAAVolE,CAAb/xC;AANgC;;AAQlC,mBAAO,KAAKzK,OAAL,CAAayK,IAAb,CAAP;AAxBiB;;AA2BnBgyC,sBAAYD,SAAZC,EAAuB;AACrB,mBAAO,KAAKz8C,OAAL,CAAaw8C,SAAb,CAAP;AA5BiB;;AA+BnBx8C,kBAAQyK,IAARzK,EAAc;AACZ,kBAAMi8C,MAAM,KAAKE,MAAL,EAAZ;AACA,kBAAMO,QAAQ,KAAKL,SAAL,EAAd;AACA,kBAAMM,iBAAkB,KAAKL,eAAL,CAAqBI,KAArB,IAA8B;AAAET;AAAF,aAAtD;AAEAA,gBAAI/7C,IAAJ+7C,CAAS,KAATA,EAAgB,KAAK5lE,GAArB4lE;AACAA,gBAAI/0D,eAAJ+0D,GAAsB,KAAK/0D,eAA3B+0D;;AACA,uBAAW/kC,QAAX,IAAuB,KAAKjwB,WAA5B,EAAyC;AACvC,oBAAM5P,QAAQ,KAAK4P,WAAL,CAAiBiwB,QAAjB,CAAd;;AACA,kBAAI,OAAO7/B,KAAP,KAAiB,WAArB,EAAkC;AAChC;AAHqC;;AAKvC4kE,kBAAIW,gBAAJX,CAAqB/kC,QAArB+kC,EAA+B5kE,KAA/B4kE;AAZU;;AAcZ,gBAAI,KAAKlE,MAAL,IAAe,WAAWttC,IAA1B,IAAkC,SAASA,IAA/C,EAAqD;AACnDwxC,kBAAIW,gBAAJX,CAAqB,OAArBA,EAA+B,SAAQxxC,KAAKrhB,KAAM,IAAGqhB,KAAK7gB,GAAL6gB,GAAW,CAAlC,EAA9BwxC;AACAU,6BAAeE,cAAfF,GAAgCZ,wBAAhCY;AAFF,mBAGO;AACLA,6BAAeE,cAAfF,GAAgCb,WAAhCa;AAlBU;;AAoBZV,gBAAI97C,YAAJ87C,GAAmB,aAAnBA;;AAEA,gBAAIxxC,KAAKqyC,OAAT,EAAkB;AAChBb,kBAAIp4C,OAAJo4C,GAAc,UAAUriD,GAAV,EAAe;AAC3B6Q,qBAAKqyC,OAALryC,CAAawxC,IAAIzjE,MAAjBiyB;AADF;AAvBU;;AA2BZwxC,gBAAI77C,kBAAJ67C,GAAyB,KAAKc,aAAL,CAAmB1kD,IAAnB,CAAwB,IAAxB,EAA8BqkD,KAA9B,CAAzBT;AACAA,gBAAIe,UAAJf,GAAiB,KAAK3zD,UAAL,CAAgB+P,IAAhB,CAAqB,IAArB,EAA2BqkD,KAA3B,CAAjBT;AAEAU,2BAAeM,iBAAfN,GAAmClyC,KAAKwyC,iBAAxCN;AACAA,2BAAeO,MAAfP,GAAwBlyC,KAAKyyC,MAA7BP;AACAA,2BAAeG,OAAfH,GAAyBlyC,KAAKqyC,OAA9BH;AACAA,2BAAer0D,UAAfq0D,GAA4BlyC,KAAKniB,UAAjCq0D;AAEAV,gBAAIv0D,IAAJu0D,CAAS,IAATA;AAEA,mBAAOS,KAAP;AApEiB;;AAuEnBp0D,qBAAWo0D,KAAXp0D,EAAkBsR,GAAlBtR,EAAuB;AACrB,kBAAMq0D,iBAAiB,KAAKL,eAAL,CAAqBI,KAArB,CAAvB;;AACA,gBAAI,CAACC,cAAL,EAAqB;AACnB;AAHmB;;AAKrBA,2BAAer0D,UAAfq0D,GAA4B/iD,GAA5B+iD;AA5EiB;;AA+EnBI,wBAAcL,KAAdK,EAAqBnjD,GAArBmjD,EAA0B;AACxB,kBAAMJ,iBAAiB,KAAKL,eAAL,CAAqBI,KAArB,CAAvB;;AACA,gBAAI,CAACC,cAAL,EAAqB;AACnB;AAHsB;;AAMxB,kBAAMV,MAAMU,eAAeV,GAA3B;;AACA,gBAAIA,IAAI57C,UAAJ47C,IAAkB,CAAlBA,IAAuBU,eAAeM,iBAA1C,EAA6D;AAC3DN,6BAAeM,iBAAfN;AACA,qBAAOA,eAAeM,iBAAtB;AATsB;;AAYxB,gBAAIhB,IAAI57C,UAAJ47C,KAAmB,CAAvB,EAA0B;AACxB;AAbsB;;AAgBxB,gBAAI,EAAES,SAAS,KAAKJ,eAAhB,CAAJ,EAAsC;AAGpC;AAnBsB;;AAsBxB,mBAAO,KAAKA,eAAL,CAAqBI,KAArB,CAAP;;AAGA,gBAAIT,IAAIzjE,MAAJyjE,KAAe,CAAfA,IAAoB,KAAKlE,MAA7B,EAAqC;AACnC4E,6BAAeG,OAAfH,GAAyBV,IAAIzjE,MAA7BmkE;AACA;AA3BsB;;AA6BxB,kBAAMQ,YAAYlB,IAAIzjE,MAAJyjE,IAAcH,WAAhC;AAKA,kBAAMsB,+BACJD,cAAcrB,WAAdqB,IACAR,eAAeE,cAAfF,KAAkCZ,wBAFpC;;AAIA,gBACE,CAACqB,4BAAD,IACAD,cAAcR,eAAeE,cAF/B,EAGE;AACAF,6BAAeG,OAAfH,GAAyBV,IAAIzjE,MAA7BmkE;AACA;AA3CsB;;AA8CxB,kBAAMpjE,QAAQyiE,eAAeC,GAAfD,CAAd;;AACA,gBAAImB,cAAcpB,wBAAlB,EAA4C;AAC1C,oBAAMsB,cAAcpB,IAAIzC,iBAAJyC,CAAsB,eAAtBA,CAApB;AACA,oBAAM33C,UAAU,2BAA2BxB,IAA3B,CAAgCu6C,WAAhC,CAAhB;AACAV,6BAAeO,MAAfP,CAAsB;AACpBvzD,uBAAOob,SAASF,QAAQ,CAARA,CAATE,EAAqB,EAArBA,CADa;AAEpBjrB;AAFoB,eAAtBojE;AAHF,mBAOO,IAAIpjE,KAAJ,EAAW;AAChBojE,6BAAeO,MAAfP,CAAsB;AACpBvzD,uBAAO,CADa;AAEpB7P;AAFoB,eAAtBojE;AADK,mBAKA;AACLA,6BAAeG,OAAfH,GAAyBV,IAAIzjE,MAA7BmkE;AA5DsB;AA/EP;;AA+InBW,wBAAcZ,KAAdY,EAAqB;AACnB,mBAAO,KAAKhB,eAAL,CAAqBI,KAArB,EAA4BT,GAAnC;AAhJiB;;AAmJnBsB,2BAAiBb,KAAjBa,EAAwB;AACtB,mBAAOb,SAAS,KAAKJ,eAArB;AApJiB;;AAuJnBkB,uBAAad,KAAbc,EAAoB;AAClB,kBAAMvB,MAAM,KAAKK,eAAL,CAAqBI,KAArB,EAA4BT,GAAxC;AACA,mBAAO,KAAKK,eAAL,CAAqBI,KAArB,CAAP;AACAT,gBAAIpyD,KAAJoyD;AA1JiB;;AAAA;;AA+JrB,cAAMwB,gBAAN,CAAuB;AACrB1lE,sBAAYiM,MAAZjM,EAAoB;AAClB,iBAAK2lE,OAAL,GAAe15D,MAAf;AACA,iBAAK25D,QAAL,GAAgB,IAAIzB,cAAJ,CAAmBl4D,OAAO3N,GAA1B,EAA+B;AAC7C4Q,2BAAajD,OAAOiD,WADyB;AAE7CC,+BAAiBlD,OAAOkD;AAFqB,aAA/B,CAAhB;AAIA,iBAAKwxD,eAAL,GAAuB10D,OAAOW,cAA9B;AACA,iBAAKouC,kBAAL,GAA0B,IAA1B;AACA,iBAAKklB,oBAAL,GAA4B,EAA5B;AATmB;;AAYrB2F,sCAA4B1qD,MAA5B0qD,EAAoC;AAClC,kBAAMzkE,IAAI,KAAK8+D,oBAAL,CAA0B5iD,OAA1B,CAAkCnC,MAAlC,CAAV;;AACA,gBAAI/Z,KAAK,CAAT,EAAY;AACV,mBAAK8+D,oBAAL,CAA0B3iD,MAA1B,CAAiCnc,CAAjC,EAAoC,CAApC;AAHgC;AAZf;;AAmBrBwgB,0BAAgB;AACdjkB,8BACE,CAAC,KAAKq9C,kBADRr9C,EAEE,yDAFFA;AAIA,iBAAKq9C,kBAAL,GAA0B,IAAI8qB,iCAAJ,CACxB,KAAKF,QADmB,EAExB,KAAKD,OAFmB,CAA1B;AAIA,mBAAO,KAAK3qB,kBAAZ;AA5BmB;;AA+BrBr4B,yBAAetR,KAAfsR,EAAsB9Q,GAAtB8Q,EAA2B;AACzB,kBAAMxH,SAAS,IAAI4qD,kCAAJ,CACb,KAAKH,QADQ,EAEbv0D,KAFa,EAGbQ,GAHa,CAAf;AAKAsJ,mBAAO6qD,QAAP7qD,GAAkB,KAAK0qD,2BAAL,CAAiCvlD,IAAjC,CAAsC,IAAtC,CAAlBnF;;AACA,iBAAK+kD,oBAAL,CAA0Bx+D,IAA1B,CAA+ByZ,MAA/B;;AACA,mBAAOA,MAAP;AAvCmB;;AA0CrBuG,4BAAkBlX,MAAlBkX,EAA0B;AACxB,iBAAKs5B,kBAAL,EAAyBh/B,MAAzB,CAAgCxR,MAAhC;;AAEA,uBAAW2Q,MAAX,IAAqB,KAAK+kD,oBAAL,CAA0Bl7D,KAA1B,CAAgC,CAAhC,CAArB,EAAyD;AACvDmW,qBAAOa,MAAPb,CAAc3Q,MAAd2Q;AAJsB;AA1CL;;AAAA;;;;AAoDvB,cAAM2qD,iCAAN,CAAwC;AACtC9lE,sBAAYimE,OAAZjmE,EAAqBiM,MAArBjM,EAA6B;AAC3B,iBAAK4lE,QAAL,GAAgBK,OAAhB;AAEA,kBAAMvzC,OAAO;AACXwyC,iCAAmB,KAAKgB,kBAAL,CAAwB5lD,IAAxB,CAA6B,IAA7B,CADR;AAEX6kD,sBAAQ,KAAKgB,OAAL,CAAa7lD,IAAb,CAAkB,IAAlB,CAFG;AAGXykD,uBAAS,KAAKqB,QAAL,CAAc9lD,IAAd,CAAmB,IAAnB,CAHE;AAIX/P,0BAAY,KAAK4qC,WAAL,CAAiB76B,IAAjB,CAAsB,IAAtB;AAJD,aAAb;AAMA,iBAAKkgD,IAAL,GAAYv0D,OAAO3N,GAAnB;AACA,iBAAK+nE,cAAL,GAAsBJ,QAAQvB,WAARuB,CAAoBvzC,IAApBuzC,CAAtB;AACA,iBAAKK,0BAAL,GAAkCt8D,oCAAlC;AACA,iBAAK02D,aAAL,GAAqBz0D,OAAO4B,YAAP5B,IAAuB,KAA5C;AACA,iBAAK8uC,cAAL,GAAsB9uC,OAAOnN,MAA7B;AACA,iBAAK6hE,eAAL,GAAuB10D,OAAOW,cAA9B;;AACA,gBAAI,CAAC,KAAK+zD,eAAN,IAAyB,CAAC,KAAKD,aAAnC,EAAkD;AAChD,mBAAKA,aAAL,GAAqB,IAArB;AAhByB;;AAmB3B,iBAAK7lB,qBAAL,GAA6B,KAA7B;AACA,iBAAKC,iBAAL,GAAyB,KAAzB;AAEA,iBAAKyrB,aAAL,GAAqB,EAArB;AACA,iBAAKpqB,SAAL,GAAiB,EAAjB;AACA,iBAAKF,KAAL,GAAa,KAAb;AACA,iBAAKwkB,YAAL,GAAoB3/D,SAApB;AACA,iBAAKo7C,SAAL,GAAiB,IAAjB;AAEA,iBAAK3rC,UAAL,GAAkB,IAAlB;AA7BoC;;AAgCtC21D,+BAAqB;AACnB,kBAAMM,mBAAmB,KAAKH,cAA9B;;AACA,kBAAMI,iBAAiB,KAAKb,QAAL,CAAcL,aAAd,CAA4BiB,gBAA5B,CAAvB;;AAEA,kBAAM/E,oBAAoB1hE,QAAQ;AAChC,qBAAO0mE,eAAehF,iBAAfgF,CAAiC1mE,IAAjC0mE,CAAP;AADF;;AAGA,kBAAM;AAAE/E,gCAAF;AAAsBC;AAAtB,gBACJC,qDAAiC;AAC/BH,+BAD+B;AAE/BzB,sBAAQ,KAAK4F,QAAL,CAAc5F,MAFS;AAG/BpzD,8BAAgB,KAAK+zD,eAHU;AAI/B9yD,4BAAc,KAAK6yD;AAJY,aAAjCkB,CADF;;AAQA,gBAAIF,kBAAJ,EAAwB;AACtB,mBAAK5mB,iBAAL,GAAyB,IAAzB;AAhBiB;;AAmBnB,iBAAKC,cAAL,GAAsB4mB,mBAAmB,KAAK5mB,cAA9C;AAEA,iBAAKmB,SAAL,GAAiB2lB,8CAA0BJ,iBAA1BI,CAAjB;;AAEA,gBAAI,KAAK/mB,iBAAT,EAA4B;AAK1B,mBAAK8qB,QAAL,CAAcH,YAAd,CAA2Be,gBAA3B;AA5BiB;;AA+BnB,iBAAKF,0BAAL,CAAgCh8D,OAAhC;AA/DoC;;AAkEtC67D,kBAAQ7jE,IAAR6jE,EAAc;AACZ,gBAAI7jE,IAAJ,EAAU;AACR,kBAAI,KAAK65C,SAAL,CAAer9C,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,sBAAMu9C,oBAAoB,KAAKF,SAAL,CAAersB,KAAf,EAA1B;;AACAusB,kCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,yBAAOgD,KAAKd,KAAd;AAAqB6Z,wBAAM;AAA3B,iBAA1BghC;AAFF,qBAGO;AACL,qBAAKkqB,aAAL,CAAmB7kE,IAAnB,CAAwBY,KAAKd,KAA7B;AALM;AADE;;AASZ,iBAAKy6C,KAAL,GAAa,IAAb;;AACA,gBAAI,KAAKsqB,aAAL,CAAmBznE,MAAnB,GAA4B,CAAhC,EAAmC;AACjC;AAXU;;AAaZ,uBAAWu9C,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAdU;;AAgBZ,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;AAlFoC;;AAqFtCsnE,mBAAS3lE,MAAT2lE,EAAiB;AACf,iBAAK3F,YAAL,GAAoB+B,8CAA0B/hE,MAA1B+hE,EAAkC,KAAKhC,IAAvCgC,CAApB;;AACA,iBAAK8D,0BAAL,CAAgC/7D,MAAhC,CAAuC,KAAKk2D,YAA5C;;AACA,uBAAWpkB,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB9xC,MAAlB8xC,CAAyB,KAAKokB,YAA9BpkB;AAJa;;AAMf,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;AACA,iBAAKynE,aAAL,CAAmBznE,MAAnB,GAA4B,CAA5B;AA5FoC;;AA+FtCq8C,sBAAYt5B,GAAZs5B,EAAiB;AACf,iBAAK5qC,UAAL,GAAkB;AAChBgB,sBAAQsQ,IAAItQ,MADI;AAEhBC,qBAAOqQ,IAAI6kD,gBAAJ7kD,GAAuBA,IAAIrQ,KAA3BqQ,GAAmC,KAAKk5B;AAF/B,aAAlB;AAhGoC;;AAsGtC,cAAI72B,QAAJ,GAAe;AACb,mBAAO,KAAKg4B,SAAZ;AAvGoC;;AA0GtC,cAAI15B,gBAAJ,GAAuB;AACrB,mBAAO,KAAKs4B,iBAAZ;AA3GoC;;AA8GtC,cAAIv4B,oBAAJ,GAA2B;AACzB,mBAAO,KAAKs4B,qBAAZ;AA/GoC;;AAkHtC,cAAIp4B,aAAJ,GAAoB;AAClB,mBAAO,KAAKs4B,cAAZ;AAnHoC;;AAsHtC,cAAIz4B,YAAJ,GAAmB;AACjB,mBAAO,KAAKgkD,0BAAL,CAAgCl8D,OAAvC;AAvHoC;;AA0HtC,gBAAMgR,IAAN,GAAa;AACX,gBAAI,KAAKqlD,YAAT,EAAuB;AACrB,oBAAM,KAAKA,YAAX;AAFS;;AAIX,gBAAI,KAAK8F,aAAL,CAAmBznE,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,oBAAM0C,QAAQ,KAAK+kE,aAAL,CAAmBz2C,KAAnB,EAAd;;AACA,qBAAO;AAAExwB,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAAP;AANS;;AAQX,gBAAI,KAAK4gC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AATS;;AAWX,kBAAMghC,oBAAoBryC,oCAA1B;;AACA,iBAAKmyC,SAAL,CAAez6C,IAAf,CAAoB26C,iBAApB;;AACA,mBAAOA,kBAAkBjyC,OAAzB;AAvIoC;;AA0ItC4R,iBAAOxR,MAAPwR,EAAe;AACb,iBAAKigC,KAAL,GAAa,IAAb;;AACA,iBAAKqqB,0BAAL,CAAgC/7D,MAAhC,CAAuCC,MAAvC;;AACA,uBAAW6xC,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAJW;;AAMb,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;;AACA,gBAAI,KAAK8mE,QAAL,CAAcJ,gBAAd,CAA+B,KAAKa,cAApC,CAAJ,EAAyD;AACvD,mBAAKT,QAAL,CAAcH,YAAd,CAA2B,KAAKY,cAAhC;AARW;;AAUb,iBAAKrrB,kBAAL,GAA0B,IAA1B;AApJoC;;AAAA;;AAyJxC,cAAM+qB,kCAAN,CAAyC;AACvC/lE,sBAAYimE,OAAZjmE,EAAqBqR,KAArBrR,EAA4B6R,GAA5B7R,EAAiC;AAC/B,iBAAK4lE,QAAL,GAAgBK,OAAhB;AAEA,kBAAMvzC,OAAO;AACXyyC,sBAAQ,KAAKgB,OAAL,CAAa7lD,IAAb,CAAkB,IAAlB,CADG;AAEXykD,uBAAS,KAAKqB,QAAL,CAAc9lD,IAAd,CAAmB,IAAnB,CAFE;AAGX/P,0BAAY,KAAK4qC,WAAL,CAAiB76B,IAAjB,CAAsB,IAAtB;AAHD,aAAb;AAKA,iBAAKkgD,IAAL,GAAYyF,QAAQ3nE,GAApB;AACA,iBAAKqoE,UAAL,GAAkBV,QAAQzB,YAARyB,CAAqB50D,KAArB40D,EAA4Bp0D,GAA5Bo0D,EAAiCvzC,IAAjCuzC,CAAlB;AACA,iBAAK9pB,SAAL,GAAiB,EAAjB;AACA,iBAAKI,YAAL,GAAoB,IAApB;AACA,iBAAKN,KAAL,GAAa,KAAb;AACA,iBAAKwkB,YAAL,GAAoB3/D,SAApB;AAEA,iBAAKyP,UAAL,GAAkB,IAAlB;AACA,iBAAKy1D,QAAL,GAAgB,IAAhB;AAjBqC;;AAoBvCY,mBAAS;AACP,iBAAKZ,QAAL,GAAgB,IAAhB;AArBqC;;AAwBvCG,kBAAQ7jE,IAAR6jE,EAAc;AACZ,kBAAM3kE,QAAQc,KAAKd,KAAnB;;AACA,gBAAI,KAAK26C,SAAL,CAAer9C,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,oBAAMu9C,oBAAoB,KAAKF,SAAL,CAAersB,KAAf,EAA1B;;AACAusB,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAA1BghC;AAFF,mBAGO;AACL,mBAAKE,YAAL,GAAoB/6C,KAApB;AANU;;AAQZ,iBAAKy6C,KAAL,GAAa,IAAb;;AACA,uBAAWI,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAVU;;AAYZ,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;;AACA,iBAAK8nE,MAAL;AArCqC;;AAwCvCR,mBAAS3lE,MAAT2lE,EAAiB;AACf,iBAAK3F,YAAL,GAAoB+B,8CAA0B/hE,MAA1B+hE,EAAkC,KAAKhC,IAAvCgC,CAApB;;AACA,uBAAWnmB,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB9xC,MAAlB8xC,CAAyB,KAAKokB,YAA9BpkB;AAHa;;AAKf,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;AACA,iBAAKy9C,YAAL,GAAoB,IAApB;AA9CqC;;AAiDvCpB,sBAAYt5B,GAAZs5B,EAAiB;AACf,gBAAI,CAAC,KAAK54B,oBAAV,EAAgC;AAC9B,mBAAKhS,UAAL,GAAkB;AAAEgB,wBAAQsQ,IAAItQ;AAAd,eAAlB;AAFa;AAjDsB;;AAuDvC,cAAIgR,oBAAJ,GAA2B;AACzB,mBAAO,KAAP;AAxDqC;;AA2DvC,gBAAMnH,IAAN,GAAa;AACX,gBAAI,KAAKqlD,YAAT,EAAuB;AACrB,oBAAM,KAAKA,YAAX;AAFS;;AAIX,gBAAI,KAAKlkB,YAAL,KAAsB,IAA1B,EAAgC;AAC9B,oBAAM/6C,QAAQ,KAAK+6C,YAAnB;AACA,mBAAKA,YAAL,GAAoB,IAApB;AACA,qBAAO;AAAEj9C,uBAAOkC,KAAT;AAAgB6Z,sBAAM;AAAtB,eAAP;AAPS;;AASX,gBAAI,KAAK4gC,KAAT,EAAgB;AACd,qBAAO;AAAE38C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAAP;AAVS;;AAYX,kBAAMghC,oBAAoBryC,oCAA1B;;AACA,iBAAKmyC,SAAL,CAAez6C,IAAf,CAAoB26C,iBAApB;;AACA,mBAAOA,kBAAkBjyC,OAAzB;AAzEqC;;AA4EvC4R,iBAAOxR,MAAPwR,EAAe;AACb,iBAAKigC,KAAL,GAAa,IAAb;;AACA,uBAAWI,iBAAX,IAAgC,KAAKF,SAArC,EAAgD;AAC9CE,gCAAkB/xC,OAAlB+xC,CAA0B;AAAE/8C,uBAAOwB,SAAT;AAAoBua,sBAAM;AAA1B,eAA1BghC;AAHW;;AAKb,iBAAKF,SAAL,CAAer9C,MAAf,GAAwB,CAAxB;;AACA,gBAAI,KAAK8mE,QAAL,CAAcJ,gBAAd,CAA+B,KAAKmB,UAApC,CAAJ,EAAqD;AACnD,mBAAKf,QAAL,CAAcH,YAAd,CAA2B,KAAKkB,UAAhC;AAPW;;AASb,iBAAKC,MAAL;AArFqC;;AAAA;;;;;;;;;;;;;ACzYzC;;AAKA;;AAOA;;AAMA,iBAASC,kBAAT,CAA4B1F,OAA5B,EAAqChyD,eAArC,EAAsD23D,eAAtD,EAAuE;AACrE,iBAAO;AACLxF,oBAAQ,KADH;AAELH,mBAFK;AAGL4F,oBAAQD,iBAAiBC,MAHpB;AAIL79B,kBAAM,MAJD;AAKL89B,yBAAa73D,kBAAkB,SAAlBA,GAA8B,aALtC;AAML83D,sBAAU;AANL,WAAP;AAlCF;;AA4CA,iBAASC,aAAT,CAAuBh4D,WAAvB,EAAoC;AAClC,gBAAMiyD,UAAU,IAAIgG,OAAJ,EAAhB;;AACA,qBAAWhoC,QAAX,IAAuBjwB,WAAvB,EAAoC;AAClC,kBAAM5P,QAAQ4P,YAAYiwB,QAAZjwB,CAAd;;AACA,gBAAI,OAAO5P,KAAP,KAAiB,WAArB,EAAkC;AAChC;AAHgC;;AAKlC6hE,oBAAQxT,MAARwT,CAAehiC,QAAfgiC,EAAyB7hE,KAAzB6hE;AAPgC;;AASlC,iBAAOA,OAAP;AArDF;;AAyDA,cAAMiG,cAAN,CAAqB;AACnBpnE,sBAAYiM,MAAZjM,EAAoB;AAClB,iBAAKiM,MAAL,GAAcA,MAAd;AACA,iBAAK+zD,MAAL,GAAc,YAAYt3D,IAAZ,CAAiBuD,OAAO3N,GAAxB,CAAd;AACA,iBAAK4Q,WAAL,GAAoB,KAAK8wD,MAAL,IAAe/zD,OAAOiD,WAAtB,IAAsC,EAA1D;AAEA,iBAAK8rC,kBAAL,GAA0B,IAA1B;AACA,iBAAKklB,oBAAL,GAA4B,EAA5B;AAPiB;;AAUnB,cAAIzkB,sBAAJ,GAA6B;AAC3B,mBAAO,KAAKT,kBAAL,EAAyBU,OAAzB,IAAoC,CAA3C;AAXiB;;AAcnB95B,0BAAgB;AACdjkB,8BACE,CAAC,KAAKq9C,kBADRr9C,EAEE,uDAFFA;AAIA,iBAAKq9C,kBAAL,GAA0B,IAAIqsB,oBAAJ,CAAyB,IAAzB,CAA1B;AACA,mBAAO,KAAKrsB,kBAAZ;AApBiB;;AAuBnBr4B,yBAAetR,KAAfsR,EAAsB9Q,GAAtB8Q,EAA2B;AACzB,gBAAI9Q,OAAO,KAAK4pC,sBAAhB,EAAwC;AACtC,qBAAO,IAAP;AAFuB;;AAIzB,kBAAMtgC,SAAS,IAAImsD,yBAAJ,CAA8B,IAA9B,EAAoCj2D,KAApC,EAA2CQ,GAA3C,CAAf;;AACA,iBAAKquD,oBAAL,CAA0Bx+D,IAA1B,CAA+ByZ,MAA/B;;AACA,mBAAOA,MAAP;AA7BiB;;AAgCnBuG,4BAAkBlX,MAAlBkX,EAA0B;AACxB,gBAAI,KAAKs5B,kBAAT,EAA6B;AAC3B,mBAAKA,kBAAL,CAAwBh/B,MAAxB,CAA+BxR,MAA/B;AAFsB;;AAIxB,uBAAW2Q,MAAX,IAAqB,KAAK+kD,oBAAL,CAA0Bl7D,KAA1B,CAAgC,CAAhC,CAArB,EAAyD;AACvDmW,qBAAOa,MAAPb,CAAc3Q,MAAd2Q;AALsB;AAhCP;;AAAA;;;;AA2CrB,cAAMksD,oBAAN,CAA2B;AACzBrnE,sBAAYm3C,MAAZn3C,EAAoB;AAClB,iBAAKg8C,OAAL,GAAe7E,MAAf;AACA,iBAAKsf,OAAL,GAAe,IAAf;AACA,iBAAK/a,OAAL,GAAe,CAAf;AACA,iBAAKQ,SAAL,GAAiB,IAAjB;AACA,kBAAMjwC,SAASkrC,OAAOlrC,MAAtB;AACA,iBAAKs7D,gBAAL,GAAwBt7D,OAAOkD,eAAPlD,IAA0B,KAAlD;AACA,iBAAK8uC,cAAL,GAAsB9uC,OAAOnN,MAA7B;AACA,iBAAKgiE,kBAAL,GAA0B92D,oCAA1B;AACA,iBAAK02D,aAAL,GAAqBz0D,OAAO4B,YAAP5B,IAAuB,KAA5C;AACA,iBAAK00D,eAAL,GAAuB10D,OAAOW,cAA9B;;AACA,gBAAI,CAAC,KAAK+zD,eAAN,IAAyB,CAAC,KAAKD,aAAnC,EAAkD;AAChD,mBAAKA,aAAL,GAAqB,IAArB;AAZgB;;AAelB,gBAAI,OAAO8G,eAAP,KAA2B,WAA/B,EAA4C;AAC1C,mBAAKC,gBAAL,GAAwB,IAAID,eAAJ,EAAxB;AAhBgB;;AAkBlB,iBAAK3sB,qBAAL,GAA6B,CAAC5uC,OAAO6B,aAArC;AACA,iBAAKgtC,iBAAL,GAAyB,CAAC7uC,OAAO4B,YAAjC;AAEA,iBAAK65D,QAAL,GAAgBR,cAAc,KAAKlrB,OAAL,CAAa9sC,WAA3Bg4D,CAAhB;AAEA,kBAAM5oE,MAAM2N,OAAO3N,GAAnB;AACAulB,kBACEvlB,GADFulB,EAEEgjD,mBACE,KAAKa,QADPb,EAEE,KAAKU,gBAFPV,EAGE,KAAKY,gBAHPZ,CAFFhjD,EAQGrV,IARHqV,CAQQ+D,YAAY;AAChB,kBAAI,CAAC66C,2CAAuB76C,SAASnnB,MAAhCgiE,CAAL,EAA8C;AAC5C,sBAAMD,8CAA0B56C,SAASnnB,MAAnC+hE,EAA2ClkE,GAA3CkkE,CAAN;AAFc;;AAIhB,mBAAK/L,OAAL,GAAe7uC,SAAS+J,IAAT/J,CAAcpM,SAAdoM,EAAf;;AACA,mBAAKk5C,kBAAL,CAAwBx2D,OAAxB;;AAEA,oBAAMm3D,oBAAoB1hE,QAAQ;AAChC,uBAAO6nB,SAASu5C,OAATv5C,CAAiBzd,GAAjByd,CAAqB7nB,IAArB6nB,CAAP;AADF;;AAGA,oBAAM;AAAE85C,kCAAF;AAAsBC;AAAtB,kBACJC,qDAAiC;AAC/BH,iCAD+B;AAE/BzB,wBAAQ,KAAKhkB,OAAL,CAAagkB,MAFU;AAG/BpzD,gCAAgB,KAAK+zD,eAHU;AAI/B9yD,8BAAc,KAAK6yD;AAJY,eAAjCkB,CADF;AAQA,mBAAK9mB,iBAAL,GAAyB4mB,kBAAzB;AAEA,mBAAK3mB,cAAL,GAAsB4mB,mBAAmB,KAAK5mB,cAA9C;AAEA,mBAAKmB,SAAL,GAAiB2lB,8CAA0BJ,iBAA1BI,CAAjB;;AAIA,kBAAI,CAAC,KAAKhnB,qBAAN,IAA+B,KAAKC,iBAAxC,EAA2D;AACzD,qBAAK9+B,MAAL,CAAY,IAAIrb,oBAAJ,CAAmB,wBAAnB,CAAZ;AA3Bc;AARpB,eAsCGiP,KAtCHiU,CAsCS,KAAKi9C,kBAAL,CAAwBv2D,MAtCjCsZ;AAwCA,iBAAKtT,UAAL,GAAkB,IAAlB;AAjEuB;;AAoEzB,cAAI+R,YAAJ,GAAmB;AACjB,mBAAO,KAAKw+C,kBAAL,CAAwB12D,OAA/B;AArEuB;;AAwEzB,cAAI8Z,QAAJ,GAAe;AACb,mBAAO,KAAKg4B,SAAZ;AAzEuB;;AA4EzB,cAAIz5B,aAAJ,GAAoB;AAClB,mBAAO,KAAKs4B,cAAZ;AA7EuB;;AAgFzB,cAAIv4B,gBAAJ,GAAuB;AACrB,mBAAO,KAAKs4B,iBAAZ;AAjFuB;;AAoFzB,cAAIv4B,oBAAJ,GAA2B;AACzB,mBAAO,KAAKs4B,qBAAZ;AArFuB;;AAwFzB,gBAAMz/B,IAAN,GAAa;AACX,kBAAM,KAAK0lD,kBAAL,CAAwB12D,OAA9B;AACA,kBAAM;AAAE9K,mBAAF;AAAS+b;AAAT,gBAAkB,MAAM,KAAKo7C,OAAL,CAAar7C,IAAb,EAA9B;;AACA,gBAAIC,IAAJ,EAAU;AACR,qBAAO;AAAE/b,qBAAF;AAAS+b;AAAT,eAAP;AAJS;;AAMX,iBAAKqgC,OAAL,IAAgBp8C,MAAM4C,UAAtB;;AACA,gBAAI,KAAKqO,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgB;AACdgB,wBAAQ,KAAKmqC,OADC;AAEdlqC,uBAAO,KAAKupC;AAFE,eAAhB;AARS;;AAaX,kBAAM13C,SAAS,IAAIvB,UAAJ,CAAexC,KAAf,EAAsB+D,MAArC;AACA,mBAAO;AAAE/D,qBAAO+D,MAAT;AAAiBgY,oBAAM;AAAvB,aAAP;AAtGuB;;AAyGzBW,iBAAOxR,MAAPwR,EAAe;AACb,gBAAI,KAAKy6C,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaz6C,MAAb,CAAoBxR,MAApB;AAFW;;AAIb,gBAAI,KAAKi9D,gBAAT,EAA2B;AACzB,mBAAKA,gBAAL,CAAsB31D,KAAtB;AALW;AAzGU;;AAAA;;AAoH3B,cAAMw1D,yBAAN,CAAgC;AAC9BtnE,sBAAYm3C,MAAZn3C,EAAoBqR,KAApBrR,EAA2B6R,GAA3B7R,EAAgC;AAC9B,iBAAKg8C,OAAL,GAAe7E,MAAf;AACA,iBAAKsf,OAAL,GAAe,IAAf;AACA,iBAAK/a,OAAL,GAAe,CAAf;AACA,kBAAMzvC,SAASkrC,OAAOlrC,MAAtB;AACA,iBAAKs7D,gBAAL,GAAwBt7D,OAAOkD,eAAPlD,IAA0B,KAAlD;AACA,iBAAK40D,eAAL,GAAuB72D,oCAAvB;AACA,iBAAK6wC,qBAAL,GAA6B,CAAC5uC,OAAO6B,aAArC;;AAEA,gBAAI,OAAO05D,eAAP,KAA2B,WAA/B,EAA4C;AAC1C,mBAAKC,gBAAL,GAAwB,IAAID,eAAJ,EAAxB;AAV4B;;AAa9B,iBAAKE,QAAL,GAAgBR,cAAc,KAAKlrB,OAAL,CAAa9sC,WAA3Bg4D,CAAhB;;AACA,iBAAKQ,QAAL,CAAc/Z,MAAd,CAAqB,OAArB,EAA+B,SAAQt8C,KAAM,IAAGQ,MAAM,CAAxB,EAA9B;;AAEA,kBAAMvT,MAAM2N,OAAO3N,GAAnB;AACAulB,kBACEvlB,GADFulB,EAEEgjD,mBACE,KAAKa,QADPb,EAEE,KAAKU,gBAFPV,EAGE,KAAKY,gBAHPZ,CAFFhjD,EAQGrV,IARHqV,CAQQ+D,YAAY;AAChB,kBAAI,CAAC66C,2CAAuB76C,SAASnnB,MAAhCgiE,CAAL,EAA8C;AAC5C,sBAAMD,8CAA0B56C,SAASnnB,MAAnC+hE,EAA2ClkE,GAA3CkkE,CAAN;AAFc;;AAIhB,mBAAK3B,eAAL,CAAqBv2D,OAArB;;AACA,mBAAKmsD,OAAL,GAAe7uC,SAAS+J,IAAT/J,CAAcpM,SAAdoM,EAAf;AAbJ,eAeGhY,KAfHiU,CAeS,KAAKg9C,eAAL,CAAqBt2D,MAf9BsZ;AAiBA,iBAAKtT,UAAL,GAAkB,IAAlB;AAnC4B;;AAsC9B,cAAIgS,oBAAJ,GAA2B;AACzB,mBAAO,KAAKs4B,qBAAZ;AAvC4B;;AA0C9B,gBAAMz/B,IAAN,GAAa;AACX,kBAAM,KAAKylD,eAAL,CAAqBz2D,OAA3B;AACA,kBAAM;AAAE9K,mBAAF;AAAS+b;AAAT,gBAAkB,MAAM,KAAKo7C,OAAL,CAAar7C,IAAb,EAA9B;;AACA,gBAAIC,IAAJ,EAAU;AACR,qBAAO;AAAE/b,qBAAF;AAAS+b;AAAT,eAAP;AAJS;;AAMX,iBAAKqgC,OAAL,IAAgBp8C,MAAM4C,UAAtB;;AACA,gBAAI,KAAKqO,UAAT,EAAqB;AACnB,mBAAKA,UAAL,CAAgB;AAAEgB,wBAAQ,KAAKmqC;AAAf,eAAhB;AARS;;AAUX,kBAAMr4C,SAAS,IAAIvB,UAAJ,CAAexC,KAAf,EAAsB+D,MAArC;AACA,mBAAO;AAAE/D,qBAAO+D,MAAT;AAAiBgY,oBAAM;AAAvB,aAAP;AArD4B;;AAwD9BW,iBAAOxR,MAAPwR,EAAe;AACb,gBAAI,KAAKy6C,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaz6C,MAAb,CAAoBxR,MAApB;AAFW;;AAIb,gBAAI,KAAKi9D,gBAAT,EAA2B;AACzB,mBAAKA,gBAAL,CAAsB31D,KAAtB;AALW;AAxDe;;AAAA;;;;;;;;;ACxNhC;;;;AACA;;;;AAEA;;;;AACA;;AACA;;;AACA;;;AACA;;AACA;;AACA;;AACA;;;;;AACA;;AACA;;;AACA;;;AACA9mB;;;AAHA;;;;AAMA;;;;AACA28E;;;;AAEA;;;;;AACA;;AACA;;;;;;mC5BZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A6BYA;;AAgBA;;AASA;;AAWA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA,cAAMC,eAC8B,UADpC;AAGA,cAAMC,aAC8B,WADpC;AAgB+C;AAC7C,cAAgCp9D,iBAAhC,EAA0C;AACxC,kBAAM;AAAEs1D;AAAF,gBAAoB+H,mBAAOA,CAAC,EAADA,CAAjC;;AAEAn8D,iDAA2BS,UAAU;AACnC,qBAAO,IAAI2zD,aAAJ,CAAkB3zD,MAAlB,CAAP;AADF;AAHF,iBAMO;AACL,kBAAM;AAAEs5D;AAAF,gBAAuBoC,mBAAOA,CAAC,EAADA,CAApC;;AACA,kBAAM;AAAEV;AAAF,gBAAqBU,mBAAOA,CAAC,EAADA,CAAlC;;AAEAn8D,iDAA2BS,UAAU;AACnC,kBAAIsb,oCAAgBtb,OAAO9N,GAAvBopB,CAAJ,EAAiC;AAC/B,uBAAO,IAAI0/C,cAAJ,CAAmBh7D,MAAnB,CAAP;AAFiC;;AAInC,qBAAO,IAAIs5D,gBAAJ,CAAqBt5D,MAArB,CAAP;AAJF;AAX2C;AArF/C;;;;;;;K7BUA;AAAA;CAVA","names":["module","define","exports","root","__w_pdfjs_require__","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","_isValidProtocol","url","protocol","createValidAbsoluteUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","IsLittleEndianCached","isEvalSupported","Function","IsEvalSupportedCached","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ii","charAt","escapeString","replace","isAscii","test","stringToUTF16BEString","buf","char","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","isSettled","get","promise","Promise","resolve","reject","reason","isNodeJS","process","versions","nw","electron","type","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","NodeCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","src","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","window","location","href","Buffer","isNaN","rangeChunkSize","CMapReaderFactory","StandardFontDataFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","enableXfa","docBaseUrl","isDataScheme","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","ownerDocument","globalThis","document","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","fromPort","_worker","docId","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","cMapUrl","standardFontDataUrl","idCounters","doc","onPassword","onProgress","onUnsupportedFeature","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","deprecated","fingerprints","stats","streamTypes","fontTypes","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_ownerDocument","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","annotations","annotation","titleObj","contentsObj","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","annotationCanvasMap","arguments","renderInteractiveForms","includeAnnotationStorage","time","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","Set","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","disableCombineTextItems","includeMarkedContent","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_structTreePromise","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","serializable","streamReader","RenderingCancelledException","setTimeout","curCacheKey","curIntentState","LoopbackPort","_listeners","_deferred","postMessage","transfers","event","structuredClone","call","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","__non_webpack_require__","pdfjsFilePath","currentScript","createCDNWrapper","wrapper","createObjectURL","Blob","_workerPorts","WeakMap","has","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","getWorkerSrc","docStats","pageCache","pagePromises","metadataPromise","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","evt","onPull","close","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","freeze","fetch","featureId","cachedPromise","num","gen","filename","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","ensureObj","objId","settled","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","_canvas","canvas","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","SVG_NS","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","BaseCanvasFactory","_document","_createCanvas","width","height","createElement","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","ok","statusText","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","createElementNS","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","clone","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","isPdfFile","getFilenameFromUrl","anchor","query","lastIndexOf","getPdfFilenameFromUrl","defaultFilename","reURI","reFilename","splitURI","exec","suggestedFilename","includes","started","times","now","start","outBuf","longest","duration","padEnd","removeScriptElement","script","onload","remove","onerror","head","documentElement","appendChild","pdfDateStringRegex","PDFDateString","toDateObject","input","RegExp","matches","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","getXfaPageViewport","xfaPage","attributes","style","context","getContext","reset","canvasAndContext","svg","setAttribute","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","rules","fontsToLoad","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","getImageData","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","visibility","position","top","left","span","fontFamily","body","translatedData","compiledGlyphs","cssFontInfo","FontFace","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","cmd","fs","readFile","Canvas","createCanvas","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","defaultValue","setValue","modified","entry","val","entries","_setModified","getAll","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","LINEWIDTH_SCALE_FACTOR","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","translate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","f","ctxSetTransform","ctxResetTransform","ctxRotate","angle","cp1x","cp1y","cp2x","cp2y","addContextCurrentTransform","_transformStack","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","_originalTransform","_originalSetTransform","_originalResetTransform","_transformMatrix","desc","getOwnPropertyDescriptor","getPrototypeOf","_setLineWidth","_getLineWidth","getLineWidth","_","getCurrentTransform","getCurrentTransformInverse","ad_bc","bc_ad","old","prev","pop","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","j0","points","lineSize","data0","elem","mask","count","sum","steps","Int32Array","outlines","coords","p0","step","pp","drawOutline","k","kk","o","l","ll","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","Infinity","getClippedPathBoundingBox","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","hasTransferMaps","putBinaryImageMask","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","layerBox","layerWidth","layerHeight","drawImage","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedGetSinglePixelWidth","fillRect","transparentCanvas","compositeCtx","_combinedScaleFactor","hypot","beginLayout","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","inSMaskMode","endLayout","_scaleImage","img","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","tmpCanvas","tmpCtx","newWidth","newHeight","clearRect","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","imageSmoothingEnabled","inverse","getPattern","round","limit","dashArray","dashPhase","flatness","states","state","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","floor","ops","startX","startY","xw","yh","consumePath","getSinglePixelWidth","needRestore","paths","pendingTextPaths","path","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","patternTransform","resetLineWidthToOne","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","isArray","group","currentCtx","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","getCanvasPosition","appendImage","tag","visible","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","applyBoundingBox","Path2D","region","BaseShadingPattern","RadialAxialShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","createLinearGradient","createRadialGradient","colorStop","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","baseState","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","from","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_begin","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","output","walk","node","shouldBuildText","child","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","sign","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","quadPoints","savedRect","quadPoint","_createPopup","trigger","popupElement","PopupElement","modificationDate","richText","hideWrapper","popup","_renderQuadrilaterals","className","quadrilateral","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","getElementById","getElementsByName","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","link","addLinkAttributes","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","dispatchEvent","Event","hasPopup","alt","dataset","l10nId","l10nArgs","JSON","stringify","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","_setEventListeners","getter","_setBackgroundColor","_dispatchEventFromSandbox","jsEvent","setColor","styleName","target","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","removeAttribute","required","bgColor","fgColor","textColor","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","multiLine","disabled","readOnly","tabIndex","defaultFieldValue","blurListener","scrollLeft","activeElement","selRange","selStart","selEnd","setSelectionRange","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","textAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","fontSizeStyle","selectElement","combo","multiSelect","multiple","option","selected","optionElement","displayValue","isExport","selectedIndex","filter","getItems","multipleSelection","findIndex","insertBefore","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","pinned","BACKGROUND_ENLIGHT","hideElement","dir","dateObject","toLocaleDateString","toLocaleTimeString","XfaLayer","xfaHtml","html","lastChild","contents","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","rendered","renderedElement","prepend","setAnnotationCanvasMap","update","ownMatrix","elements","ownTransform","querySelector","firstChild","nodeName","replaceChild","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","R","B","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","setupStorage","xfaOn","xfaOff","getAttribute","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","AllWhitespaceRegexp","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","tx","_viewport","atan2","fontName","fontHeight","fontAscent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_textContentStream","_layoutText","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","expandBounds","divProperties","Float64Array","jj","boxScale","boxes","x1New","x2New","expandBoundsLTR","fakeBoundary","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","_processItems","styleCache","len","parentNode","_render","timeout","mozOpaque","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderTextLayer","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","PDFNodeStream","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_modules__","pdfjsVersion","pdfjsBuild","require"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isSameOrigin,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = require(\"dommatrix/dist/dommatrix.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream = __non_webpack_require__(\n      \"web-streams-polyfill/dist/ponyfill.js\"\n    ).ReadableStream;\n  })();\n\n  // Support: Firefox<94, Chrome<98, Safari<15.4, Node.js<17.0.0\n  (function checkStructuredClone() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `structuredClone`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.structuredClone) {\n      return;\n    }\n    require(\"core-js/web/structured-clone.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type {IPDFStreamFactory}\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    const event = {\n      data:\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL\") ||\n        transfers\n          ? structuredClone(obj, transfers)\n          : structuredClone(obj),\n    };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([255]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this._passwordCapability.reject(password);\n          } else {\n            this._passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    const obj = this.#objs[objId];\n    if (obj) {\n      return obj;\n    }\n    return (this.#objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport { BaseException, stringToBytes, Util, warn } from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this._storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  if (ctx._transformStack) {\n    // Reset the transform stack.\n    ctx._transformStack = [];\n  }\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    if (this._transformStack.length === 0) {\n      warn(\"Tried to restore a ctx when the stack was already empty.\");\n    }\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.floor(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n        canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let { width, height } = getRectDims(data.rect);\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          elementData.userValue = event.target.value;\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.formattedValue = \"\";\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data,\n                willCommit: false,\n                selStart: selectionStart,\n                selEnd: selectionEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      const { width, height } = getRectDims(data.rect);\n      if (width <= 0 || height <= 0) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        const scale = textDivProperties.canvasWidth / width;\n        if (this._enhanceTextSelection) {\n          textDivProperties.scale = scale;\n        }\n        transform = `scaleX(${scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const createObjectURL = function (\n    data,\n    contentType = \"\",\n    forceDataSchema = false\n  ) {\n    if (\n      URL.createObjectURL &&\n      typeof Blob !== \"undefined\" &&\n      !forceDataSchema\n    ) {\n      return URL.createObjectURL(new Blob([data], { type: contentType }));\n    }\n    // Blob/createObjectURL is not available, falling back to data schema.\n    const digits =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (typeof glyph === \"number\") {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  loadScript,\n  LoopbackPort,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  renderTextLayer,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"]},"metadata":{},"sourceType":"script"}