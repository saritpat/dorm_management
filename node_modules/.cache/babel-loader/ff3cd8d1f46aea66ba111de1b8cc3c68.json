{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sawid\\\\Desktop\\\\Asset\\\\Project\\\\dorm\\\\src\\\\components\\\\routes\\\\AdminRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport LoadingToRedirect from './LoadingToRedirect';\nimport { currentAdmin } from '../function.components/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [ok, setOk] = useState(false);\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token).then(res => {\n        console.log(res);\n        setOk(true);\n      }).catch(err => {\n        console.log(err);\n        set;\n      });\n    }\n  }, []);\n  return ok ? children : /*#__PURE__*/_jsxDEV(LoadingToRedirect, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminRoute, \"LAoOx/54HAvFJxBdbnGwxtrf43U=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminRoute;\nexport default AdminRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"sources":["C:/Users/Sawid/Desktop/Asset/Project/dorm/src/components/routes/AdminRoute.js"],"names":["React","useState","useEffect","useSelector","LoadingToRedirect","currentAdmin","AdminRoute","children","user","state","ok","setOk","token","then","res","console","log","catch","err","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAWL,WAAW,CAAEM,KAAD,KAAY,EAAC,GAAGA;AAAJ,GAAZ,CAAD,CAA5B;AACA,QAAM,CAACC,EAAD,EAAMC,KAAN,IAAeV,QAAQ,CAAC,KAAD,CAA7B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACR,QAAIM,IAAI,IAAIA,IAAI,CAACI,KAAjB,EAAwB;AACnBP,MAAAA,YAAY,CAACG,IAAI,CAACI,KAAN,CAAZ,CACCC,IADD,CACMC,GAAG,IAAI;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAH,QAAAA,KAAK,CAAC,IAAD,CAAL;AACR,OAJD,EAKCM,KALD,CAKOC,GAAG,IAAI;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAC,QAAAA,GAAG;AACX,OARD;AASJ;AACR,GAZQ,EAYN,EAZM,CAAT;AAcA,SAAOT,EAAE,GACPH,QADO,gBAEP,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAFF;AAGD,CArBD;;GAAMD,U;UACaH,W;;;KADbG,U;AAuBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport LoadingToRedirect from './LoadingToRedirect'\r\nimport { currentAdmin } from '../function.components/auth'\r\n\r\nconst AdminRoute = ({children}) => {\r\n  const { user } = useSelector((state) => ({...state}))\r\n  const [ok , setOk] = useState(false)\r\n\r\n  useEffect(() => {\r\n          if (user && user.token) {\r\n               currentAdmin(user.token)\r\n               .then(res => {\r\n                        console.log(res)\r\n                        setOk(true)\r\n               })\r\n               .catch(err => {\r\n                        console.log(err)\r\n                        set\r\n               })\r\n          }\r\n  }, [])\r\n\r\n  return ok\r\n  ? children\r\n  : <LoadingToRedirect/> \r\n}\r\n\r\nexport default AdminRoute"]},"metadata":{},"sourceType":"module"}